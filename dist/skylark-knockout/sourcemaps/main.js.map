{"version":3,"sources":["main.js"],"names":["define","ko","koExports","exportSymbol","koPath","object","tokens","split","target","i","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","foreachHidesDestroyed","utils","hasOwnProperty","Object","prototype","objectForEach","obj","action","prop","call","extend","source","setPrototypeOf","proto","__proto__","canSetPrototype","Array","canUseSymbols","DEBUG","Symbol","knownEvents","knownEventTypesByEventName","navigator","test","userAgent","eventType","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","document","div","createElement","iElems","getElementsByTagName","innerHTML","undefined","isIe6","isIe7","jQueryEventAttachName","cssClassNameRegex","toggleObjectClassPropertyString","classNames","shouldHaveClass","currentClassNames","match","arrayForEach","className","addOrRemoveItem","join","fieldsIncludedWithJsonPost","array","actionOwner","arrayIndexOf","indexOf","item","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","result","push","arrayMap","mapping","mappingOwner","arrayFilter","arrayPushAll","valuesToPush","apply","value","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","container","ownerDocument","appendChild","cleanNode","cloneNodes","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","setDomNodeChildren","childNodes","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","node","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagNameLower","element","tagName","toLowerCase","catchFunctionErrors","delegate","this","arguments","e","setTimeout","handler","timeout","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","jQueryInstance","addEventListener","attachEvent","Error","attachEventHandler","event","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","type","inputType","isClickOnCheckableElement","createEvent","dispatchEvent","eventCategory","initEvent","window","click","fireEvent","unwrapObservable","isObservable","peek","toggleDomNodeCssClass","addOrRemoveFn","classList","setTextContent","textContent","innerTextNode","virtualElements","createTextNode","data","forceRefresh","setElementName","name","escapedName","r","charCodeAt","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","JSON","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","key","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","getDataForNode","clear","uniqueId","dataStoreKeyExpandoPropertyName","Date","getTime","dataStore","createIfNotFound","dataStoreKey","dataForNode","get","set","getOrSet","nextKey","domDataKey","cleanableNodeTypes","1","8","9","cleanableNodeTypesWithDescendants","getDisposeCallbacksCollection","allDisposeCallbacks","cleanSingleNode","callbacks","cleanNodesInList","nodeList","onlyComments","lastCleanedNode","cleanedNodes","callback","removeDisposeCallback","callbacksCollection","destroyCallbacksCollection","cleanExternalData","none","table","tr","select","lookup","thead","tbody","tfoot","td","th","option","optgroup","mayRequireCreateElementHack","simpleHtmlParse","html","documentContext","windowContext","tags","wrap","m","getWrap","depth","markup","lastChild","parseHtmlFragment","elems","jQueryHtmlParse","parseHtmlForTemplateNodes","parentElement","setHtml","parsedNodes","memoization","memos","randomMax8HexChars","Math","random","memoize","memoId","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","findMemoNodes","rootNode","appendToArray","parseMemoText","nodeValue","combinedParams","memoText","tasks","scheduler","taskQueue","taskQueueLength","nextHandle","nextIndexToProcess","processTasks","task","mark","countMarks","ex","scheduledProcess","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","extenders","throttle","writeTimeoutInstance","dependentObservable","read","write","clearTimeout","rateLimit","limitFunction","_deferUpdates","debounce","limit","deferred","ignoreUpdates","notify","notifyWhen","valuesArePrimitiveAndEqual","primitiveTypes","boolean","number","a","b","timeoutInstance","subscription","disposeCallback","_target","_callback","_disposeCallback","_isDisposed","_node","_domNodeDisposalCallback","dispose","disposeWhenNodeIsRemoved","bind","subscribable","ko_subscribable_fn","init","defaultEvent","limitNotifySubscribers","_limitBeforeChange","_origNotifySubscribers","_limitChange","instance","_subscriptions","change","_versionNumber","subscribe","callbackTarget","self","boundCallback","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","subs","_changeSubscriptions","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","notifyNextChange","previousValue","pendingValue","didUpdate","selfIsObservable","finish","_notificationIsPending","_evalIfChanged","shouldNotify","isDifferent","isDirty","_recordUpdate","_notifyNextChangeIfValueIsDifferent","getSubscriptionsCount","total","eventName","subscriptions","oldValue","newValue","requestedExtenders","extenderHandler","isSubscribable","computedContext","currentFrame","outerFrames","lastId","pop","registerDependency","_id","ignore","callbackArgs","getDependenciesCount","computed","getDependencies","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","isWriteableObservable","hasWriteFunction","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","sorted","compareFunction","arrayCopy","sort","reversed","reverse","methodName","cacheDiffForKnownOperation","methodCallResult","isObservableArray","arrayChangeEventName","compareArrayOptions","arrayChangeSubscription","underlyingNotifySubscribersFunction","trackingChanges","cachedDiff","pendingNotifications","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","previousContents","currentContents","changes","compareArrays","getChanges","trackChanges","rawArray","operationName","diff","arrayLength","argsLength","offset","pushDiff","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","status","computedState","computedDisposeDependencyCallback","id","entryToDispose","computedBeginDependencyDetectionCallback","computedObservable","state","isDisposed","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","subscribeToDependency","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","latestValue","isStale","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","haveDependenciesChanged","evaluateImmediate","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","dependentObservables","dependency","_order","trackingObj","_version","_evalDelayed","markDirty","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","changed","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","_latestValue","evaluate","isChange","dependenciesOrder","order","protoProp","isComputed","isPureComputed","pureComputed","objectLookup","keys","values","toJS","rootObject","mapJsObjectGraph","mapInputCallback","visitedObjects","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitorCallback","propertyName","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","when","context","kowhen","resolve","Promise","selectExtensions","readValue","bindingHandlers","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","n","size","expressionRewriting","javaScriptReservedWords","javaScriptAssignmentTarget","bindingToken","divisionLookBehind","keywordRegexLookBehind","in","return","typeof","parseObjectLiteral","objectLiteralString","str","toks","tok","c","unknown","substr","twoWayBindings","bindingRewriteValidators","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","writableVal","bindingParams","expression","getWriteableValue","writeKey","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","keyValueArrayContainsKey","writeValueToProperty","property","allBindings","checkIfDifferent","propWriters","commentNodesHaveTextProperty","createComment","startCommentRegex","endCommentRegex","htmlTagsWithOptionallyClosingChildren","ul","ol","isStartComment","isEndComment","matchedEndCommentDataKey","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","allowedBindings","emptyNode","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","isUnmatchedEndComment","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","bindingContext","bindingsString","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","cache","cacheKey","rewrittenBindings","createBindingsStringEvaluator","createBindingsStringEvaluatorViaCache","bindingFunction","message","contextSubscribable","contextAncestorBindingInfo","bindingDoesNotRecurseIntoElementTypes","textarea","template","bindingKey","inheritParentVm","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","realDataItemOrAccessor","dataItem","shouldInheritData","unshift","properties","boundElementDomDataKey","asyncContextDispose","bindingInfo","asyncContext","notifyAncestor","AsyncCompleteContext","ancestorBindingInfo","asyncDescendants","childrenComplete","makeValueAccessor","evaluateValueAccessor","valueAccessor","makeAccessorsFromFunction","getBindingsAndMakeAccessors","applyBindingsToDescendantsInternal","elementOrVirtualElement","nextInQueue","currentChild","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","bindingEvent","nodeVerified","bindingContextForDescendants","isElement","applyBindingsToNodeInternal","sourceBindings","bindings","alreadyBound","bindingsUpdater","bindingHandlerThatControlsDescendantBindings","contextToExtend","getValueAccessor","dataFor","descendantsComplete","startPossiblyAsyncContentBinding","orderedBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","topologicalSortBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","bindingName","validateThatBindingIsAllowedForVirtualElements","initResult","shouldBindDescendants","getBindingContext","viewModelOrBindingContext","extendContextCallback","descendantComplete","completeChildren","eventSubscribable","ctx","storedBindingContextForNode","applyBindingAccessorsToNode","applyBindingsToNode","makeBindingAccessors","applyBindingsToDescendants","applyBindings","contextFor","loadingSubscribablesCache","loadedDefinitionsCache","getObjectOwnProperty","propName","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","componentName","cachedDefinition","isSynchronousComponent","definition","completedAsync","config","beginLoadingComponent","loadComponentAndNotify","clearCachedDefinition","_getFirstResultFromLoaders","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","errorCallback","makeErrorCallback","possiblyGetConfigFromAmd","loadedConfig","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveConfig","loadTemplate","isDocumentFragment","HTMLElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveTemplate","loadViewModel","resolveViewModel","fixedInstance","componentInfo","content","DocumentFragment","amdRequire","_allRegisteredComponents","componentBindingValue","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","getComponentParamsFromCustomElement","createDocumentFragment","newDocFrag","allComponents","componentLoadingOperationUniqueId","ignored1","ignored2","currentViewModel","currentLoadingOperationId","afterRenderSub","disposeAssociatedComponentViewModel","currentViewModelDispose","originalChildNodes","componentParams","loadingOperationId","componentDefinition","clonedNodesArray","cloneTemplateIntoElement","componentViewModel","componentViewModelFactory","createViewModel","templateNodes","childBindingContext","controlsDescendantBindings","attrHtmlToJavaScriptMap","class","for","update","attrName","attrValue","prefixLen","namespace","lookupNamespaceURI","toRemove","removeAttributeNS","removeAttribute","setAttributeNS","after","checkedValue","useElementValue","updateModel","isChecked","checked","elemValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","saveOldValue","oldElemValue","isCheckbox","rawValue","disabled","viewModel","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","noChildContext","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","makeWithIfBinding","isWith","isNot","savedNodes","withOptions","ifCondition","completeOnRender","needAsyncContext","wrapCondition","childContext","shouldDisplay","isFirstRender","innerContext","captionPlaceholder","selectedOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","valueAllowUnset","arrayToDomNodeChildrenOptions","previousSelectedValues","applyToObject","defaultValue","predicateType","itemUpdate","setSelectionCallback","arrayEntry","newOptions","setDomNodeChildrenFromArrayMapping","oldOptions","optionText","abs","valueToWrite","styleName","styleValue","setProperty","all","letter","toUpperCase","previousStyle","isNaN","operaVersion","safariVersion","firefoxVersion","edgeVersion","parseVersion","parseFloat","opera","parseInt","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","ourUpdate","updateView","onEvent","preprocess","addBinding","currentIndex","isInputElement","eventsToCatch","requestedEventsToCatch","propertyChangedFired","updateFromModel","valueUpdateHandler","autocomplete","isCurrentlyVisible","templateSource","templateDocument","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","allValidators","validator","possibleErrorMessage","validateDataBindValuesForRewriting","applyBindingsToNextSiblingScript","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","templateType","elemContentsProperty","dataDomDataPrefix","templatesDomDataKey","getTemplateDomData","setTemplateDomData","templateData","containerData","alwaysCheckText","textData","_templateEngine","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","templateEngineToUse","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","setTemplateEngine","renderTemplate","dataOrBindingContext","firstTargetNode","activelyDisposeWhenNodeIsRemoved","exportDependencies","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","asName","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","newArray","changeList","shouldHideDestroyed","templateComputedDomDataKey","cleanContainerDomDataKey","bindingValue","templateComputed","dataArray","innerBindingContext","newComputed","oldComputed","disposeOldComputedAndStoreNewOne","parsedBindingValue","left","right","limitFailedCompares","failedCompares","l","leftItem","rightItem","statusNotInOld","statusNotInNew","compareSmallArrayToBigArray","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","oldArray","dontLimitMoves","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","mapData","nextNodeInDom","lastMappingResult","isFirstExecution","newMappingResult","lastMappingResultIndex","newMappingResultIndex","nodesToDelete","itemsToMoveFirstIndexes","itemsForBeforeRemoveCallbacks","itemsForMoveCallbacks","itemsForAfterAddCallbacks","countWaitingForRemove","itemAdded","indexObservable","itemMovedOrRetained","oldPosition","callCallback","items","lastArray","x","compareOptions","sparse","editScriptItem","movedIndex","itemIndex","initialized","templateText","jqueryTmplTemplateEngine","jQueryTmplVersion","ensureHasReferencedJQueryTemplates","precompiled","resultNodes","compiledTemplate","jQueryTemplateOptions","koBindingContext","templateMarkup","open","close","jqueryTmplTemplateEngineInstance"],"mappings":"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","file":"../main.js","sourcesContent":["define([],function(){\r\n\r\n\r\n    /*!\r\n     * Knockout JavaScript library v3.5.0-pre builded in 2018/10/07 \r\n     * (c) The Knockout.js team - http://knockoutjs.com/\r\n     * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n     */\r\n\r\n\r\n    // Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\r\n    // In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\r\n    var ko = typeof koExports !== 'undefined' ? koExports : {};\r\n    // Google Closure Compiler helpers (used only to make the minified file smaller)\r\n    ko.exportSymbol = function(koPath, object) {\r\n        var tokens = koPath.split(\".\");\r\n\r\n        // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\r\n        // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\r\n        var target = ko;\r\n\r\n        for (var i = 0; i < tokens.length - 1; i++)\r\n            target = target[tokens[i]];\r\n        target[tokens[tokens.length - 1]] = object;\r\n    };\r\n    ko.exportProperty = function(owner, publicName, object) {\r\n        owner[publicName] = object;\r\n    };\r\n    ko.version = \"3.5.0-pre\";\r\n\r\n    ko.exportSymbol('version', ko.version);\r\n    // For any options that may affect various areas of Knockout and aren't directly associated with data binding.\r\n    ko.options = {\r\n        'deferUpdates': false,\r\n        'useOnlyNativeEvents': false,\r\n        'foreachHidesDestroyed': false\r\n    };\r\n\r\n    //ko.exportSymbol('options', ko.options);   // 'options' isn't minified\r\n    ko.utils = (function () {\r\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n        function objectForEach(obj, action) {\r\n            for (var prop in obj) {\r\n                if (hasOwnProperty.call(obj, prop)) {\r\n                    action(prop, obj[prop]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function extend(target, source) {\r\n            if (source) {\r\n                for(var prop in source) {\r\n                    if(hasOwnProperty.call(source, prop)) {\r\n                        target[prop] = source[prop];\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function setPrototypeOf(obj, proto) {\r\n            obj.__proto__ = proto;\r\n            return obj;\r\n        }\r\n\r\n        var canSetPrototype = ({ __proto__: [] } instanceof Array);\r\n        var canUseSymbols = !DEBUG && typeof Symbol === 'function';\r\n\r\n        // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\r\n        var knownEvents = {}, knownEventTypesByEventName = {};\r\n        var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\r\n        knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\r\n        knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\r\n        objectForEach(knownEvents, function(eventType, knownEventsForType) {\r\n            if (knownEventsForType.length) {\r\n                for (var i = 0, j = knownEventsForType.length; i < j; i++)\r\n                    knownEventTypesByEventName[knownEventsForType[i]] = eventType;\r\n            }\r\n        });\r\n        var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\r\n\r\n        // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\r\n        // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\r\n        // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\r\n        // If there is a future need to detect specific versions of IE10+, we will amend this.\r\n        var ieVersion = document && (function() {\r\n            var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\r\n\r\n            // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\r\n            while (\r\n                div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\r\n                iElems[0]\r\n            ) {}\r\n            return version > 4 ? version : undefined;\r\n        }());\r\n        var isIe6 = ieVersion === 6,\r\n            isIe7 = ieVersion === 7;\r\n\r\n        function isClickOnCheckableElement(element, eventType) {\r\n            if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\r\n            if (eventType.toLowerCase() != \"click\") return false;\r\n            var inputType = element.type;\r\n            return (inputType == \"checkbox\") || (inputType == \"radio\");\r\n        }\r\n\r\n        // For details on the pattern for changing node classes\r\n        // see: https://github.com/knockout/knockout/issues/1597\r\n        var cssClassNameRegex = /\\S+/g;\r\n\r\n        var jQueryEventAttachName;\r\n\r\n        function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\r\n            var addOrRemoveFn;\r\n            if (classNames) {\r\n                if (typeof node.classList === 'object') {\r\n                    addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\r\n                    ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n                        addOrRemoveFn.call(node.classList, className);\r\n                    });\r\n                } else if (typeof node.className['baseVal'] === 'string') {\r\n                    // SVG tag .classNames is an SVGAnimatedString instance\r\n                    toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\r\n                } else {\r\n                    // node.className ought to be a string.\r\n                    toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\r\n                }\r\n            }\r\n        }\r\n\r\n        function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\r\n            // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\r\n            var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\r\n            ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\r\n                ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\r\n            });\r\n            obj[prop] = currentClassNames.join(\" \");\r\n        }\r\n\r\n        return {\r\n            fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\r\n\r\n            arrayForEach: function (array, action, actionOwner) {\r\n                for (var i = 0, j = array.length; i < j; i++) {\r\n                    action.call(actionOwner, array[i], i, array);\r\n                }\r\n            },\r\n\r\n            arrayIndexOf: typeof Array.prototype.indexOf == \"function\"\r\n                ? function (array, item) {\r\n                    return Array.prototype.indexOf.call(array, item);\r\n                }\r\n                : function (array, item) {\r\n                    for (var i = 0, j = array.length; i < j; i++) {\r\n                        if (array[i] === item)\r\n                            return i;\r\n                    }\r\n                    return -1;\r\n                },\r\n\r\n            arrayFirst: function (array, predicate, predicateOwner) {\r\n                for (var i = 0, j = array.length; i < j; i++) {\r\n                    if (predicate.call(predicateOwner, array[i], i, array))\r\n                        return array[i];\r\n                }\r\n                return undefined;\r\n            },\r\n\r\n            arrayRemoveItem: function (array, itemToRemove) {\r\n                var index = ko.utils.arrayIndexOf(array, itemToRemove);\r\n                if (index > 0) {\r\n                    array.splice(index, 1);\r\n                }\r\n                else if (index === 0) {\r\n                    array.shift();\r\n                }\r\n            },\r\n\r\n            arrayGetDistinctValues: function (array) {\r\n                var result = [];\r\n                if (array) {\r\n                    ko.utils.arrayForEach(array, function(item) {\r\n                        if (ko.utils.arrayIndexOf(result, item) < 0)\r\n                            result.push(item);\r\n                    });\r\n                }\r\n                return result;\r\n            },\r\n\r\n            arrayMap: function (array, mapping, mappingOwner) {\r\n                var result = [];\r\n                if (array) {\r\n                    for (var i = 0, j = array.length; i < j; i++)\r\n                        result.push(mapping.call(mappingOwner, array[i], i));\r\n                }\r\n                return result;\r\n            },\r\n\r\n            arrayFilter: function (array, predicate, predicateOwner) {\r\n                var result = [];\r\n                if (array) {\r\n                    for (var i = 0, j = array.length; i < j; i++)\r\n                        if (predicate.call(predicateOwner, array[i], i))\r\n                            result.push(array[i]);\r\n                }\r\n                return result;\r\n            },\r\n\r\n            arrayPushAll: function (array, valuesToPush) {\r\n                if (valuesToPush instanceof Array)\r\n                    array.push.apply(array, valuesToPush);\r\n                else\r\n                    for (var i = 0, j = valuesToPush.length; i < j; i++)\r\n                        array.push(valuesToPush[i]);\r\n                return array;\r\n            },\r\n\r\n            addOrRemoveItem: function(array, value, included) {\r\n                var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\r\n                if (existingEntryIndex < 0) {\r\n                    if (included)\r\n                        array.push(value);\r\n                } else {\r\n                    if (!included)\r\n                        array.splice(existingEntryIndex, 1);\r\n                }\r\n            },\r\n\r\n            canSetPrototype: canSetPrototype,\r\n\r\n            extend: extend,\r\n\r\n            setPrototypeOf: setPrototypeOf,\r\n\r\n            setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\r\n\r\n            objectForEach: objectForEach,\r\n\r\n            objectMap: function(source, mapping, mappingOwner) {\r\n                if (!source)\r\n                    return source;\r\n                var target = {};\r\n                for (var prop in source) {\r\n                    if (hasOwnProperty.call(source, prop)) {\r\n                        target[prop] = mapping.call(mappingOwner, source[prop], prop, source);\r\n                    }\r\n                }\r\n                return target;\r\n            },\r\n\r\n            emptyDomNode: function (domNode) {\r\n                while (domNode.firstChild) {\r\n                    ko.removeNode(domNode.firstChild);\r\n                }\r\n            },\r\n\r\n            moveCleanedNodesToContainerElement: function(nodes) {\r\n                // Ensure it's a real array, as we're about to reparent the nodes and\r\n                // we don't want the underlying collection to change while we're doing that.\r\n                var nodesArray = ko.utils.makeArray(nodes);\r\n                var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\r\n\r\n                var container = templateDocument.createElement('div');\r\n                for (var i = 0, j = nodesArray.length; i < j; i++) {\r\n                    container.appendChild(ko.cleanNode(nodesArray[i]));\r\n                }\r\n                return container;\r\n            },\r\n\r\n            cloneNodes: function (nodesArray, shouldCleanNodes) {\r\n                for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\r\n                    var clonedNode = nodesArray[i].cloneNode(true);\r\n                    newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\r\n                }\r\n                return newNodesArray;\r\n            },\r\n\r\n            setDomNodeChildren: function (domNode, childNodes) {\r\n                ko.utils.emptyDomNode(domNode);\r\n                if (childNodes) {\r\n                    for (var i = 0, j = childNodes.length; i < j; i++)\r\n                        domNode.appendChild(childNodes[i]);\r\n                }\r\n            },\r\n\r\n            replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\r\n                var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\r\n                if (nodesToReplaceArray.length > 0) {\r\n                    var insertionPoint = nodesToReplaceArray[0];\r\n                    var parent = insertionPoint.parentNode;\r\n                    for (var i = 0, j = newNodesArray.length; i < j; i++)\r\n                        parent.insertBefore(newNodesArray[i], insertionPoint);\r\n                    for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\r\n                        ko.removeNode(nodesToReplaceArray[i]);\r\n                    }\r\n                }\r\n            },\r\n\r\n            fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\r\n                // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\r\n                // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\r\n                // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\r\n                // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\r\n                // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\r\n                //\r\n                // Rules:\r\n                //   [A] Any leading nodes that have been removed should be ignored\r\n                //       These most likely correspond to memoization nodes that were already removed during binding\r\n                //       See https://github.com/knockout/knockout/pull/440\r\n                //   [B] Any trailing nodes that have been remove should be ignored\r\n                //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\r\n                //       See https://github.com/knockout/knockout/pull/1903\r\n                //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\r\n                //       and include any nodes that have been inserted among the previous collection\r\n\r\n                if (continuousNodeArray.length) {\r\n                    // The parent node can be a virtual element; so get the real parent node\r\n                    parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\r\n\r\n                    // Rule [A]\r\n                    while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\r\n                        continuousNodeArray.splice(0, 1);\r\n\r\n                    // Rule [B]\r\n                    while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\r\n                        continuousNodeArray.length--;\r\n\r\n                    // Rule [C]\r\n                    if (continuousNodeArray.length > 1) {\r\n                        var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\r\n                        // Replace with the actual new continuous node set\r\n                        continuousNodeArray.length = 0;\r\n                        while (current !== last) {\r\n                            continuousNodeArray.push(current);\r\n                            current = current.nextSibling;\r\n                        }\r\n                        continuousNodeArray.push(last);\r\n                    }\r\n                }\r\n                return continuousNodeArray;\r\n            },\r\n\r\n            setOptionNodeSelectionState: function (optionNode, isSelected) {\r\n                // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\r\n                if (ieVersion < 7)\r\n                    optionNode.setAttribute(\"selected\", isSelected);\r\n                else\r\n                    optionNode.selected = isSelected;\r\n            },\r\n\r\n            stringTrim: function (string) {\r\n                return string === null || string === undefined ? '' :\r\n                    string.trim ?\r\n                        string.trim() :\r\n                        string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\r\n            },\r\n\r\n            stringStartsWith: function (string, startsWith) {\r\n                string = string || \"\";\r\n                if (startsWith.length > string.length)\r\n                    return false;\r\n                return string.substring(0, startsWith.length) === startsWith;\r\n            },\r\n\r\n            domNodeIsContainedBy: function (node, containedByNode) {\r\n                if (node === containedByNode)\r\n                    return true;\r\n                if (node.nodeType === 11)\r\n                    return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\r\n                if (containedByNode.contains)\r\n                    return containedByNode.contains(node.nodeType !== 1 ? node.parentNode : node);\r\n                if (containedByNode.compareDocumentPosition)\r\n                    return (containedByNode.compareDocumentPosition(node) & 16) == 16;\r\n                while (node && node != containedByNode) {\r\n                    node = node.parentNode;\r\n                }\r\n                return !!node;\r\n            },\r\n\r\n            domNodeIsAttachedToDocument: function (node) {\r\n                return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\r\n            },\r\n\r\n            anyDomNodeIsAttachedToDocument: function(nodes) {\r\n                return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\r\n            },\r\n\r\n            tagNameLower: function(element) {\r\n                // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\r\n                // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\r\n                // we don't need to do the .toLowerCase() as it will always be lower case anyway.\r\n                return element && element.tagName && element.tagName.toLowerCase();\r\n            },\r\n\r\n            catchFunctionErrors: function (delegate) {\r\n                return ko['onError'] ? function () {\r\n                    try {\r\n                        return delegate.apply(this, arguments);\r\n                    } catch (e) {\r\n                        ko['onError'] && ko['onError'](e);\r\n                        throw e;\r\n                    }\r\n                } : delegate;\r\n            },\r\n\r\n            setTimeout: function (handler, timeout) {\r\n                return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\r\n            },\r\n\r\n            deferError: function (error) {\r\n                setTimeout(function () {\r\n                    ko['onError'] && ko['onError'](error);\r\n                    throw error;\r\n                }, 0);\r\n            },\r\n\r\n            registerEventHandler: function (element, eventType, handler) {\r\n                var wrappedHandler = ko.utils.catchFunctionErrors(handler);\r\n\r\n                var mustUseAttachEvent = eventsThatMustBeRegisteredUsingAttachEvent[eventType];\r\n                if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\r\n                    if (!jQueryEventAttachName) {\r\n                        jQueryEventAttachName = (typeof jQueryInstance(element)['on'] == 'function') ? 'on' : 'bind';\r\n                    }\r\n                    jQueryInstance(element)[jQueryEventAttachName](eventType, wrappedHandler);\r\n                } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\r\n                    element.addEventListener(eventType, wrappedHandler, false);\r\n                else if (typeof element.attachEvent != \"undefined\") {\r\n                    var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\r\n                        attachEventName = \"on\" + eventType;\r\n                    element.attachEvent(attachEventName, attachEventHandler);\r\n\r\n                    // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\r\n                    // so to avoid leaks, we have to remove them manually. See bug #856\r\n                    ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\r\n                        element.detachEvent(attachEventName, attachEventHandler);\r\n                    });\r\n                } else\r\n                    throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\r\n            },\r\n\r\n            triggerEvent: function (element, eventType) {\r\n                if (!(element && element.nodeType))\r\n                    throw new Error(\"element must be a DOM node when calling triggerEvent\");\r\n\r\n                // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\r\n                // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\r\n                // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\r\n                // In both cases, we'll use the click method instead.\r\n                var useClickWorkaround = isClickOnCheckableElement(element, eventType);\r\n\r\n                if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\r\n                    jQueryInstance(element)['trigger'](eventType);\r\n                } else if (typeof document.createEvent == \"function\") {\r\n                    if (typeof element.dispatchEvent == \"function\") {\r\n                        var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\r\n                        var event = document.createEvent(eventCategory);\r\n                        event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\r\n                        element.dispatchEvent(event);\r\n                    }\r\n                    else\r\n                        throw new Error(\"The supplied element doesn't support dispatchEvent\");\r\n                } else if (useClickWorkaround && element.click) {\r\n                    element.click();\r\n                } else if (typeof element.fireEvent != \"undefined\") {\r\n                    element.fireEvent(\"on\" + eventType);\r\n                } else {\r\n                    throw new Error(\"Browser doesn't support triggering events\");\r\n                }\r\n            },\r\n\r\n            unwrapObservable: function (value) {\r\n                return ko.isObservable(value) ? value() : value;\r\n            },\r\n\r\n            peekObservable: function (value) {\r\n                return ko.isObservable(value) ? value.peek() : value;\r\n            },\r\n\r\n            toggleDomNodeCssClass: toggleDomNodeCssClass,\r\n\r\n            setTextContent: function(element, textContent) {\r\n                var value = ko.utils.unwrapObservable(textContent);\r\n                if ((value === null) || (value === undefined))\r\n                    value = \"\";\r\n\r\n                // We need there to be exactly one child: a text node.\r\n                // If there are no children, more than one, or if it's not a text node,\r\n                // we'll clear everything and create a single text node.\r\n                var innerTextNode = ko.virtualElements.firstChild(element);\r\n                if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\r\n                    ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\r\n                } else {\r\n                    innerTextNode.data = value;\r\n                }\r\n\r\n                ko.utils.forceRefresh(element);\r\n            },\r\n\r\n            setElementName: function(element, name) {\r\n                element.name = name;\r\n\r\n                // Workaround IE 6/7 issue\r\n                // - https://github.com/SteveSanderson/knockout/issues/197\r\n                // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\r\n                if (ieVersion <= 7) {\r\n                    try {\r\n                        var escapedName = element.name.replace(/[&<>'\"]/g, function(r){ return \"&#\" + r.charCodeAt(0) + \";\"; });\r\n                        element.mergeAttributes(document.createElement(\"<input name='\" + escapedName + \"'/>\"), false);\r\n                    }\r\n                    catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\r\n                }\r\n            },\r\n\r\n            forceRefresh: function(node) {\r\n                // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\r\n                if (ieVersion >= 9) {\r\n                    // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\r\n                    var elem = node.nodeType == 1 ? node : node.parentNode;\r\n                    if (elem.style)\r\n                        elem.style.zoom = elem.style.zoom;\r\n                }\r\n            },\r\n\r\n            ensureSelectElementIsRenderedCorrectly: function(selectElement) {\r\n                // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\r\n                // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\r\n                // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\r\n                if (ieVersion) {\r\n                    var originalWidth = selectElement.style.width;\r\n                    selectElement.style.width = 0;\r\n                    selectElement.style.width = originalWidth;\r\n                }\r\n            },\r\n\r\n            range: function (min, max) {\r\n                min = ko.utils.unwrapObservable(min);\r\n                max = ko.utils.unwrapObservable(max);\r\n                var result = [];\r\n                for (var i = min; i <= max; i++)\r\n                    result.push(i);\r\n                return result;\r\n            },\r\n\r\n            makeArray: function(arrayLikeObject) {\r\n                var result = [];\r\n                for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\r\n                    result.push(arrayLikeObject[i]);\r\n                };\r\n                return result;\r\n            },\r\n\r\n            createSymbolOrString: function(identifier) {\r\n                return canUseSymbols ? Symbol(identifier) : identifier;\r\n            },\r\n\r\n            isIe6 : isIe6,\r\n            isIe7 : isIe7,\r\n            ieVersion : ieVersion,\r\n\r\n            getFormFields: function(form, fieldName) {\r\n                var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\r\n                var isMatchingField = (typeof fieldName == 'string')\r\n                    ? function(field) { return field.name === fieldName }\r\n                    : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\r\n                var matches = [];\r\n                for (var i = fields.length - 1; i >= 0; i--) {\r\n                    if (isMatchingField(fields[i]))\r\n                        matches.push(fields[i]);\r\n                };\r\n                return matches;\r\n            },\r\n\r\n            parseJson: function (jsonString) {\r\n                if (typeof jsonString == \"string\") {\r\n                    jsonString = ko.utils.stringTrim(jsonString);\r\n                    if (jsonString) {\r\n                        if (JSON && JSON.parse) // Use native parsing where available\r\n                            return JSON.parse(jsonString);\r\n                        return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\r\n                    }\r\n                }\r\n                return null;\r\n            },\r\n\r\n            stringifyJson: function (data, replacer, space) {   // replacer and space are optional\r\n                if (!JSON || !JSON.stringify)\r\n                    throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\r\n                return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\r\n            },\r\n\r\n            postJson: function (urlOrForm, data, options) {\r\n                options = options || {};\r\n                var params = options['params'] || {};\r\n                var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\r\n                var url = urlOrForm;\r\n\r\n                // If we were given a form, use its 'action' URL and pick out any requested field values\r\n                if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\r\n                    var originalForm = urlOrForm;\r\n                    url = originalForm.action;\r\n                    for (var i = includeFields.length - 1; i >= 0; i--) {\r\n                        var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\r\n                        for (var j = fields.length - 1; j >= 0; j--)\r\n                            params[fields[j].name] = fields[j].value;\r\n                    }\r\n                }\r\n\r\n                data = ko.utils.unwrapObservable(data);\r\n                var form = document.createElement(\"form\");\r\n                form.style.display = \"none\";\r\n                form.action = url;\r\n                form.method = \"post\";\r\n                for (var key in data) {\r\n                    // Since 'data' this is a model object, we include all properties including those inherited from its prototype\r\n                    var input = document.createElement(\"input\");\r\n                    input.type = \"hidden\";\r\n                    input.name = key;\r\n                    input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\r\n                    form.appendChild(input);\r\n                }\r\n                objectForEach(params, function(key, value) {\r\n                    var input = document.createElement(\"input\");\r\n                    input.type = \"hidden\";\r\n                    input.name = key;\r\n                    input.value = value;\r\n                    form.appendChild(input);\r\n                });\r\n                document.body.appendChild(form);\r\n                options['submitter'] ? options['submitter'](form) : form.submit();\r\n                setTimeout(function () { form.parentNode.removeChild(form); }, 0);\r\n            }\r\n        }\r\n    }());\r\n\r\n    ko.exportSymbol('utils', ko.utils);\r\n    ko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\r\n    ko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\r\n    ko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\r\n    ko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\r\n    ko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\r\n    ko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\r\n    ko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\r\n    ko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\r\n    ko.exportSymbol('utils.cloneNodes', ko.utils.cloneNodes);\r\n    ko.exportSymbol('utils.createSymbolOrString', ko.utils.createSymbolOrString);\r\n    ko.exportSymbol('utils.extend', ko.utils.extend);\r\n    ko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\r\n    ko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\r\n    ko.exportSymbol('utils.objectMap', ko.utils.objectMap);\r\n    ko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\r\n    ko.exportSymbol('utils.postJson', ko.utils.postJson);\r\n    ko.exportSymbol('utils.parseJson', ko.utils.parseJson);\r\n    ko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\r\n    ko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\r\n    ko.exportSymbol('utils.range', ko.utils.range);\r\n    ko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\r\n    ko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\r\n    ko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\r\n    ko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\r\n    ko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\r\n    ko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\r\n    ko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\r\n\r\n    if (!Function.prototype['bind']) {\r\n        // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\r\n        // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\r\n        Function.prototype['bind'] = function (object) {\r\n            var originalFunction = this;\r\n            if (arguments.length === 1) {\r\n                return function () {\r\n                    return originalFunction.apply(object, arguments);\r\n                };\r\n            } else {\r\n                var partialArgs = Array.prototype.slice.call(arguments, 1);\r\n                return function () {\r\n                    var args = partialArgs.slice(0);\r\n                    args.push.apply(args, arguments);\r\n                    return originalFunction.apply(object, args);\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    ko.utils.domData = new (function () {\r\n        var uniqueId = 0;\r\n        var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\r\n        var dataStore = {};\r\n\r\n        var getDataForNode, clear;\r\n        if (!ko.utils.ieVersion) {\r\n            // We considered using WeakMap, but it has a problem in IE 11 and Edge that prevents using\r\n            // it cross-window, so instead we just store the data directly on the node.\r\n            // See https://github.com/knockout/knockout/issues/2141\r\n            getDataForNode = function (node, createIfNotFound) {\r\n                var dataForNode = node[dataStoreKeyExpandoPropertyName];\r\n                if (!dataForNode && createIfNotFound) {\r\n                    dataForNode = node[dataStoreKeyExpandoPropertyName] = {};\r\n                }\r\n                return dataForNode;\r\n            };\r\n            clear = function (node) {\r\n                if (node[dataStoreKeyExpandoPropertyName]) {\r\n                    delete node[dataStoreKeyExpandoPropertyName];\r\n                    return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\r\n                }\r\n                return false;\r\n            };\r\n        } else {\r\n            // Old IE versions have memory issues if you store objects on the node, so we use a\r\n            // separate data storage and link to it from the node using a string key.\r\n            getDataForNode = function (node, createIfNotFound) {\r\n                var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n                var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\r\n                if (!hasExistingDataStore) {\r\n                    if (!createIfNotFound)\r\n                        return undefined;\r\n                    dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\r\n                    dataStore[dataStoreKey] = {};\r\n                }\r\n                return dataStore[dataStoreKey];\r\n            };\r\n            clear = function (node) {\r\n                var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\r\n                if (dataStoreKey) {\r\n                    delete dataStore[dataStoreKey];\r\n                    node[dataStoreKeyExpandoPropertyName] = null;\r\n                    return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\r\n                }\r\n                return false;\r\n            };\r\n        }\r\n\r\n        return {\r\n            get: function (node, key) {\r\n                var dataForNode = getDataForNode(node, false);\r\n                return dataForNode && dataForNode[key];\r\n            },\r\n            set: function (node, key, value) {\r\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\r\n                var dataForNode = getDataForNode(node, value !== undefined /* createIfNotFound */);\r\n                dataForNode && (dataForNode[key] = value);\r\n            },\r\n            getOrSet: function (node, key, value) {\r\n                var dataForNode = getDataForNode(node, true /* createIfNotFound */);\r\n                return dataForNode[key] || (dataForNode[key] = value);\r\n            },\r\n            clear: clear,\r\n\r\n            nextKey: function () {\r\n                return (uniqueId++) + dataStoreKeyExpandoPropertyName;\r\n            }\r\n        };\r\n    })();\r\n\r\n    ko.exportSymbol('utils.domData', ko.utils.domData);\r\n    ko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\r\n\r\n    ko.utils.domNodeDisposal = new (function () {\r\n        var domDataKey = ko.utils.domData.nextKey();\r\n        var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\r\n        var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\r\n\r\n        function getDisposeCallbacksCollection(node, createIfNotFound) {\r\n            var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\r\n            if ((allDisposeCallbacks === undefined) && createIfNotFound) {\r\n                allDisposeCallbacks = [];\r\n                ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\r\n            }\r\n            return allDisposeCallbacks;\r\n        }\r\n        function destroyCallbacksCollection(node) {\r\n            ko.utils.domData.set(node, domDataKey, undefined);\r\n        }\r\n\r\n        function cleanSingleNode(node) {\r\n            // Run all the dispose callbacks\r\n            var callbacks = getDisposeCallbacksCollection(node, false);\r\n            if (callbacks) {\r\n                callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\r\n                for (var i = 0; i < callbacks.length; i++)\r\n                    callbacks[i](node);\r\n            }\r\n\r\n            // Erase the DOM data\r\n            ko.utils.domData.clear(node);\r\n\r\n            // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\r\n            ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\r\n\r\n            // Clear any immediate-child comment nodes, as these wouldn't have been found by\r\n            // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\r\n            if (cleanableNodeTypesWithDescendants[node.nodeType]) {\r\n                cleanNodesInList(node.childNodes, true/*onlyComments*/);\r\n            }\r\n        }\r\n\r\n        function cleanNodesInList(nodeList, onlyComments) {\r\n            var cleanedNodes = [], lastCleanedNode;\r\n            for (var i = 0; i < nodeList.length; i++) {\r\n                if (!onlyComments || nodeList[i].nodeType === 8) {\r\n                    cleanSingleNode(cleanedNodes[cleanedNodes.length] = lastCleanedNode = nodeList[i]);\r\n                    if (nodeList[i] !== lastCleanedNode) {\r\n                        while (i-- && ko.utils.arrayIndexOf(cleanedNodes, nodeList[i]) == -1) {}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            addDisposeCallback : function(node, callback) {\r\n                if (typeof callback != \"function\")\r\n                    throw new Error(\"Callback must be a function\");\r\n                getDisposeCallbacksCollection(node, true).push(callback);\r\n            },\r\n\r\n            removeDisposeCallback : function(node, callback) {\r\n                var callbacksCollection = getDisposeCallbacksCollection(node, false);\r\n                if (callbacksCollection) {\r\n                    ko.utils.arrayRemoveItem(callbacksCollection, callback);\r\n                    if (callbacksCollection.length == 0)\r\n                        destroyCallbacksCollection(node);\r\n                }\r\n            },\r\n\r\n            cleanNode : function(node) {\r\n                // First clean this node, where applicable\r\n                if (cleanableNodeTypes[node.nodeType]) {\r\n                    cleanSingleNode(node);\r\n\r\n                    // ... then its descendants, where applicable\r\n                    if (cleanableNodeTypesWithDescendants[node.nodeType]) {\r\n                        cleanNodesInList(node.getElementsByTagName(\"*\"));\r\n                    }\r\n                }\r\n                return node;\r\n            },\r\n\r\n            removeNode : function(node) {\r\n                ko.cleanNode(node);\r\n                if (node.parentNode)\r\n                    node.parentNode.removeChild(node);\r\n            },\r\n\r\n            \"cleanExternalData\" : function (node) {\r\n                // Special support for jQuery here because it's so commonly used.\r\n                // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\r\n                // so notify it to tear down any resources associated with the node & descendants here.\r\n                if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\r\n                    jQueryInstance['cleanData']([node]);\r\n            }\r\n        };\r\n    })();\r\n    ko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\r\n    ko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\r\n    ko.exportSymbol('cleanNode', ko.cleanNode);\r\n    ko.exportSymbol('removeNode', ko.removeNode);\r\n    ko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\r\n    ko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\r\n    ko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\r\n    (function () {\r\n        var none = [0, \"\", \"\"],\r\n            table = [1, \"<table>\", \"</table>\"],\r\n            tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\r\n            tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\r\n            select = [1, \"<select multiple='multiple'>\", \"</select>\"],\r\n            lookup = {\r\n                'thead': table,\r\n                'tbody': table,\r\n                'tfoot': table,\r\n                'tr': tbody,\r\n                'td': tr,\r\n                'th': tr,\r\n                'option': select,\r\n                'optgroup': select\r\n            },\r\n\r\n            // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\r\n            mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\r\n\r\n        function getWrap(tags) {\r\n            var m = tags.match(/^(?:<!--.*?-->\\s*?)*?<([a-z]+)[\\s>]/);\r\n            return (m && lookup[m[1]]) || none;\r\n        }\r\n\r\n        function simpleHtmlParse(html, documentContext) {\r\n            documentContext || (documentContext = document);\r\n            var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\r\n\r\n            // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\r\n            // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\r\n\r\n            // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\r\n            // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\r\n            // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\r\n            // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\r\n\r\n            // Trim whitespace, otherwise indexOf won't work as expected\r\n            var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\r\n                wrap = getWrap(tags),\r\n                depth = wrap[0];\r\n\r\n            // Go to html and back, then peel off extra wrappers\r\n            // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\r\n            var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\r\n            if (typeof windowContext['innerShiv'] == \"function\") {\r\n                // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\r\n                // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\r\n                // somehow shims the native APIs so it just works anyway)\r\n                div.appendChild(windowContext['innerShiv'](markup));\r\n            } else {\r\n                if (mayRequireCreateElementHack) {\r\n                    // The document.createElement('my-element') trick to enable custom elements in IE6-8\r\n                    // only works if we assign innerHTML on an element associated with that document.\r\n                    documentContext.body.appendChild(div);\r\n                }\r\n\r\n                div.innerHTML = markup;\r\n\r\n                if (mayRequireCreateElementHack) {\r\n                    div.parentNode.removeChild(div);\r\n                }\r\n            }\r\n\r\n            // Move to the right depth\r\n            while (depth--)\r\n                div = div.lastChild;\r\n\r\n            return ko.utils.makeArray(div.lastChild.childNodes);\r\n        }\r\n\r\n        function jQueryHtmlParse(html, documentContext) {\r\n            // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\r\n            if (jQueryInstance['parseHTML']) {\r\n                return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\r\n            } else {\r\n                // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\r\n                var elems = jQueryInstance['clean']([html], documentContext);\r\n\r\n                // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\r\n                // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\r\n                // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\r\n                if (elems && elems[0]) {\r\n                    // Find the top-most parent element that's a direct child of a document fragment\r\n                    var elem = elems[0];\r\n                    while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\r\n                        elem = elem.parentNode;\r\n                    // ... then detach it\r\n                    if (elem.parentNode)\r\n                        elem.parentNode.removeChild(elem);\r\n                }\r\n\r\n                return elems;\r\n            }\r\n        }\r\n\r\n        ko.utils.parseHtmlFragment = function(html, documentContext) {\r\n            return jQueryInstance ?\r\n                jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\r\n                simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\r\n        };\r\n\r\n        ko.utils.parseHtmlForTemplateNodes = function(html, documentContext) {\r\n            var nodes = ko.utils.parseHtmlFragment(html, documentContext);\r\n            return (nodes.length && nodes[0].parentElement) || ko.utils.moveCleanedNodesToContainerElement(nodes);\r\n        };\r\n\r\n        ko.utils.setHtml = function(node, html) {\r\n            ko.utils.emptyDomNode(node);\r\n\r\n            // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\r\n            html = ko.utils.unwrapObservable(html);\r\n\r\n            if ((html !== null) && (html !== undefined)) {\r\n                if (typeof html != 'string')\r\n                    html = html.toString();\r\n\r\n                // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\r\n                // for example <tr> elements which are not normally allowed to exist on their own.\r\n                // If you've referenced jQuery we'll use that rather than duplicating its code.\r\n                if (jQueryInstance) {\r\n                    jQueryInstance(node)['html'](html);\r\n                } else {\r\n                    // ... otherwise, use KO's own parsing logic.\r\n                    var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\r\n                    for (var i = 0; i < parsedNodes.length; i++)\r\n                        node.appendChild(parsedNodes[i]);\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    ko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\r\n    ko.exportSymbol('utils.setHtml', ko.utils.setHtml);\r\n\r\n    ko.memoization = (function () {\r\n        var memos = {};\r\n\r\n        function randomMax8HexChars() {\r\n            return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\r\n        }\r\n        function generateRandomId() {\r\n            return randomMax8HexChars() + randomMax8HexChars();\r\n        }\r\n        function findMemoNodes(rootNode, appendToArray) {\r\n            if (!rootNode)\r\n                return;\r\n            if (rootNode.nodeType == 8) {\r\n                var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\r\n                if (memoId != null)\r\n                    appendToArray.push({ domNode: rootNode, memoId: memoId });\r\n            } else if (rootNode.nodeType == 1) {\r\n                for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\r\n                    findMemoNodes(childNodes[i], appendToArray);\r\n            }\r\n        }\r\n\r\n        return {\r\n            memoize: function (callback) {\r\n                if (typeof callback != \"function\")\r\n                    throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\r\n                var memoId = generateRandomId();\r\n                memos[memoId] = callback;\r\n                return \"<!--[ko_memo:\" + memoId + \"]-->\";\r\n            },\r\n\r\n            unmemoize: function (memoId, callbackParams) {\r\n                var callback = memos[memoId];\r\n                if (callback === undefined)\r\n                    throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\r\n                try {\r\n                    callback.apply(null, callbackParams || []);\r\n                    return true;\r\n                }\r\n                finally { delete memos[memoId]; }\r\n            },\r\n\r\n            unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\r\n                var memos = [];\r\n                findMemoNodes(domNode, memos);\r\n                for (var i = 0, j = memos.length; i < j; i++) {\r\n                    var node = memos[i].domNode;\r\n                    var combinedParams = [node];\r\n                    if (extraCallbackParamsArray)\r\n                        ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\r\n                    ko.memoization.unmemoize(memos[i].memoId, combinedParams);\r\n                    node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\r\n                    if (node.parentNode)\r\n                        node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\r\n                }\r\n            },\r\n\r\n            parseMemoText: function (memoText) {\r\n                var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\r\n                return match ? match[1] : null;\r\n            }\r\n        };\r\n    })();\r\n\r\n    ko.exportSymbol('memoization', ko.memoization);\r\n    ko.exportSymbol('memoization.memoize', ko.memoization.memoize);\r\n    ko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\r\n    ko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\r\n    ko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\r\n    ko.tasks = (function () {\r\n        var scheduler,\r\n            taskQueue = [],\r\n            taskQueueLength = 0,\r\n            nextHandle = 1,\r\n            nextIndexToProcess = 0;\r\n\r\n        if (window['MutationObserver']) {\r\n            // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\r\n            // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\r\n            scheduler = (function (callback) {\r\n                var div = document.createElement(\"div\");\r\n                new MutationObserver(callback).observe(div, {attributes: true});\r\n                return function () { div.classList.toggle(\"foo\"); };\r\n            })(scheduledProcess);\r\n        } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\r\n            // IE 6-10\r\n            // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\r\n            scheduler = function (callback) {\r\n                var script = document.createElement(\"script\");\r\n                script.onreadystatechange = function () {\r\n                    script.onreadystatechange = null;\r\n                    document.documentElement.removeChild(script);\r\n                    script = null;\r\n                    callback();\r\n                };\r\n                document.documentElement.appendChild(script);\r\n            };\r\n        } else {\r\n            scheduler = function (callback) {\r\n                setTimeout(callback, 0);\r\n            };\r\n        }\r\n\r\n        function processTasks() {\r\n            if (taskQueueLength) {\r\n                // Each mark represents the end of a logical group of tasks and the number of these groups is\r\n                // limited to prevent unchecked recursion.\r\n                var mark = taskQueueLength, countMarks = 0;\r\n\r\n                // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\r\n                for (var task; nextIndexToProcess < taskQueueLength; ) {\r\n                    if (task = taskQueue[nextIndexToProcess++]) {\r\n                        if (nextIndexToProcess > mark) {\r\n                            if (++countMarks >= 5000) {\r\n                                nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\r\n                                ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\r\n                                break;\r\n                            }\r\n                            mark = taskQueueLength;\r\n                        }\r\n                        try {\r\n                            task();\r\n                        } catch (ex) {\r\n                            ko.utils.deferError(ex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function scheduledProcess() {\r\n            processTasks();\r\n\r\n            // Reset the queue\r\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\r\n        }\r\n\r\n        function scheduleTaskProcessing() {\r\n            ko.tasks['scheduler'](scheduledProcess);\r\n        }\r\n\r\n        var tasks = {\r\n            'scheduler': scheduler,     // Allow overriding the scheduler\r\n\r\n            schedule: function (func) {\r\n                if (!taskQueueLength) {\r\n                    scheduleTaskProcessing();\r\n                }\r\n\r\n                taskQueue[taskQueueLength++] = func;\r\n                return nextHandle++;\r\n            },\r\n\r\n            cancel: function (handle) {\r\n                var index = handle - (nextHandle - taskQueueLength);\r\n                if (index >= nextIndexToProcess && index < taskQueueLength) {\r\n                    taskQueue[index] = null;\r\n                }\r\n            },\r\n\r\n            // For testing only: reset the queue and return the previous queue length\r\n            'resetForTesting': function () {\r\n                var length = taskQueueLength - nextIndexToProcess;\r\n                nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\r\n                return length;\r\n            },\r\n\r\n            runEarly: processTasks\r\n        };\r\n\r\n        return tasks;\r\n    })();\r\n\r\n    ko.exportSymbol('tasks', ko.tasks);\r\n    ko.exportSymbol('tasks.schedule', ko.tasks.schedule);\r\n    //ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\r\n    ko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\r\n    ko.extenders = {\r\n        'throttle': function(target, timeout) {\r\n            // Throttling means two things:\r\n\r\n            // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\r\n            //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\r\n            target['throttleEvaluation'] = timeout;\r\n\r\n            // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\r\n            //     so the target cannot change value synchronously or faster than a certain rate\r\n            var writeTimeoutInstance = null;\r\n            return ko.dependentObservable({\r\n                'read': target,\r\n                'write': function(value) {\r\n                    clearTimeout(writeTimeoutInstance);\r\n                    writeTimeoutInstance = ko.utils.setTimeout(function() {\r\n                        target(value);\r\n                    }, timeout);\r\n                }\r\n            });\r\n        },\r\n\r\n        'rateLimit': function(target, options) {\r\n            var timeout, method, limitFunction;\r\n\r\n            if (typeof options == 'number') {\r\n                timeout = options;\r\n            } else {\r\n                timeout = options['timeout'];\r\n                method = options['method'];\r\n            }\r\n\r\n            // rateLimit supersedes deferred updates\r\n            target._deferUpdates = false;\r\n\r\n            limitFunction = typeof method == 'function' ? method : method == 'notifyWhenChangesStop' ?  debounce : throttle;\r\n            target.limit(function(callback) {\r\n                return limitFunction(callback, timeout, options);\r\n            });\r\n        },\r\n\r\n        'deferred': function(target, options) {\r\n            if (options !== true) {\r\n                throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\r\n            }\r\n\r\n            if (!target._deferUpdates) {\r\n                target._deferUpdates = true;\r\n                target.limit(function (callback) {\r\n                    var handle,\r\n                        ignoreUpdates = false;\r\n                    return function () {\r\n                        if (!ignoreUpdates) {\r\n                            ko.tasks.cancel(handle);\r\n                            handle = ko.tasks.schedule(callback);\r\n\r\n                            try {\r\n                                ignoreUpdates = true;\r\n                                target['notifySubscribers'](undefined, 'dirty');\r\n                            } finally {\r\n                                ignoreUpdates = false;\r\n                            }\r\n                        }\r\n                    };\r\n                });\r\n            }\r\n        },\r\n\r\n        'notify': function(target, notifyWhen) {\r\n            target[\"equalityComparer\"] = notifyWhen == \"always\" ?\r\n                null :  // null equalityComparer means to always notify\r\n                valuesArePrimitiveAndEqual;\r\n        }\r\n    };\r\n\r\n    var primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\r\n    function valuesArePrimitiveAndEqual(a, b) {\r\n        var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\r\n        return oldValueIsPrimitive ? (a === b) : false;\r\n    }\r\n\r\n    function throttle(callback, timeout) {\r\n        var timeoutInstance;\r\n        return function () {\r\n            if (!timeoutInstance) {\r\n                timeoutInstance = ko.utils.setTimeout(function () {\r\n                    timeoutInstance = undefined;\r\n                    callback();\r\n                }, timeout);\r\n            }\r\n        };\r\n    }\r\n\r\n    function debounce(callback, timeout) {\r\n        var timeoutInstance;\r\n        return function () {\r\n            clearTimeout(timeoutInstance);\r\n            timeoutInstance = ko.utils.setTimeout(callback, timeout);\r\n        };\r\n    }\r\n\r\n    function applyExtenders(requestedExtenders) {\r\n        var target = this;\r\n        if (requestedExtenders) {\r\n            ko.utils.objectForEach(requestedExtenders, function(key, value) {\r\n                var extenderHandler = ko.extenders[key];\r\n                if (typeof extenderHandler == 'function') {\r\n                    target = extenderHandler(target, value) || target;\r\n                }\r\n            });\r\n        }\r\n        return target;\r\n    }\r\n\r\n    ko.exportSymbol('extenders', ko.extenders);\r\n\r\n    ko.subscription = function (target, callback, disposeCallback) {\r\n        this._target = target;\r\n        this._callback = callback;\r\n        this._disposeCallback = disposeCallback;\r\n        this._isDisposed = false;\r\n        this._node = null;\r\n        this._domNodeDisposalCallback = null;\r\n        ko.exportProperty(this, 'dispose', this.dispose);\r\n        ko.exportProperty(this, 'disposeWhenNodeIsRemoved', this.disposeWhenNodeIsRemoved);\r\n    };\r\n    ko.subscription.prototype.dispose = function () {\r\n        if (this._domNodeDisposalCallback) {\r\n            ko.utils.domNodeDisposal.removeDisposeCallback(this._node, this._domNodeDisposalCallback);\r\n        }\r\n        this._isDisposed = true;\r\n        this._disposeCallback();\r\n    };\r\n    ko.subscription.prototype.disposeWhenNodeIsRemoved = function (node) {\r\n        this._node = node;\r\n        ko.utils.domNodeDisposal.addDisposeCallback(node, this._domNodeDisposalCallback = this.dispose.bind(this));\r\n    };\r\n\r\n    ko.subscribable = function () {\r\n        ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\r\n        ko_subscribable_fn.init(this);\r\n    }\r\n\r\n    var defaultEvent = \"change\";\r\n\r\n    // Moved out of \"limit\" to avoid the extra closure\r\n    function limitNotifySubscribers(value, event) {\r\n        if (!event || event === defaultEvent) {\r\n            this._limitChange(value);\r\n        } else if (event === 'beforeChange') {\r\n            this._limitBeforeChange(value);\r\n        } else {\r\n            this._origNotifySubscribers(value, event);\r\n        }\r\n    }\r\n\r\n    var ko_subscribable_fn = {\r\n        init: function(instance) {\r\n            instance._subscriptions = { \"change\": [] };\r\n            instance._versionNumber = 1;\r\n        },\r\n\r\n        subscribe: function (callback, callbackTarget, event) {\r\n            var self = this;\r\n\r\n            event = event || defaultEvent;\r\n            var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\r\n\r\n            var subscription = new ko.subscription(self, boundCallback, function () {\r\n                ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\r\n                if (self.afterSubscriptionRemove)\r\n                    self.afterSubscriptionRemove(event);\r\n            });\r\n\r\n            if (self.beforeSubscriptionAdd)\r\n                self.beforeSubscriptionAdd(event);\r\n\r\n            if (!self._subscriptions[event])\r\n                self._subscriptions[event] = [];\r\n            self._subscriptions[event].push(subscription);\r\n\r\n            return subscription;\r\n        },\r\n\r\n        \"notifySubscribers\": function (valueToNotify, event) {\r\n            event = event || defaultEvent;\r\n            if (event === defaultEvent) {\r\n                this.updateVersion();\r\n            }\r\n            if (this.hasSubscriptionsForEvent(event)) {\r\n                var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\r\n                try {\r\n                    ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\r\n                    for (var i = 0, subscription; subscription = subs[i]; ++i) {\r\n                        // In case a subscription was disposed during the arrayForEach cycle, check\r\n                        // for isDisposed on each subscription before invoking its callback\r\n                        if (!subscription._isDisposed)\r\n                            subscription._callback(valueToNotify);\r\n                    }\r\n                } finally {\r\n                    ko.dependencyDetection.end(); // End suppressing dependency detection\r\n                }\r\n            }\r\n        },\r\n\r\n        getVersion: function () {\r\n            return this._versionNumber;\r\n        },\r\n\r\n        hasChanged: function (versionToCheck) {\r\n            return this.getVersion() !== versionToCheck;\r\n        },\r\n\r\n        updateVersion: function () {\r\n            ++this._versionNumber;\r\n        },\r\n\r\n        limit: function(limitFunction) {\r\n            var self = this, selfIsObservable = ko.isObservable(self),\r\n                ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, didUpdate,\r\n                beforeChange = 'beforeChange';\r\n\r\n            if (!self._origNotifySubscribers) {\r\n                self._origNotifySubscribers = self[\"notifySubscribers\"];\r\n                self[\"notifySubscribers\"] = limitNotifySubscribers;\r\n            }\r\n\r\n            var finish = limitFunction(function() {\r\n                self._notificationIsPending = false;\r\n\r\n                // If an observable provided a reference to itself, access it to get the latest value.\r\n                // This allows computed observables to delay calculating their value until needed.\r\n                if (selfIsObservable && pendingValue === self) {\r\n                    pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\r\n                }\r\n                var shouldNotify = notifyNextChange || (didUpdate && self.isDifferent(previousValue, pendingValue));\r\n\r\n                didUpdate = notifyNextChange = ignoreBeforeChange = false;\r\n\r\n                if (shouldNotify) {\r\n                    self._origNotifySubscribers(previousValue = pendingValue);\r\n                }\r\n            });\r\n\r\n            self._limitChange = function(value, isDirty) {\r\n                if (!isDirty || !self._notificationIsPending) {\r\n                    didUpdate = !isDirty;\r\n                }\r\n                self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\r\n                self._notificationIsPending = ignoreBeforeChange = true;\r\n                pendingValue = value;\r\n                finish();\r\n            };\r\n            self._limitBeforeChange = function(value) {\r\n                if (!ignoreBeforeChange) {\r\n                    previousValue = value;\r\n                    self._origNotifySubscribers(value, beforeChange);\r\n                }\r\n            };\r\n            self._recordUpdate = function() {\r\n                didUpdate = true;\r\n            };\r\n            self._notifyNextChangeIfValueIsDifferent = function() {\r\n                if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\r\n                    notifyNextChange = true;\r\n                }\r\n            };\r\n        },\r\n\r\n        hasSubscriptionsForEvent: function(event) {\r\n            return this._subscriptions[event] && this._subscriptions[event].length;\r\n        },\r\n\r\n        getSubscriptionsCount: function (event) {\r\n            if (event) {\r\n                return this._subscriptions[event] && this._subscriptions[event].length || 0;\r\n            } else {\r\n                var total = 0;\r\n                ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\r\n                    if (eventName !== 'dirty')\r\n                        total += subscriptions.length;\r\n                });\r\n                return total;\r\n            }\r\n        },\r\n\r\n        isDifferent: function(oldValue, newValue) {\r\n            return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\r\n        },\r\n\r\n        toString: function() {\r\n          return '[object Object]'\r\n        },\r\n\r\n        extend: applyExtenders\r\n    };\r\n\r\n    ko.exportProperty(ko_subscribable_fn, 'init', ko_subscribable_fn.init);\r\n    ko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\r\n    ko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\r\n    ko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\r\n\r\n    // For browsers that support proto assignment, we overwrite the prototype of each\r\n    // observable instance. Since observables are functions, we need Function.prototype\r\n    // to still be in the prototype chain.\r\n    if (ko.utils.canSetPrototype) {\r\n        ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\r\n    }\r\n\r\n    ko.subscribable['fn'] = ko_subscribable_fn;\r\n\r\n\r\n    ko.isSubscribable = function (instance) {\r\n        return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\r\n    };\r\n\r\n    ko.exportSymbol('subscribable', ko.subscribable);\r\n    ko.exportSymbol('isSubscribable', ko.isSubscribable);\r\n\r\n    ko.computedContext = ko.dependencyDetection = (function () {\r\n        var outerFrames = [],\r\n            currentFrame,\r\n            lastId = 0;\r\n\r\n        // Return a unique ID that can be assigned to an observable for dependency tracking.\r\n        // Theoretically, you could eventually overflow the number storage size, resulting\r\n        // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\r\n        // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\r\n        // take over 285 years to reach that number.\r\n        // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\r\n        function getId() {\r\n            return ++lastId;\r\n        }\r\n\r\n        function begin(options) {\r\n            outerFrames.push(currentFrame);\r\n            currentFrame = options;\r\n        }\r\n\r\n        function end() {\r\n            currentFrame = outerFrames.pop();\r\n        }\r\n\r\n        return {\r\n            begin: begin,\r\n\r\n            end: end,\r\n\r\n            registerDependency: function (subscribable) {\r\n                if (currentFrame) {\r\n                    if (!ko.isSubscribable(subscribable))\r\n                        throw new Error(\"Only subscribable things can act as dependencies\");\r\n                    currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\r\n                }\r\n            },\r\n\r\n            ignore: function (callback, callbackTarget, callbackArgs) {\r\n                try {\r\n                    begin();\r\n                    return callback.apply(callbackTarget, callbackArgs || []);\r\n                } finally {\r\n                    end();\r\n                }\r\n            },\r\n\r\n            getDependenciesCount: function () {\r\n                if (currentFrame)\r\n                    return currentFrame.computed.getDependenciesCount();\r\n            },\r\n\r\n            getDependencies: function () {\r\n                if (currentFrame)\r\n                    return currentFrame.computed.getDependencies();\r\n            },\r\n\r\n            isInitial: function() {\r\n                if (currentFrame)\r\n                    return currentFrame.isInitial;\r\n            }\r\n        };\r\n    })();\r\n\r\n    ko.exportSymbol('computedContext', ko.computedContext);\r\n    ko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\r\n    ko.exportSymbol('computedContext.getDependencies', ko.computedContext.getDependencies);\r\n    ko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\r\n    ko.exportSymbol('computedContext.registerDependency', ko.computedContext.registerDependency);\r\n\r\n    ko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\r\n    var observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\r\n\r\n    ko.observable = function (initialValue) {\r\n        function observable() {\r\n            if (arguments.length > 0) {\r\n                // Write\r\n\r\n                // Ignore writes if the value hasn't changed\r\n                if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\r\n                    observable.valueWillMutate();\r\n                    observable[observableLatestValue] = arguments[0];\r\n                    observable.valueHasMutated();\r\n                }\r\n                return this; // Permits chained assignments\r\n            }\r\n            else {\r\n                // Read\r\n                ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\r\n                return observable[observableLatestValue];\r\n            }\r\n        }\r\n\r\n        observable[observableLatestValue] = initialValue;\r\n\r\n        // Inherit from 'subscribable'\r\n        if (!ko.utils.canSetPrototype) {\r\n            // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n            ko.utils.extend(observable, ko.subscribable['fn']);\r\n        }\r\n        ko.subscribable['fn'].init(observable);\r\n\r\n        // Inherit from 'observable'\r\n        ko.utils.setPrototypeOfOrExtend(observable, observableFn);\r\n\r\n        if (ko.options['deferUpdates']) {\r\n            ko.extenders['deferred'](observable, true);\r\n        }\r\n\r\n        return observable;\r\n    }\r\n\r\n    // Define prototype for observables\r\n    var observableFn = {\r\n        'equalityComparer': valuesArePrimitiveAndEqual,\r\n        peek: function() { return this[observableLatestValue]; },\r\n        valueHasMutated: function () {\r\n            this['notifySubscribers'](this[observableLatestValue], 'spectate');\r\n            this['notifySubscribers'](this[observableLatestValue]);\r\n        },\r\n        valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\r\n    };\r\n\r\n    // Note that for browsers that don't support proto assignment, the\r\n    // inheritance chain is created manually in the ko.observable constructor\r\n    if (ko.utils.canSetPrototype) {\r\n        ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\r\n    }\r\n\r\n    var protoProperty = ko.observable.protoProperty = '__ko_proto__';\r\n    observableFn[protoProperty] = ko.observable;\r\n\r\n    ko.isObservable = function (instance) {\r\n        var proto = typeof instance == 'function' && instance[protoProperty];\r\n        if (proto && proto !== observableFn[protoProperty] && proto !== ko.computed['fn'][protoProperty]) {\r\n            throw Error(\"Invalid object that looks like an observable; possibly from another Knockout instance\");\r\n        }\r\n        return !!proto;\r\n    };\r\n\r\n    ko.isWriteableObservable = function (instance) {\r\n        return (typeof instance == 'function' && (\r\n            (instance[protoProperty] === observableFn[protoProperty]) ||  // Observable\r\n            (instance[protoProperty] === ko.computed['fn'][protoProperty] && instance.hasWriteFunction)));   // Writable computed observable\r\n    };\r\n\r\n    ko.exportSymbol('observable', ko.observable);\r\n    ko.exportSymbol('isObservable', ko.isObservable);\r\n    ko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\r\n    ko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\r\n    ko.exportSymbol('observable.fn', observableFn);\r\n    ko.exportProperty(observableFn, 'peek', observableFn.peek);\r\n    ko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\r\n    ko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\r\n    ko.observableArray = function (initialValues) {\r\n        initialValues = initialValues || [];\r\n\r\n        if (typeof initialValues != 'object' || !('length' in initialValues))\r\n            throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\r\n\r\n        var result = ko.observable(initialValues);\r\n        ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\r\n        return result.extend({'trackArrayChanges':true});\r\n    };\r\n\r\n    ko.observableArray['fn'] = {\r\n        'remove': function (valueOrPredicate) {\r\n            var underlyingArray = this.peek();\r\n            var removedValues = [];\r\n            var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n            for (var i = 0; i < underlyingArray.length; i++) {\r\n                var value = underlyingArray[i];\r\n                if (predicate(value)) {\r\n                    if (removedValues.length === 0) {\r\n                        this.valueWillMutate();\r\n                    }\r\n                    if (underlyingArray[i] !== value) {\r\n                        throw Error(\"Array modified during remove; cannot remove item\");\r\n                    }\r\n                    removedValues.push(value);\r\n                    underlyingArray.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n            if (removedValues.length) {\r\n                this.valueHasMutated();\r\n            }\r\n            return removedValues;\r\n        },\r\n\r\n        'removeAll': function (arrayOfValues) {\r\n            // If you passed zero args, we remove everything\r\n            if (arrayOfValues === undefined) {\r\n                var underlyingArray = this.peek();\r\n                var allValues = underlyingArray.slice(0);\r\n                this.valueWillMutate();\r\n                underlyingArray.splice(0, underlyingArray.length);\r\n                this.valueHasMutated();\r\n                return allValues;\r\n            }\r\n            // If you passed an arg, we interpret it as an array of entries to remove\r\n            if (!arrayOfValues)\r\n                return [];\r\n            return this['remove'](function (value) {\r\n                return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n            });\r\n        },\r\n\r\n        'destroy': function (valueOrPredicate) {\r\n            var underlyingArray = this.peek();\r\n            var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\r\n            this.valueWillMutate();\r\n            for (var i = underlyingArray.length - 1; i >= 0; i--) {\r\n                var value = underlyingArray[i];\r\n                if (predicate(value))\r\n                    value[\"_destroy\"] = true;\r\n            }\r\n            this.valueHasMutated();\r\n        },\r\n\r\n        'destroyAll': function (arrayOfValues) {\r\n            // If you passed zero args, we destroy everything\r\n            if (arrayOfValues === undefined)\r\n                return this['destroy'](function() { return true });\r\n\r\n            // If you passed an arg, we interpret it as an array of entries to destroy\r\n            if (!arrayOfValues)\r\n                return [];\r\n            return this['destroy'](function (value) {\r\n                return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\r\n            });\r\n        },\r\n\r\n        'indexOf': function (item) {\r\n            var underlyingArray = this();\r\n            return ko.utils.arrayIndexOf(underlyingArray, item);\r\n        },\r\n\r\n        'replace': function(oldItem, newItem) {\r\n            var index = this['indexOf'](oldItem);\r\n            if (index >= 0) {\r\n                this.valueWillMutate();\r\n                this.peek()[index] = newItem;\r\n                this.valueHasMutated();\r\n            }\r\n        },\r\n\r\n        'sorted': function (compareFunction) {\r\n            var arrayCopy = this().slice(0);\r\n            return compareFunction ? arrayCopy.sort(compareFunction) : arrayCopy.sort();\r\n        },\r\n\r\n        'reversed': function () {\r\n            return this().slice(0).reverse();\r\n        }\r\n    };\r\n\r\n    // Note that for browsers that don't support proto assignment, the\r\n    // inheritance chain is created manually in the ko.observableArray constructor\r\n    if (ko.utils.canSetPrototype) {\r\n        ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\r\n    }\r\n\r\n    // Populate ko.observableArray.fn with read/write functions from native arrays\r\n    // Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\r\n    // because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\r\n    ko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\r\n        ko.observableArray['fn'][methodName] = function () {\r\n            // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\r\n            // (for consistency with mutating regular observables)\r\n            var underlyingArray = this.peek();\r\n            this.valueWillMutate();\r\n            this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\r\n            var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\r\n            this.valueHasMutated();\r\n            // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\r\n            return methodCallResult === underlyingArray ? this : methodCallResult;\r\n        };\r\n    });\r\n\r\n    // Populate ko.observableArray.fn with read-only functions from native arrays\r\n    ko.utils.arrayForEach([\"slice\"], function (methodName) {\r\n        ko.observableArray['fn'][methodName] = function () {\r\n            var underlyingArray = this();\r\n            return underlyingArray[methodName].apply(underlyingArray, arguments);\r\n        };\r\n    });\r\n\r\n    ko.isObservableArray = function (instance) {\r\n        return ko.isObservable(instance)\r\n            && typeof instance[\"remove\"] == \"function\"\r\n            && typeof instance[\"push\"] == \"function\";\r\n    };\r\n\r\n    ko.exportSymbol('observableArray', ko.observableArray);\r\n    ko.exportSymbol('isObservableArray', ko.isObservableArray);\r\n    var arrayChangeEventName = 'arrayChange';\r\n    ko.extenders['trackArrayChanges'] = function(target, options) {\r\n        // Use the provided options--each call to trackArrayChanges overwrites the previously set options\r\n        target.compareArrayOptions = {};\r\n        if (options && typeof options == \"object\") {\r\n            ko.utils.extend(target.compareArrayOptions, options);\r\n        }\r\n        target.compareArrayOptions['sparse'] = true;\r\n\r\n        // Only modify the target observable once\r\n        if (target.cacheDiffForKnownOperation) {\r\n            return;\r\n        }\r\n        var trackingChanges = false,\r\n            cachedDiff = null,\r\n            arrayChangeSubscription,\r\n            pendingNotifications = 0,\r\n            underlyingNotifySubscribersFunction,\r\n            underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\r\n            underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\r\n\r\n        // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\r\n        target.beforeSubscriptionAdd = function (event) {\r\n            if (underlyingBeforeSubscriptionAddFunction)\r\n                underlyingBeforeSubscriptionAddFunction.call(target, event);\r\n            if (event === arrayChangeEventName) {\r\n                trackChanges();\r\n            }\r\n        };\r\n        // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\r\n        target.afterSubscriptionRemove = function (event) {\r\n            if (underlyingAfterSubscriptionRemoveFunction)\r\n                underlyingAfterSubscriptionRemoveFunction.call(target, event);\r\n            if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n                if (underlyingNotifySubscribersFunction) {\r\n                    target['notifySubscribers'] = underlyingNotifySubscribersFunction;\r\n                    underlyingNotifySubscribersFunction = undefined;\r\n                }\r\n                if (arrayChangeSubscription) {\r\n                    arrayChangeSubscription.dispose();\r\n                }\r\n                arrayChangeSubscription = null;\r\n                trackingChanges = false;\r\n            }\r\n        };\r\n\r\n        function trackChanges() {\r\n            // Calling 'trackChanges' multiple times is the same as calling it once\r\n            if (trackingChanges) {\r\n                return;\r\n            }\r\n\r\n            trackingChanges = true;\r\n\r\n            // Intercept \"notifySubscribers\" to track how many times it was called.\r\n            underlyingNotifySubscribersFunction = target['notifySubscribers'];\r\n            target['notifySubscribers'] = function(valueToNotify, event) {\r\n                if (!event || event === defaultEvent) {\r\n                    ++pendingNotifications;\r\n                }\r\n                return underlyingNotifySubscribersFunction.apply(this, arguments);\r\n            };\r\n\r\n            // Each time the array changes value, capture a clone so that on the next\r\n            // change it's possible to produce a diff\r\n            var previousContents = [].concat(target.peek() || []);\r\n            cachedDiff = null;\r\n            arrayChangeSubscription = target.subscribe(function(currentContents) {\r\n                // Make a copy of the current contents and ensure it's an array\r\n                currentContents = [].concat(currentContents || []);\r\n\r\n                // Compute the diff and issue notifications, but only if someone is listening\r\n                if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\r\n                    var changes = getChanges(previousContents, currentContents);\r\n                }\r\n\r\n                // Eliminate references to the old, removed items, so they can be GCed\r\n                previousContents = currentContents;\r\n                cachedDiff = null;\r\n                pendingNotifications = 0;\r\n\r\n                if (changes && changes.length) {\r\n                    target['notifySubscribers'](changes, arrayChangeEventName);\r\n                }\r\n            });\r\n        }\r\n\r\n        function getChanges(previousContents, currentContents) {\r\n            // We try to re-use cached diffs.\r\n            // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\r\n            // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\r\n            // notifications are issued immediately so we wouldn't be queueing up more than one.\r\n            if (!cachedDiff || pendingNotifications > 1) {\r\n                cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\r\n            }\r\n\r\n            return cachedDiff;\r\n        }\r\n\r\n        target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\r\n            // Only run if we're currently tracking changes for this observable array\r\n            // and there aren't any pending deferred notifications.\r\n            if (!trackingChanges || pendingNotifications) {\r\n                return;\r\n            }\r\n            var diff = [],\r\n                arrayLength = rawArray.length,\r\n                argsLength = args.length,\r\n                offset = 0;\r\n\r\n            function pushDiff(status, value, index) {\r\n                return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\r\n            }\r\n            switch (operationName) {\r\n                case 'push':\r\n                    offset = arrayLength;\r\n                case 'unshift':\r\n                    for (var index = 0; index < argsLength; index++) {\r\n                        pushDiff('added', args[index], offset + index);\r\n                    }\r\n                    break;\r\n\r\n                case 'pop':\r\n                    offset = arrayLength - 1;\r\n                case 'shift':\r\n                    if (arrayLength) {\r\n                        pushDiff('deleted', rawArray[offset], offset);\r\n                    }\r\n                    break;\r\n\r\n                case 'splice':\r\n                    // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\r\n                    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\r\n                    var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\r\n                        endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\r\n                        endAddIndex = startIndex + argsLength - 2,\r\n                        endIndex = Math.max(endDeleteIndex, endAddIndex),\r\n                        additions = [], deletions = [];\r\n                    for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\r\n                        if (index < endDeleteIndex)\r\n                            deletions.push(pushDiff('deleted', rawArray[index], index));\r\n                        if (index < endAddIndex)\r\n                            additions.push(pushDiff('added', args[argsIndex], index));\r\n                    }\r\n                    ko.utils.findMovesInArrayComparison(deletions, additions);\r\n                    break;\r\n\r\n                default:\r\n                    return;\r\n            }\r\n            cachedDiff = diff;\r\n        };\r\n    };\r\n    var computedState = ko.utils.createSymbolOrString('_state');\r\n\r\n    ko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\r\n        if (typeof evaluatorFunctionOrOptions === \"object\") {\r\n            // Single-parameter syntax - everything is on this \"options\" param\r\n            options = evaluatorFunctionOrOptions;\r\n        } else {\r\n            // Multi-parameter syntax - construct the options according to the params passed\r\n            options = options || {};\r\n            if (evaluatorFunctionOrOptions) {\r\n                options[\"read\"] = evaluatorFunctionOrOptions;\r\n            }\r\n        }\r\n        if (typeof options[\"read\"] != \"function\")\r\n            throw Error(\"Pass a function that returns the value of the ko.computed\");\r\n\r\n        var writeFunction = options[\"write\"];\r\n        var state = {\r\n            latestValue: undefined,\r\n            isStale: true,\r\n            isDirty: true,\r\n            isBeingEvaluated: false,\r\n            suppressDisposalUntilDisposeWhenReturnsFalse: false,\r\n            isDisposed: false,\r\n            pure: false,\r\n            isSleeping: false,\r\n            readFunction: options[\"read\"],\r\n            evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\r\n            disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\r\n            disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\r\n            domNodeDisposalCallback: null,\r\n            dependencyTracking: {},\r\n            dependenciesCount: 0,\r\n            evaluationTimeoutInstance: null\r\n        };\r\n\r\n        function computedObservable() {\r\n            if (arguments.length > 0) {\r\n                if (typeof writeFunction === \"function\") {\r\n                    // Writing a value\r\n                    writeFunction.apply(state.evaluatorFunctionTarget, arguments);\r\n                } else {\r\n                    throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\r\n                }\r\n                return this; // Permits chained assignments\r\n            } else {\r\n                // Reading the value\r\n                if (!state.isDisposed) {\r\n                    ko.dependencyDetection.registerDependency(computedObservable);\r\n                }\r\n                if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\r\n                    computedObservable.evaluateImmediate();\r\n                }\r\n                return state.latestValue;\r\n            }\r\n        }\r\n\r\n        computedObservable[computedState] = state;\r\n        computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\r\n\r\n        // Inherit from 'subscribable'\r\n        if (!ko.utils.canSetPrototype) {\r\n            // 'subscribable' won't be on the prototype chain unless we put it there directly\r\n            ko.utils.extend(computedObservable, ko.subscribable['fn']);\r\n        }\r\n        ko.subscribable['fn'].init(computedObservable);\r\n\r\n        // Inherit from 'computed'\r\n        ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\r\n\r\n        if (options['pure']) {\r\n            state.pure = true;\r\n            state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\r\n            ko.utils.extend(computedObservable, pureComputedOverrides);\r\n        } else if (options['deferEvaluation']) {\r\n            ko.utils.extend(computedObservable, deferEvaluationOverrides);\r\n        }\r\n\r\n        if (ko.options['deferUpdates']) {\r\n            ko.extenders['deferred'](computedObservable, true);\r\n        }\r\n\r\n        if (DEBUG) {\r\n            // #1731 - Aid debugging by exposing the computed's options\r\n            computedObservable[\"_options\"] = options;\r\n        }\r\n\r\n        if (state.disposeWhenNodeIsRemoved) {\r\n            // Since this computed is associated with a DOM node, and we don't want to dispose the computed\r\n            // until the DOM node is *removed* from the document (as opposed to never having been in the document),\r\n            // we'll prevent disposal until \"disposeWhen\" first returns false.\r\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\r\n\r\n            // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\r\n            // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\r\n            // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\r\n            // be documented or used by application code, as it's likely to change in a future version of KO.\r\n            if (!state.disposeWhenNodeIsRemoved.nodeType) {\r\n                state.disposeWhenNodeIsRemoved = null;\r\n            }\r\n        }\r\n\r\n        // Evaluate, unless sleeping or deferEvaluation is true\r\n        if (!state.isSleeping && !options['deferEvaluation']) {\r\n            computedObservable.evaluateImmediate();\r\n        }\r\n\r\n        // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\r\n        // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\r\n        if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\r\n            ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\r\n                computedObservable.dispose();\r\n            });\r\n        }\r\n\r\n        return computedObservable;\r\n    };\r\n\r\n    // Utility function that disposes a given dependencyTracking entry\r\n    function computedDisposeDependencyCallback(id, entryToDispose) {\r\n        if (entryToDispose !== null && entryToDispose.dispose) {\r\n            entryToDispose.dispose();\r\n        }\r\n    }\r\n\r\n    // This function gets called each time a dependency is detected while evaluating a computed.\r\n    // It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\r\n    function computedBeginDependencyDetectionCallback(subscribable, id) {\r\n        var computedObservable = this.computedObservable,\r\n            state = computedObservable[computedState];\r\n        if (!state.isDisposed) {\r\n            if (this.disposalCount && this.disposalCandidates[id]) {\r\n                // Don't want to dispose this subscription, as it's still being used\r\n                computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\r\n                this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\r\n                --this.disposalCount;\r\n            } else if (!state.dependencyTracking[id]) {\r\n                // Brand new subscription - add it\r\n                computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\r\n            }\r\n            // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\r\n            if (subscribable._notificationIsPending) {\r\n                subscribable._notifyNextChangeIfValueIsDifferent();\r\n            }\r\n        }\r\n    }\r\n\r\n    var computedFn = {\r\n        \"equalityComparer\": valuesArePrimitiveAndEqual,\r\n        getDependenciesCount: function () {\r\n            return this[computedState].dependenciesCount;\r\n        },\r\n        getDependencies: function () {\r\n            var dependencyTracking = this[computedState].dependencyTracking, dependentObservables = [];\r\n\r\n            ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\r\n                dependentObservables[dependency._order] = dependency._target;\r\n            });\r\n\r\n            return dependentObservables;\r\n        },\r\n        addDependencyTracking: function (id, target, trackingObj) {\r\n            if (this[computedState].pure && target === this) {\r\n                throw Error(\"A 'pure' computed must not be called recursively\");\r\n            }\r\n\r\n            this[computedState].dependencyTracking[id] = trackingObj;\r\n            trackingObj._order = this[computedState].dependenciesCount++;\r\n            trackingObj._version = target.getVersion();\r\n        },\r\n        haveDependenciesChanged: function () {\r\n            var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\r\n            for (id in dependencyTracking) {\r\n                if (Object.prototype.hasOwnProperty.call(dependencyTracking, id)) {\r\n                    dependency = dependencyTracking[id];\r\n                    if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        markDirty: function () {\r\n            // Process \"dirty\" events if we can handle delayed notifications\r\n            if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\r\n                this._evalDelayed(false /*isChange*/);\r\n            }\r\n        },\r\n        isActive: function () {\r\n            var state = this[computedState];\r\n            return state.isDirty || state.dependenciesCount > 0;\r\n        },\r\n        respondToChange: function () {\r\n            // Ignore \"change\" events if we've already scheduled a delayed notification\r\n            if (!this._notificationIsPending) {\r\n                this.evaluatePossiblyAsync();\r\n            } else if (this[computedState].isDirty) {\r\n                this[computedState].isStale = true;\r\n            }\r\n        },\r\n        subscribeToDependency: function (target) {\r\n            if (target._deferUpdates) {\r\n                var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\r\n                    changeSub = target.subscribe(this.respondToChange, this);\r\n                return {\r\n                    _target: target,\r\n                    dispose: function () {\r\n                        dirtySub.dispose();\r\n                        changeSub.dispose();\r\n                    }\r\n                };\r\n            } else {\r\n                return target.subscribe(this.evaluatePossiblyAsync, this);\r\n            }\r\n        },\r\n        evaluatePossiblyAsync: function () {\r\n            var computedObservable = this,\r\n                throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\r\n            if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\r\n                clearTimeout(this[computedState].evaluationTimeoutInstance);\r\n                this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\r\n                    computedObservable.evaluateImmediate(true /*notifyChange*/);\r\n                }, throttleEvaluationTimeout);\r\n            } else if (computedObservable._evalDelayed) {\r\n                computedObservable._evalDelayed(true /*isChange*/);\r\n            } else {\r\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\r\n            }\r\n        },\r\n        evaluateImmediate: function (notifyChange) {\r\n            var computedObservable = this,\r\n                state = computedObservable[computedState],\r\n                disposeWhen = state.disposeWhen,\r\n                changed = false;\r\n\r\n            if (state.isBeingEvaluated) {\r\n                // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\r\n                // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\r\n                // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\r\n                // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\r\n                return;\r\n            }\r\n\r\n            // Do not evaluate (and possibly capture new dependencies) if disposed\r\n            if (state.isDisposed) {\r\n                return;\r\n            }\r\n\r\n            if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\r\n                // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\r\n                if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\r\n                    computedObservable.dispose();\r\n                    return;\r\n                }\r\n            } else {\r\n                // It just did return false, so we can stop suppressing now\r\n                state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\r\n            }\r\n\r\n            state.isBeingEvaluated = true;\r\n            try {\r\n                changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\r\n            } finally {\r\n                state.isBeingEvaluated = false;\r\n            }\r\n\r\n            return changed;\r\n        },\r\n        evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\r\n            // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\r\n            // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\r\n            // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\r\n\r\n            var computedObservable = this,\r\n                state = computedObservable[computedState],\r\n                changed = false;\r\n\r\n            // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\r\n            // Then, during evaluation, we cross off any that are in fact still being used.\r\n            var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\r\n                dependencyDetectionContext = {\r\n                    computedObservable: computedObservable,\r\n                    disposalCandidates: state.dependencyTracking,\r\n                    disposalCount: state.dependenciesCount\r\n                };\r\n\r\n            ko.dependencyDetection.begin({\r\n                callbackTarget: dependencyDetectionContext,\r\n                callback: computedBeginDependencyDetectionCallback,\r\n                computed: computedObservable,\r\n                isInitial: isInitial\r\n            });\r\n\r\n            state.dependencyTracking = {};\r\n            state.dependenciesCount = 0;\r\n\r\n            var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\r\n\r\n            if (!state.dependenciesCount) {\r\n                computedObservable.dispose();\r\n                changed = true; // When evaluation causes a disposal, make sure all dependent computeds get notified so they'll see the new state\r\n            } else {\r\n                changed = computedObservable.isDifferent(state.latestValue, newValue);\r\n            }\r\n\r\n            if (changed) {\r\n                if (!state.isSleeping) {\r\n                    computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\r\n                } else {\r\n                    computedObservable.updateVersion();\r\n                }\r\n\r\n                state.latestValue = newValue;\r\n                if (DEBUG) computedObservable._latestValue = newValue;\r\n\r\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"spectate\");\r\n\r\n                if (!state.isSleeping && notifyChange) {\r\n                    computedObservable[\"notifySubscribers\"](state.latestValue);\r\n                }\r\n                if (computedObservable._recordUpdate) {\r\n                    computedObservable._recordUpdate();\r\n                }\r\n            }\r\n\r\n            if (isInitial) {\r\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\r\n            }\r\n\r\n            return changed;\r\n        },\r\n        evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\r\n            // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\r\n            // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\r\n            // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\r\n            // overhead of computed evaluation (on V8 at least).\r\n\r\n            try {\r\n                var readFunction = state.readFunction;\r\n                return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\r\n            } finally {\r\n                ko.dependencyDetection.end();\r\n\r\n                // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\r\n                if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\r\n                    ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\r\n                }\r\n\r\n                state.isStale = state.isDirty = false;\r\n            }\r\n        },\r\n        peek: function (evaluate) {\r\n            // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\r\n            // Pass in true to evaluate if needed.\r\n            var state = this[computedState];\r\n            if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\r\n                this.evaluateImmediate();\r\n            }\r\n            return state.latestValue;\r\n        },\r\n        limit: function (limitFunction) {\r\n            // Override the limit function with one that delays evaluation as well\r\n            ko.subscribable['fn'].limit.call(this, limitFunction);\r\n            this._evalIfChanged = function () {\r\n                if (!this[computedState].isSleeping) {\r\n                    if (this[computedState].isStale) {\r\n                        this.evaluateImmediate();\r\n                    } else {\r\n                        this[computedState].isDirty = false;\r\n                    }\r\n                }\r\n                return this[computedState].latestValue;\r\n            };\r\n            this._evalDelayed = function (isChange) {\r\n                this._limitBeforeChange(this[computedState].latestValue);\r\n\r\n                // Mark as dirty\r\n                this[computedState].isDirty = true;\r\n                if (isChange) {\r\n                    this[computedState].isStale = true;\r\n                }\r\n\r\n                // Pass the observable to the \"limit\" code, which will evaluate it when\r\n                // it's time to do the notification.\r\n                this._limitChange(this, !isChange /* isDirty */);\r\n            };\r\n        },\r\n        dispose: function () {\r\n            var state = this[computedState];\r\n            if (!state.isSleeping && state.dependencyTracking) {\r\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                    if (dependency.dispose)\r\n                        dependency.dispose();\r\n                });\r\n            }\r\n            if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\r\n                ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\r\n            }\r\n            state.dependencyTracking = undefined;\r\n            state.dependenciesCount = 0;\r\n            state.isDisposed = true;\r\n            state.isStale = false;\r\n            state.isDirty = false;\r\n            state.isSleeping = false;\r\n            state.disposeWhenNodeIsRemoved = undefined;\r\n            state.disposeWhen = undefined;\r\n            state.readFunction = undefined;\r\n            if (!this.hasWriteFunction) {\r\n                state.evaluatorFunctionTarget = undefined;\r\n            }\r\n        }\r\n    };\r\n\r\n    var pureComputedOverrides = {\r\n        beforeSubscriptionAdd: function (event) {\r\n            // If asleep, wake up the computed by subscribing to any dependencies.\r\n            var computedObservable = this,\r\n                state = computedObservable[computedState];\r\n            if (!state.isDisposed && state.isSleeping && event == 'change') {\r\n                state.isSleeping = false;\r\n                if (state.isStale || computedObservable.haveDependenciesChanged()) {\r\n                    state.dependencyTracking = null;\r\n                    state.dependenciesCount = 0;\r\n                    if (computedObservable.evaluateImmediate()) {\r\n                        computedObservable.updateVersion();\r\n                    }\r\n                } else {\r\n                    // First put the dependencies in order\r\n                    var dependenciesOrder = [];\r\n                    ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                        dependenciesOrder[dependency._order] = id;\r\n                    });\r\n                    // Next, subscribe to each one\r\n                    ko.utils.arrayForEach(dependenciesOrder, function (id, order) {\r\n                        var dependency = state.dependencyTracking[id],\r\n                            subscription = computedObservable.subscribeToDependency(dependency._target);\r\n                        subscription._order = order;\r\n                        subscription._version = dependency._version;\r\n                        state.dependencyTracking[id] = subscription;\r\n                    });\r\n                    // Waking dependencies may have triggered effects\r\n                    if (computedObservable.haveDependenciesChanged()) {\r\n                        if (computedObservable.evaluateImmediate()) {\r\n                            computedObservable.updateVersion();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!state.isDisposed) {     // test since evaluating could trigger disposal\r\n                    computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\r\n                }\r\n            }\r\n        },\r\n        afterSubscriptionRemove: function (event) {\r\n            var state = this[computedState];\r\n            if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\r\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\r\n                    if (dependency.dispose) {\r\n                        state.dependencyTracking[id] = {\r\n                            _target: dependency._target,\r\n                            _order: dependency._order,\r\n                            _version: dependency._version\r\n                        };\r\n                        dependency.dispose();\r\n                    }\r\n                });\r\n                state.isSleeping = true;\r\n                this[\"notifySubscribers\"](undefined, \"asleep\");\r\n            }\r\n        },\r\n        getVersion: function () {\r\n            // Because a pure computed is not automatically updated while it is sleeping, we can't\r\n            // simply return the version number. Instead, we check if any of the dependencies have\r\n            // changed and conditionally re-evaluate the computed observable.\r\n            var state = this[computedState];\r\n            if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\r\n                this.evaluateImmediate();\r\n            }\r\n            return ko.subscribable['fn'].getVersion.call(this);\r\n        }\r\n    };\r\n\r\n    var deferEvaluationOverrides = {\r\n        beforeSubscriptionAdd: function (event) {\r\n            // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\r\n            if (event == 'change' || event == 'beforeChange') {\r\n                this.peek();\r\n            }\r\n        }\r\n    };\r\n\r\n    // Note that for browsers that don't support proto assignment, the\r\n    // inheritance chain is created manually in the ko.computed constructor\r\n    if (ko.utils.canSetPrototype) {\r\n        ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\r\n    }\r\n\r\n    // Set the proto values for ko.computed\r\n    var protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\r\n    computedFn[protoProp] = ko.computed;\r\n\r\n    ko.isComputed = function (instance) {\r\n        return (typeof instance == 'function' && instance[protoProp] === computedFn[protoProp]);\r\n    };\r\n\r\n    ko.isPureComputed = function (instance) {\r\n        return ko.isComputed(instance) && instance[computedState] && instance[computedState].pure;\r\n    };\r\n\r\n    ko.exportSymbol('computed', ko.computed);\r\n    ko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\r\n    ko.exportSymbol('isComputed', ko.isComputed);\r\n    ko.exportSymbol('isPureComputed', ko.isPureComputed);\r\n    ko.exportSymbol('computed.fn', computedFn);\r\n    ko.exportProperty(computedFn, 'peek', computedFn.peek);\r\n    ko.exportProperty(computedFn, 'dispose', computedFn.dispose);\r\n    ko.exportProperty(computedFn, 'isActive', computedFn.isActive);\r\n    ko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\r\n    ko.exportProperty(computedFn, 'getDependencies', computedFn.getDependencies);\r\n\r\n    ko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\r\n        if (typeof evaluatorFunctionOrOptions === 'function') {\r\n            return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\r\n        } else {\r\n            evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\r\n            evaluatorFunctionOrOptions['pure'] = true;\r\n            return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\r\n        }\r\n    }\r\n    ko.exportSymbol('pureComputed', ko.pureComputed);\r\n\r\n    (function() {\r\n        var maxNestedObservableDepth = 10; // Escape the (unlikely) pathological case where an observable's current value is itself (or similar reference cycle)\r\n\r\n        ko.toJS = function(rootObject) {\r\n            if (arguments.length == 0)\r\n                throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\r\n\r\n            // We just unwrap everything at every level in the object graph\r\n            return mapJsObjectGraph(rootObject, function(valueToMap) {\r\n                // Loop because an observable's value might in turn be another observable wrapper\r\n                for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\r\n                    valueToMap = valueToMap();\r\n                return valueToMap;\r\n            });\r\n        };\r\n\r\n        ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\r\n            var plainJavaScriptObject = ko.toJS(rootObject);\r\n            return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\r\n        };\r\n\r\n        function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\r\n            visitedObjects = visitedObjects || new objectLookup();\r\n\r\n            rootObject = mapInputCallback(rootObject);\r\n            var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\r\n            if (!canHaveProperties)\r\n                return rootObject;\r\n\r\n            var outputProperties = rootObject instanceof Array ? [] : {};\r\n            visitedObjects.save(rootObject, outputProperties);\r\n\r\n            visitPropertiesOrArrayEntries(rootObject, function(indexer) {\r\n                var propertyValue = mapInputCallback(rootObject[indexer]);\r\n\r\n                switch (typeof propertyValue) {\r\n                    case \"boolean\":\r\n                    case \"number\":\r\n                    case \"string\":\r\n                    case \"function\":\r\n                        outputProperties[indexer] = propertyValue;\r\n                        break;\r\n                    case \"object\":\r\n                    case \"undefined\":\r\n                        var previouslyMappedValue = visitedObjects.get(propertyValue);\r\n                        outputProperties[indexer] = (previouslyMappedValue !== undefined)\r\n                            ? previouslyMappedValue\r\n                            : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\r\n                        break;\r\n                }\r\n            });\r\n\r\n            return outputProperties;\r\n        }\r\n\r\n        function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\r\n            if (rootObject instanceof Array) {\r\n                for (var i = 0; i < rootObject.length; i++)\r\n                    visitorCallback(i);\r\n\r\n                // For arrays, also respect toJSON property for custom mappings (fixes #278)\r\n                if (typeof rootObject['toJSON'] == 'function')\r\n                    visitorCallback('toJSON');\r\n            } else {\r\n                for (var propertyName in rootObject) {\r\n                    visitorCallback(propertyName);\r\n                }\r\n            }\r\n        };\r\n\r\n        function objectLookup() {\r\n            this.keys = [];\r\n            this.values = [];\r\n        };\r\n\r\n        objectLookup.prototype = {\r\n            constructor: objectLookup,\r\n            save: function(key, value) {\r\n                var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n                if (existingIndex >= 0)\r\n                    this.values[existingIndex] = value;\r\n                else {\r\n                    this.keys.push(key);\r\n                    this.values.push(value);\r\n                }\r\n            },\r\n            get: function(key) {\r\n                var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\r\n                return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\r\n            }\r\n        };\r\n    })();\r\n\r\n    ko.exportSymbol('toJS', ko.toJS);\r\n    ko.exportSymbol('toJSON', ko.toJSON);\r\n    ko.when = function(predicate, callback, context) {\r\n        function kowhen (resolve) {\r\n            var observable = ko.pureComputed(predicate, context).extend({notify:'always'});\r\n            var subscription = observable.subscribe(function(value) {\r\n                if (value) {\r\n                    subscription.dispose();\r\n                    resolve(value);\r\n                }\r\n            });\r\n            // In case the initial value is true, process it right away\r\n            observable['notifySubscribers'](observable.peek());\r\n\r\n            return subscription;\r\n        }\r\n        if (typeof Promise === \"function\" && !callback) {\r\n            return new Promise(kowhen);\r\n        } else {\r\n            return kowhen(callback.bind(context));\r\n        }\r\n    };\r\n\r\n    ko.exportSymbol('when', ko.when);\r\n    (function () {\r\n        var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\r\n\r\n        // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\r\n        // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\r\n        // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\r\n        ko.selectExtensions = {\r\n            readValue : function(element) {\r\n                switch (ko.utils.tagNameLower(element)) {\r\n                    case 'option':\r\n                        if (element[hasDomDataExpandoProperty] === true)\r\n                            return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\r\n                        return ko.utils.ieVersion <= 7\r\n                            ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\r\n                            : element.value;\r\n                    case 'select':\r\n                        return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\r\n                    default:\r\n                        return element.value;\r\n                }\r\n            },\r\n\r\n            writeValue: function(element, value, allowUnset) {\r\n                switch (ko.utils.tagNameLower(element)) {\r\n                    case 'option':\r\n                        if (typeof value === \"string\") {\r\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\r\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\r\n                                delete element[hasDomDataExpandoProperty];\r\n                            }\r\n                            element.value = value;\r\n                        }\r\n                        else {\r\n                            // Store arbitrary object using DomData\r\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\r\n                            element[hasDomDataExpandoProperty] = true;\r\n\r\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\r\n                            element.value = typeof value === \"number\" ? value : \"\";\r\n                        }\r\n                        break;\r\n                    case 'select':\r\n                        if (value === \"\" || value === null)       // A blank string or null value will select the caption\r\n                            value = undefined;\r\n                        var selection = -1;\r\n                        for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\r\n                            optionValue = ko.selectExtensions.readValue(element.options[i]);\r\n                            // Include special check to handle selecting a caption with a blank string value\r\n                            if (optionValue == value || (optionValue === \"\" && value === undefined)) {\r\n                                selection = i;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\r\n                            element.selectedIndex = selection;\r\n                            if (ko.utils.ieVersion === 6) {\r\n                                // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\r\n                                // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\r\n                                // to apply the value as well.\r\n                                ko.utils.setTimeout(function () {\r\n                                    element.selectedIndex = selection;\r\n                                }, 0);\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if ((value === null) || (value === undefined))\r\n                            value = \"\";\r\n                        element.value = value;\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    ko.exportSymbol('selectExtensions', ko.selectExtensions);\r\n    ko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\r\n    ko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\r\n    ko.expressionRewriting = (function () {\r\n        var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\r\n\r\n        // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\r\n        // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\r\n        // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\r\n        var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\r\n\r\n        function getWriteableValue(expression) {\r\n            if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\r\n                return false;\r\n            var match = expression.match(javaScriptAssignmentTarget);\r\n            return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\r\n        }\r\n\r\n        // The following regular expressions will be used to split an object-literal string into tokens\r\n\r\n        var specials = ',\"\\'`{}()/:[\\\\]',    // These characters have special meaning to the parser and must not appear in the middle of a token, except as part of a string.\r\n            // Create the actual regular expression by or-ing the following regex strings. The order is important.\r\n            bindingToken = RegExp([\r\n                // These match strings, either with double quotes, single quotes, or backticks\r\n                '\"(?:\\\\\\\\.|[^\"])*\"',\r\n                \"'(?:\\\\\\\\.|[^'])*'\",\r\n                \"`(?:\\\\\\\\.|[^`])*`\",\r\n                // Match C style comments\r\n                \"/\\\\*(?:[^*]|\\\\*+[^*/])*\\\\*+/\",\r\n                // Match C++ style comments\r\n                \"//.*\\n\",\r\n                // Match a regular expression (text enclosed by slashes), but will also match sets of divisions\r\n                // as a regular expression (this is handled by the parsing loop below).\r\n                '/(?:\\\\\\\\.|[^/])+/\\w*',\r\n                // Match text (at least two characters) that does not contain any of the above special characters,\r\n                // although some of the special characters are allowed to start it (all but the colon and comma).\r\n                // The text can contain spaces, but leading or trailing spaces are skipped.\r\n                '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\r\n                // Match any non-space character not matched already. This will match colons and commas, since they're\r\n                // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\r\n                // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\r\n                '[^\\\\s]'\r\n            ].join('|'), 'g'),\r\n\r\n            // Match end of previous token to determine whether a slash is a division or regex.\r\n            divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\r\n            keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\r\n\r\n        function parseObjectLiteral(objectLiteralString) {\r\n            // Trim leading and trailing spaces from the string\r\n            var str = ko.utils.stringTrim(objectLiteralString);\r\n\r\n            // Trim braces '{' surrounding the whole object literal\r\n            if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\r\n\r\n            // Add a newline to correctly match a C++ style comment at the end of the string and\r\n            // add a comma so that we don't need a separate code block to deal with the last item\r\n            str += \"\\n,\";\r\n\r\n            // Split into tokens\r\n            var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\r\n\r\n            if (toks.length > 1) {\r\n                for (var i = 0, tok; tok = toks[i]; ++i) {\r\n                    var c = tok.charCodeAt(0);\r\n                    // A comma signals the end of a key/value pair if depth is zero\r\n                    if (c === 44) { // \",\"\r\n                        if (depth <= 0) {\r\n                            result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\r\n                            key = depth = 0;\r\n                            values = [];\r\n                            continue;\r\n                        }\r\n                    // Simply skip the colon that separates the name and value\r\n                    } else if (c === 58) { // \":\"\r\n                        if (!depth && !key && values.length === 1) {\r\n                            key = values.pop();\r\n                            continue;\r\n                        }\r\n                    // Comments: skip them\r\n                    } else if (c === 47 && tok.length > 1 && (tok.charCodeAt(1) === 47 || tok.charCodeAt(1) === 42)) {  // \"//\" or \"/*\"\r\n                        continue;\r\n                    // A set of slashes is initially matched as a regular expression, but could be division\r\n                    } else if (c === 47 && i && tok.length > 1) {  // \"/\"\r\n                        // Look at the end of the previous token to determine if the slash is actually division\r\n                        var match = toks[i-1].match(divisionLookBehind);\r\n                        if (match && !keywordRegexLookBehind[match[0]]) {\r\n                            // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\r\n                            str = str.substr(str.indexOf(tok) + 1);\r\n                            toks = str.match(bindingToken);\r\n                            i = -1;\r\n                            // Continue with just the slash\r\n                            tok = '/';\r\n                        }\r\n                    // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\r\n                    } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\r\n                        ++depth;\r\n                    } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\r\n                        --depth;\r\n                    // The key will be the first token; if it's a string, trim the quotes\r\n                    } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\r\n                        tok = tok.slice(1, -1);\r\n                    }\r\n                    values.push(tok);\r\n                }\r\n                if (depth > 0) {\r\n                    throw Error(\"Unbalanced parentheses, braces, or brackets\");\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\r\n        var twoWayBindings = {};\r\n\r\n        function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\r\n            bindingOptions = bindingOptions || {};\r\n\r\n            function processKeyValue(key, val) {\r\n                var writableVal;\r\n                function callPreprocessHook(obj) {\r\n                    return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\r\n                }\r\n                if (!bindingParams) {\r\n                    if (!callPreprocessHook(ko['getBindingHandler'](key)))\r\n                        return;\r\n\r\n                    if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\r\n                        // For two-way bindings, provide a write method in case the value\r\n                        // isn't a writable observable.\r\n                        var writeKey = typeof twoWayBindings[key] == 'string' ? twoWayBindings[key] : key;\r\n                        propertyAccessorResultStrings.push(\"'\" + writeKey + \"':function(_z){\" + writableVal + \"=_z}\");\r\n                    }\r\n                }\r\n                // Values are wrapped in a function so that each value can be accessed independently\r\n                if (makeValueAccessors) {\r\n                    val = 'function(){return ' + val + ' }';\r\n                }\r\n                resultStrings.push(\"'\" + key + \"':\" + val);\r\n            }\r\n\r\n            var resultStrings = [],\r\n                propertyAccessorResultStrings = [],\r\n                makeValueAccessors = bindingOptions['valueAccessors'],\r\n                bindingParams = bindingOptions['bindingParams'],\r\n                keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\r\n                    parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\r\n\r\n            ko.utils.arrayForEach(keyValueArray, function(keyValue) {\r\n                processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\r\n            });\r\n\r\n            if (propertyAccessorResultStrings.length)\r\n                processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\r\n\r\n            return resultStrings.join(\",\");\r\n        }\r\n\r\n        return {\r\n            bindingRewriteValidators: [],\r\n\r\n            twoWayBindings: twoWayBindings,\r\n\r\n            parseObjectLiteral: parseObjectLiteral,\r\n\r\n            preProcessBindings: preProcessBindings,\r\n\r\n            keyValueArrayContainsKey: function(keyValueArray, key) {\r\n                for (var i = 0; i < keyValueArray.length; i++)\r\n                    if (keyValueArray[i]['key'] == key)\r\n                        return true;\r\n                return false;\r\n            },\r\n\r\n            // Internal, private KO utility for updating model properties from within bindings\r\n            // property:            If the property being updated is (or might be) an observable, pass it here\r\n            //                      If it turns out to be a writable observable, it will be written to directly\r\n            // allBindings:         An object with a get method to retrieve bindings in the current execution context.\r\n            //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\r\n            // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\r\n            // value:               The value to be written\r\n            // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\r\n            //                      it is !== existing value on that writable observable\r\n            writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\r\n                if (!property || !ko.isObservable(property)) {\r\n                    var propWriters = allBindings.get('_ko_property_writers');\r\n                    if (propWriters && propWriters[key])\r\n                        propWriters[key](value);\r\n                } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\r\n                    property(value);\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    ko.exportSymbol('expressionRewriting', ko.expressionRewriting);\r\n    ko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\r\n    ko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\r\n    ko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\r\n\r\n    // Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\r\n    // all bindings could use an official 'property writer' API without needing to declare that they might). However,\r\n    // since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\r\n    // as an internal implementation detail in the short term.\r\n    // For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\r\n    // undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\r\n    // public API, and we reserve the right to remove it at any time if we create a real public property writers API.\r\n    ko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\r\n\r\n    // For backward compatibility, define the following aliases. (Previously, these function names were misleading because\r\n    // they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\r\n    ko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\r\n    ko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\r\n    (function() {\r\n        // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\r\n        // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\r\n        // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\r\n        // of that virtual hierarchy\r\n        //\r\n        // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\r\n        // without having to scatter special cases all over the binding and templating code.\r\n\r\n        // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\r\n        // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\r\n        // So, use node.text where available, and node.nodeValue elsewhere\r\n        var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\r\n\r\n        var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\r\n        var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\r\n        var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\r\n\r\n        function isStartComment(node) {\r\n            return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n        }\r\n\r\n        function isEndComment(node) {\r\n            return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\r\n        }\r\n\r\n        function isUnmatchedEndComment(node) {\r\n            return isEndComment(node) && !(ko.utils.domData.get(node, matchedEndCommentDataKey));\r\n        }\r\n\r\n        var matchedEndCommentDataKey = \"__ko_matchedEndComment__\"\r\n\r\n        function getVirtualChildren(startComment, allowUnbalanced) {\r\n            var currentNode = startComment;\r\n            var depth = 1;\r\n            var children = [];\r\n            while (currentNode = currentNode.nextSibling) {\r\n                if (isEndComment(currentNode)) {\r\n                    ko.utils.domData.set(currentNode, matchedEndCommentDataKey, true);\r\n                    depth--;\r\n                    if (depth === 0)\r\n                        return children;\r\n                }\r\n\r\n                children.push(currentNode);\r\n\r\n                if (isStartComment(currentNode))\r\n                    depth++;\r\n            }\r\n            if (!allowUnbalanced)\r\n                throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\r\n            return null;\r\n        }\r\n\r\n        function getMatchingEndComment(startComment, allowUnbalanced) {\r\n            var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\r\n            if (allVirtualChildren) {\r\n                if (allVirtualChildren.length > 0)\r\n                    return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\r\n                return startComment.nextSibling;\r\n            } else\r\n                return null; // Must have no matching end comment, and allowUnbalanced is true\r\n        }\r\n\r\n        function getUnbalancedChildTags(node) {\r\n            // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\r\n            //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\r\n            var childNode = node.firstChild, captureRemaining = null;\r\n            if (childNode) {\r\n                do {\r\n                    if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\r\n                        captureRemaining.push(childNode);\r\n                    else if (isStartComment(childNode)) {\r\n                        var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\r\n                        if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\r\n                            childNode = matchingEndComment;\r\n                        else\r\n                            captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\r\n                    } else if (isEndComment(childNode)) {\r\n                        captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\r\n                    }\r\n                } while (childNode = childNode.nextSibling);\r\n            }\r\n            return captureRemaining;\r\n        }\r\n\r\n        ko.virtualElements = {\r\n            allowedBindings: {},\r\n\r\n            childNodes: function(node) {\r\n                return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\r\n            },\r\n\r\n            emptyNode: function(node) {\r\n                if (!isStartComment(node))\r\n                    ko.utils.emptyDomNode(node);\r\n                else {\r\n                    var virtualChildren = ko.virtualElements.childNodes(node);\r\n                    for (var i = 0, j = virtualChildren.length; i < j; i++)\r\n                        ko.removeNode(virtualChildren[i]);\r\n                }\r\n            },\r\n\r\n            setDomNodeChildren: function(node, childNodes) {\r\n                if (!isStartComment(node))\r\n                    ko.utils.setDomNodeChildren(node, childNodes);\r\n                else {\r\n                    ko.virtualElements.emptyNode(node);\r\n                    var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\r\n                    for (var i = 0, j = childNodes.length; i < j; i++)\r\n                        endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\r\n                }\r\n            },\r\n\r\n            prepend: function(containerNode, nodeToPrepend) {\r\n                if (!isStartComment(containerNode)) {\r\n                    if (containerNode.firstChild)\r\n                        containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\r\n                    else\r\n                        containerNode.appendChild(nodeToPrepend);\r\n                } else {\r\n                    // Start comments must always have a parent and at least one following sibling (the end comment)\r\n                    containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\r\n                }\r\n            },\r\n\r\n            insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\r\n                if (!insertAfterNode) {\r\n                    ko.virtualElements.prepend(containerNode, nodeToInsert);\r\n                } else if (!isStartComment(containerNode)) {\r\n                    // Insert after insertion point\r\n                    if (insertAfterNode.nextSibling)\r\n                        containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\r\n                    else\r\n                        containerNode.appendChild(nodeToInsert);\r\n                } else {\r\n                    // Children of start comments must always have a parent and at least one following sibling (the end comment)\r\n                    containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\r\n                }\r\n            },\r\n\r\n            firstChild: function(node) {\r\n                if (!isStartComment(node)) {\r\n                    if (node.firstChild && isEndComment(node.firstChild)) {\r\n                        throw new Error(\"Found invalid end comment, as the first child of \" + node);\r\n                    }\r\n                    return node.firstChild;\r\n                } else if (!node.nextSibling || isEndComment(node.nextSibling)) {\r\n                    return null;\r\n                } else {\r\n                    return node.nextSibling;\r\n                }\r\n            },\r\n\r\n            nextSibling: function(node) {\r\n                if (isStartComment(node)) {\r\n                    node = getMatchingEndComment(node);\r\n                }\r\n\r\n                if (node.nextSibling && isEndComment(node.nextSibling)) {\r\n                    if (isUnmatchedEndComment(node.nextSibling)) {\r\n                        throw Error(\"Found end comment without a matching opening comment, as child of \" + node);\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                } else {\r\n                    return node.nextSibling;\r\n                }\r\n            },\r\n\r\n            hasBindingValue: isStartComment,\r\n\r\n            virtualNodeBindingValue: function(node) {\r\n                var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\r\n                return regexMatch ? regexMatch[1] : null;\r\n            },\r\n\r\n            normaliseVirtualElementDomStructure: function(elementVerified) {\r\n                // Workaround for https://github.com/SteveSanderson/knockout/issues/155\r\n                // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\r\n                // that are direct descendants of <ul> into the preceding <li>)\r\n                if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\r\n                    return;\r\n\r\n                // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\r\n                // must be intended to appear *after* that child, so move them there.\r\n                var childNode = elementVerified.firstChild;\r\n                if (childNode) {\r\n                    do {\r\n                        if (childNode.nodeType === 1) {\r\n                            var unbalancedTags = getUnbalancedChildTags(childNode);\r\n                            if (unbalancedTags) {\r\n                                // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\r\n                                var nodeToInsertBefore = childNode.nextSibling;\r\n                                for (var i = 0; i < unbalancedTags.length; i++) {\r\n                                    if (nodeToInsertBefore)\r\n                                        elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\r\n                                    else\r\n                                        elementVerified.appendChild(unbalancedTags[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (childNode = childNode.nextSibling);\r\n                }\r\n            }\r\n        };\r\n    })();\r\n    ko.exportSymbol('virtualElements', ko.virtualElements);\r\n    ko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\r\n    ko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\r\n    //ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\r\n    ko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\r\n    //ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\r\n    ko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\r\n    ko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\r\n    (function() {\r\n        var defaultBindingAttributeName = \"data-bind\";\r\n\r\n        ko.bindingProvider = function() {\r\n            this.bindingCache = {};\r\n        };\r\n\r\n        ko.utils.extend(ko.bindingProvider.prototype, {\r\n            'nodeHasBindings': function(node) {\r\n                switch (node.nodeType) {\r\n                    case 1: // Element\r\n                        return node.getAttribute(defaultBindingAttributeName) != null\r\n                            || ko.components['getComponentNameForNode'](node);\r\n                    case 8: // Comment node\r\n                        return ko.virtualElements.hasBindingValue(node);\r\n                    default: return false;\r\n                }\r\n            },\r\n\r\n            'getBindings': function(node, bindingContext) {\r\n                var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                    parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\r\n                return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\r\n            },\r\n\r\n            'getBindingAccessors': function(node, bindingContext) {\r\n                var bindingsString = this['getBindingsString'](node, bindingContext),\r\n                    parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\r\n                return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\r\n            },\r\n\r\n            // The following function is only used internally by this default provider.\r\n            // It's not part of the interface definition for a general binding provider.\r\n            'getBindingsString': function(node, bindingContext) {\r\n                switch (node.nodeType) {\r\n                    case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\r\n                    case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\r\n                    default: return null;\r\n                }\r\n            },\r\n\r\n            // The following function is only used internally by this default provider.\r\n            // It's not part of the interface definition for a general binding provider.\r\n            'parseBindingsString': function(bindingsString, bindingContext, node, options) {\r\n                try {\r\n                    var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\r\n                    return bindingFunction(bindingContext, node);\r\n                } catch (ex) {\r\n                    ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\r\n                    throw ex;\r\n                }\r\n            }\r\n        });\r\n\r\n        ko.bindingProvider['instance'] = new ko.bindingProvider();\r\n\r\n        function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\r\n            var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\r\n            return cache[cacheKey]\r\n                || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\r\n        }\r\n\r\n        function createBindingsStringEvaluator(bindingsString, options) {\r\n            // Build the source for a function that evaluates \"expression\"\r\n            // For each scope variable, add an extra level of \"with\" nesting\r\n            // Example result: with(sc1) { with(sc0) { return (expression) } }\r\n            var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\r\n                functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\r\n            return new Function(\"$context\", \"$element\", functionBody);\r\n        }\r\n    })();\r\n\r\n    ko.exportSymbol('bindingProvider', ko.bindingProvider);\r\n    (function () {\r\n        // Hide or don't minify context properties, see https://github.com/knockout/knockout/issues/2294\r\n        var contextSubscribable = ko.utils.createSymbolOrString('_subscribable');\r\n        var contextAncestorBindingInfo = ko.utils.createSymbolOrString('_ancestorBindingInfo');\r\n\r\n        ko.bindingHandlers = {};\r\n\r\n        // The following element types will not be recursed into during binding.\r\n        var bindingDoesNotRecurseIntoElementTypes = {\r\n            // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\r\n            // because it's unexpected and a potential XSS issue.\r\n            // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\r\n            // and because such elements' contents are always intended to be bound in a different context\r\n            // from where they appear in the document.\r\n            'script': true,\r\n            'textarea': true,\r\n            'template': true\r\n        };\r\n\r\n        // Use an overridable method for retrieving binding handlers so that plugins may support dynamically created handlers\r\n        ko['getBindingHandler'] = function(bindingKey) {\r\n            return ko.bindingHandlers[bindingKey];\r\n        };\r\n\r\n        var inheritParentVm = {};\r\n\r\n        // The ko.bindingContext constructor is only called directly to create the root context. For child\r\n        // contexts, use bindingContext.createChildContext or bindingContext.extend.\r\n        ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\r\n\r\n            // The binding context object includes static properties for the current, parent, and root view models.\r\n            // If a view model is actually stored in an observable, the corresponding binding context object, and\r\n            // any child contexts, must be updated when the view model is changed.\r\n            function updateContext() {\r\n                // Most of the time, the context will directly get a view model object, but if a function is given,\r\n                // we call the function to retrieve the view model. If the function accesses any observables or returns\r\n                // an observable, the dependency is tracked, and those observables can later cause the binding\r\n                // context to be updated.\r\n                var dataItemOrObservable = isFunc ? realDataItemOrAccessor() : realDataItemOrAccessor,\r\n                    dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\r\n\r\n                if (parentContext) {\r\n                    // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\r\n                    // parent context is updated, this context will also be updated.\r\n                    if (parentContext[contextSubscribable])\r\n                        parentContext[contextSubscribable]();\r\n\r\n                    // Copy $root and any custom properties from the parent context\r\n                    ko.utils.extend(self, parentContext);\r\n\r\n                    // Copy Symbol properties\r\n                    if (contextAncestorBindingInfo in parentContext) {\r\n                        self[contextAncestorBindingInfo] = parentContext[contextAncestorBindingInfo];\r\n                    }\r\n                } else {\r\n                    self['$parents'] = [];\r\n                    self['$root'] = dataItem;\r\n\r\n                    // Export 'ko' in the binding context so it will be available in bindings and templates\r\n                    // even if 'ko' isn't exported as a global, such as when using an AMD loader.\r\n                    // See https://github.com/SteveSanderson/knockout/issues/490\r\n                    self['ko'] = ko;\r\n                }\r\n\r\n                self[contextSubscribable] = subscribable;\r\n\r\n                if (shouldInheritData) {\r\n                    dataItem = self['$data'];\r\n                } else {\r\n                    self['$rawData'] = dataItemOrObservable;\r\n                    self['$data'] = dataItem;\r\n                }\r\n\r\n                if (dataItemAlias)\r\n                    self[dataItemAlias] = dataItem;\r\n\r\n                // The extendCallback function is provided when creating a child context or extending a context.\r\n                // It handles the specific actions needed to finish setting up the binding context. Actions in this\r\n                // function could also add dependencies to this binding context.\r\n                if (extendCallback)\r\n                    extendCallback(self, parentContext, dataItem);\r\n\r\n                return self['$data'];\r\n            }\r\n\r\n            var self = this,\r\n                shouldInheritData = dataItemOrAccessor === inheritParentVm,\r\n                realDataItemOrAccessor = shouldInheritData ? undefined : dataItemOrAccessor,\r\n                isFunc = typeof(realDataItemOrAccessor) == \"function\" && !ko.isObservable(realDataItemOrAccessor),\r\n                nodes,\r\n                subscribable;\r\n\r\n            if (options && options['exportDependencies']) {\r\n                // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\r\n                // the binding context when they change.\r\n                updateContext();\r\n            } else {\r\n                subscribable = ko.pureComputed(updateContext);\r\n                subscribable.peek();\r\n\r\n                // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\r\n                // subscribed to any observables that were accessed in the process. If there is nothing to track, the\r\n                // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\r\n                // the context object.\r\n                if (subscribable.isActive()) {\r\n                    // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\r\n                    subscribable['equalityComparer'] = null;\r\n                } else {\r\n                    self[contextSubscribable] = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Extend the binding context hierarchy with a new view model object. If the parent context is watching\r\n        // any observables, the new child context will automatically get a dependency on the parent context.\r\n        // But this does not mean that the $data value of the child context will also get updated. If the child\r\n        // view model also depends on the parent view model, you must provide a function that returns the correct\r\n        // view model on each update.\r\n        ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\r\n            if (!options && dataItemAlias && typeof dataItemAlias == \"object\") {\r\n                options = dataItemAlias;\r\n                dataItemAlias = options['as'];\r\n                extendCallback = options['extend'];\r\n            }\r\n\r\n            if (dataItemAlias && options && options['noChildContext']) {\r\n                var isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor);\r\n                return new ko.bindingContext(inheritParentVm, this, null, function (self) {\r\n                    if (extendCallback)\r\n                        extendCallback(self);\r\n                    self[dataItemAlias] = isFunc ? dataItemOrAccessor() : dataItemOrAccessor;\r\n                }, options);\r\n            }\r\n\r\n            return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function (self, parentContext) {\r\n                // Extend the context hierarchy by setting the appropriate pointers\r\n                self['$parentContext'] = parentContext;\r\n                self['$parent'] = parentContext['$data'];\r\n                self['$parents'] = (parentContext['$parents'] || []).slice(0);\r\n                self['$parents'].unshift(self['$parent']);\r\n                if (extendCallback)\r\n                    extendCallback(self);\r\n            }, options);\r\n        };\r\n\r\n        // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\r\n        // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\r\n        // when an observable view model is updated.\r\n        ko.bindingContext.prototype['extend'] = function(properties) {\r\n            // If the parent context references an observable view model, \"contextSubscribable\" will always be the\r\n            // latest view model object. If not, \"contextSubscribable\" isn't set, and we can use the static \"$data\" value.\r\n            return new ko.bindingContext(inheritParentVm, this, null, function(self, parentContext) {\r\n                ko.utils.extend(self, typeof(properties) == \"function\" ? properties(self) : properties);\r\n            });\r\n        };\r\n\r\n        var boundElementDomDataKey = ko.utils.domData.nextKey();\r\n\r\n        function asyncContextDispose(node) {\r\n            var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey),\r\n                asyncContext = bindingInfo && bindingInfo.asyncContext;\r\n            if (asyncContext) {\r\n                bindingInfo.asyncContext = null;\r\n                asyncContext.notifyAncestor();\r\n            }\r\n        }\r\n        function AsyncCompleteContext(node, bindingInfo, ancestorBindingInfo) {\r\n            this.node = node;\r\n            this.bindingInfo = bindingInfo;\r\n            this.asyncDescendants = [];\r\n            this.childrenComplete = false;\r\n\r\n            if (!bindingInfo.asyncContext) {\r\n                ko.utils.domNodeDisposal.addDisposeCallback(node, asyncContextDispose);\r\n            }\r\n\r\n            if (ancestorBindingInfo && ancestorBindingInfo.asyncContext) {\r\n                ancestorBindingInfo.asyncContext.asyncDescendants.push(node);\r\n                this.ancestorBindingInfo = ancestorBindingInfo;\r\n            }\r\n        }\r\n        AsyncCompleteContext.prototype.notifyAncestor = function () {\r\n            if (this.ancestorBindingInfo && this.ancestorBindingInfo.asyncContext) {\r\n                this.ancestorBindingInfo.asyncContext.descendantComplete(this.node);\r\n            }\r\n        };\r\n        AsyncCompleteContext.prototype.descendantComplete = function (node) {\r\n            ko.utils.arrayRemoveItem(this.asyncDescendants, node);\r\n            if (!this.asyncDescendants.length && this.childrenComplete) {\r\n                this.completeChildren();\r\n            }\r\n        };\r\n        AsyncCompleteContext.prototype.completeChildren = function () {\r\n            this.childrenComplete = true;\r\n            if (this.bindingInfo.asyncContext && !this.asyncDescendants.length) {\r\n                this.bindingInfo.asyncContext = null;\r\n                ko.utils.domNodeDisposal.removeDisposeCallback(this.node, asyncContextDispose);\r\n                ko.bindingEvent.notify(this.node, ko.bindingEvent.descendantsComplete);\r\n                this.notifyAncestor();\r\n            }\r\n        };\r\n\r\n        ko.bindingEvent = {\r\n            childrenComplete: \"childrenComplete\",\r\n            descendantsComplete : \"descendantsComplete\",\r\n\r\n            subscribe: function (node, event, callback, context) {\r\n                var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\r\n                if (!bindingInfo.eventSubscribable) {\r\n                    bindingInfo.eventSubscribable = new ko.subscribable;\r\n                }\r\n                return bindingInfo.eventSubscribable.subscribe(callback, context, event);\r\n            },\r\n\r\n            notify: function (node, event) {\r\n                var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey);\r\n                if (bindingInfo) {\r\n                    if (bindingInfo.eventSubscribable) {\r\n                        bindingInfo.eventSubscribable['notifySubscribers'](node, event);\r\n                    }\r\n                    if (event == ko.bindingEvent.childrenComplete) {\r\n                        if (bindingInfo.asyncContext) {\r\n                            bindingInfo.asyncContext.completeChildren();\r\n                        } else if (bindingInfo.asyncContext === undefined && bindingInfo.eventSubscribable && bindingInfo.eventSubscribable.hasSubscriptionsForEvent(ko.bindingEvent.descendantsComplete)) {\r\n                            // It's currently an error to register a descendantsComplete handler for a node that was never registered as completing asynchronously.\r\n                            // That's because without the asyncContext, we don't have a way to know that all descendants have completed.\r\n                            throw new Error(\"descendantsComplete event not supported for bindings on this node\");\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            startPossiblyAsyncContentBinding: function (node, bindingContext) {\r\n                var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\r\n\r\n                if (!bindingInfo.asyncContext) {\r\n                    bindingInfo.asyncContext = new AsyncCompleteContext(node, bindingInfo, bindingContext[contextAncestorBindingInfo]);\r\n                }\r\n\r\n                // If the provided context was already extended with this node's binding info, just return the extended context\r\n                if (bindingContext[contextAncestorBindingInfo] == bindingInfo) {\r\n                    return bindingContext;\r\n                }\r\n\r\n                return bindingContext['extend'](function (ctx) {\r\n                    ctx[contextAncestorBindingInfo] = bindingInfo;\r\n                });\r\n            }\r\n        };\r\n\r\n        // Returns the valueAccessor function for a binding value\r\n        function makeValueAccessor(value) {\r\n            return function() {\r\n                return value;\r\n            };\r\n        }\r\n\r\n        // Returns the value of a valueAccessor function\r\n        function evaluateValueAccessor(valueAccessor) {\r\n            return valueAccessor();\r\n        }\r\n\r\n        // Given a function that returns bindings, create and return a new object that contains\r\n        // binding value-accessors functions. Each accessor function calls the original function\r\n        // so that it always gets the latest value and all dependencies are captured. This is used\r\n        // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\r\n        function makeAccessorsFromFunction(callback) {\r\n            return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\r\n                return function() {\r\n                    return callback()[key];\r\n                };\r\n            });\r\n        }\r\n\r\n        // Given a bindings function or object, create and return a new object that contains\r\n        // binding value-accessors functions. This is used by ko.applyBindingsToNode.\r\n        function makeBindingAccessors(bindings, context, node) {\r\n            if (typeof bindings === 'function') {\r\n                return makeAccessorsFromFunction(bindings.bind(null, context, node));\r\n            } else {\r\n                return ko.utils.objectMap(bindings, makeValueAccessor);\r\n            }\r\n        }\r\n\r\n        // This function is used if the binding provider doesn't include a getBindingAccessors function.\r\n        // It must be called with 'this' set to the provider instance.\r\n        function getBindingsAndMakeAccessors(node, context) {\r\n            return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\r\n        }\r\n\r\n        function validateThatBindingIsAllowedForVirtualElements(bindingName) {\r\n            var validator = ko.virtualElements.allowedBindings[bindingName];\r\n            if (!validator)\r\n                throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\r\n        }\r\n\r\n        function applyBindingsToDescendantsInternal(bindingContext, elementOrVirtualElement) {\r\n            var nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\r\n\r\n            if (nextInQueue) {\r\n                var currentChild,\r\n                    provider = ko.bindingProvider['instance'],\r\n                    preprocessNode = provider['preprocessNode'];\r\n\r\n                // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\r\n                // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\r\n                // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\r\n                // trigger insertion of <template> contents at that point in the document.\r\n                if (preprocessNode) {\r\n                    while (currentChild = nextInQueue) {\r\n                        nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n                        preprocessNode.call(provider, currentChild);\r\n                    }\r\n                    // Reset nextInQueue for the next loop\r\n                    nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\r\n                }\r\n\r\n                while (currentChild = nextInQueue) {\r\n                    // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\r\n                    nextInQueue = ko.virtualElements.nextSibling(currentChild);\r\n                    applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild);\r\n                }\r\n            }\r\n            ko.bindingEvent.notify(elementOrVirtualElement, ko.bindingEvent.childrenComplete);\r\n        }\r\n\r\n        function applyBindingsToNodeAndDescendantsInternal(bindingContext, nodeVerified) {\r\n            var bindingContextForDescendants = bindingContext;\r\n\r\n            var isElement = (nodeVerified.nodeType === 1);\r\n            if (isElement) // Workaround IE <= 8 HTML parsing weirdness\r\n                ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\r\n\r\n            // Perf optimisation: Apply bindings only if...\r\n            // (1) We need to store the binding info for the node (all element nodes)\r\n            // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\r\n            var shouldApplyBindings = isElement || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);\r\n            if (shouldApplyBindings)\r\n                bindingContextForDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext)['bindingContextForDescendants'];\r\n\r\n            if (bindingContextForDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\r\n                applyBindingsToDescendantsInternal(bindingContextForDescendants, nodeVerified);\r\n            }\r\n        }\r\n\r\n        function topologicalSortBindings(bindings) {\r\n            // Depth-first sort\r\n            var result = [],                // The list of key/handler pairs that we will return\r\n                bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\r\n                cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\r\n            ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\r\n                if (!bindingsConsidered[bindingKey]) {\r\n                    var binding = ko['getBindingHandler'](bindingKey);\r\n                    if (binding) {\r\n                        // First add dependencies (if any) of the current binding\r\n                        if (binding['after']) {\r\n                            cyclicDependencyStack.push(bindingKey);\r\n                            ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\r\n                                if (bindings[bindingDependencyKey]) {\r\n                                    if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\r\n                                        throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\r\n                                    } else {\r\n                                        pushBinding(bindingDependencyKey);\r\n                                    }\r\n                                }\r\n                            });\r\n                            cyclicDependencyStack.length--;\r\n                        }\r\n                        // Next add the current binding\r\n                        result.push({ key: bindingKey, handler: binding });\r\n                    }\r\n                    bindingsConsidered[bindingKey] = true;\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        function applyBindingsToNodeInternal(node, sourceBindings, bindingContext) {\r\n            var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\r\n\r\n            // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\r\n            var alreadyBound = bindingInfo.alreadyBound;\r\n            if (!sourceBindings) {\r\n                if (alreadyBound) {\r\n                    throw Error(\"You cannot apply bindings multiple times to the same element.\");\r\n                }\r\n                bindingInfo.alreadyBound = true;\r\n            }\r\n            if (!alreadyBound) {\r\n                bindingInfo.context = bindingContext;\r\n            }\r\n\r\n            // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\r\n            var bindings;\r\n            if (sourceBindings && typeof sourceBindings !== 'function') {\r\n                bindings = sourceBindings;\r\n            } else {\r\n                var provider = ko.bindingProvider['instance'],\r\n                    getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\r\n\r\n                // Get the binding from the provider within a computed observable so that we can update the bindings whenever\r\n                // the binding context is updated or if the binding provider accesses observables.\r\n                var bindingsUpdater = ko.dependentObservable(\r\n                    function() {\r\n                        bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\r\n                        // Register a dependency on the binding context to support observable view models.\r\n                        if (bindings && bindingContext[contextSubscribable])\r\n                            bindingContext[contextSubscribable]();\r\n                        return bindings;\r\n                    },\r\n                    null, { disposeWhenNodeIsRemoved: node }\r\n                );\r\n\r\n                if (!bindings || !bindingsUpdater.isActive())\r\n                    bindingsUpdater = null;\r\n            }\r\n\r\n            var contextToExtend = bindingContext;\r\n            var bindingHandlerThatControlsDescendantBindings;\r\n            if (bindings) {\r\n                // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\r\n                // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\r\n                // the latest binding value and registers a dependency on the binding updater.\r\n                var getValueAccessor = bindingsUpdater\r\n                    ? function(bindingKey) {\r\n                        return function() {\r\n                            return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\r\n                        };\r\n                    } : function(bindingKey) {\r\n                        return bindings[bindingKey];\r\n                    };\r\n\r\n                // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\r\n                function allBindings() {\r\n                    return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\r\n                }\r\n                // The following is the 3.x allBindings API\r\n                allBindings['get'] = function(key) {\r\n                    return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\r\n                };\r\n                allBindings['has'] = function(key) {\r\n                    return key in bindings;\r\n                };\r\n\r\n                if (ko.bindingEvent.childrenComplete in bindings) {\r\n                    ko.bindingEvent.subscribe(node, ko.bindingEvent.childrenComplete, function () {\r\n                        var callback = evaluateValueAccessor(bindings[ko.bindingEvent.childrenComplete]);\r\n                        if (callback) {\r\n                            var nodes = ko.virtualElements.childNodes(node);\r\n                            if (nodes.length) {\r\n                                callback(nodes, ko.dataFor(nodes[0]));\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (ko.bindingEvent.descendantsComplete in bindings) {\r\n                    contextToExtend = ko.bindingEvent.startPossiblyAsyncContentBinding(node, bindingContext);\r\n                    ko.bindingEvent.subscribe(node, ko.bindingEvent.descendantsComplete, function () {\r\n                        var callback = evaluateValueAccessor(bindings[ko.bindingEvent.descendantsComplete]);\r\n                        if (callback && ko.virtualElements.firstChild(node)) {\r\n                            callback(node);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // First put the bindings into the right order\r\n                var orderedBindings = topologicalSortBindings(bindings);\r\n\r\n                // Go through the sorted bindings, calling init and update for each\r\n                ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\r\n                    // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\r\n                    // so bindingKeyAndHandler.handler will always be nonnull.\r\n                    var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\r\n                        handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\r\n                        bindingKey = bindingKeyAndHandler.key;\r\n\r\n                    if (node.nodeType === 8) {\r\n                        validateThatBindingIsAllowedForVirtualElements(bindingKey);\r\n                    }\r\n\r\n                    try {\r\n                        // Run init, ignoring any dependencies\r\n                        if (typeof handlerInitFn == \"function\") {\r\n                            ko.dependencyDetection.ignore(function() {\r\n                                var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend);\r\n\r\n                                // If this binding handler claims to control descendant bindings, make a note of this\r\n                                if (initResult && initResult['controlsDescendantBindings']) {\r\n                                    if (bindingHandlerThatControlsDescendantBindings !== undefined)\r\n                                        throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\r\n                                    bindingHandlerThatControlsDescendantBindings = bindingKey;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        // Run update in its own computed wrapper\r\n                        if (typeof handlerUpdateFn == \"function\") {\r\n                            ko.dependentObservable(\r\n                                function() {\r\n                                    handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend);\r\n                                },\r\n                                null,\r\n                                { disposeWhenNodeIsRemoved: node }\r\n                            );\r\n                        }\r\n                    } catch (ex) {\r\n                        ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\r\n                        throw ex;\r\n                    }\r\n                });\r\n            }\r\n\r\n            var shouldBindDescendants = bindingHandlerThatControlsDescendantBindings === undefined;\r\n            return {\r\n                'shouldBindDescendants': shouldBindDescendants,\r\n                'bindingContextForDescendants': shouldBindDescendants && contextToExtend\r\n            };\r\n        };\r\n\r\n        ko.storedBindingContextForNode = function (node) {\r\n            var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey);\r\n            return bindingInfo && bindingInfo.context;\r\n        }\r\n\r\n        function getBindingContext(viewModelOrBindingContext, extendContextCallback) {\r\n            return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\r\n                ? viewModelOrBindingContext\r\n                : new ko.bindingContext(viewModelOrBindingContext, undefined, undefined, extendContextCallback);\r\n        }\r\n\r\n        ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n            if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\r\n                ko.virtualElements.normaliseVirtualElementDomStructure(node);\r\n            return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext));\r\n        };\r\n\r\n        ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\r\n            var context = getBindingContext(viewModelOrBindingContext);\r\n            return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\r\n        };\r\n\r\n        ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\r\n            if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\r\n                applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode);\r\n        };\r\n\r\n        ko.applyBindings = function (viewModelOrBindingContext, rootNode, extendContextCallback) {\r\n            // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\r\n            if (!jQueryInstance && window['jQuery']) {\r\n                jQueryInstance = window['jQuery'];\r\n            }\r\n\r\n            if (arguments.length < 2) {\r\n                rootNode = document.body;\r\n                if (!rootNode) {\r\n                    throw Error(\"ko.applyBindings: could not find document.body; has the document been loaded?\");\r\n                }\r\n            } else if (!rootNode || (rootNode.nodeType !== 1 && rootNode.nodeType !== 8)) {\r\n                throw Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\r\n            }\r\n\r\n            applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext, extendContextCallback), rootNode);\r\n        };\r\n\r\n        // Retrieving binding context from arbitrary nodes\r\n        ko.contextFor = function(node) {\r\n            // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\r\n            if (node && (node.nodeType === 1 || node.nodeType === 8)) {\r\n                return ko.storedBindingContextForNode(node);\r\n            }\r\n            return undefined;\r\n        };\r\n        ko.dataFor = function(node) {\r\n            var context = ko.contextFor(node);\r\n            return context ? context['$data'] : undefined;\r\n        };\r\n\r\n        ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\r\n        ko.exportSymbol('bindingEvent', ko.bindingEvent);\r\n        ko.exportSymbol('bindingEvent.subscribe', ko.bindingEvent.subscribe);\r\n        ko.exportSymbol('applyBindings', ko.applyBindings);\r\n        ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\r\n        ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\r\n        ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\r\n        ko.exportSymbol('contextFor', ko.contextFor);\r\n        ko.exportSymbol('dataFor', ko.dataFor);\r\n    })();\r\n    (function(undefined) {\r\n        var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\r\n            loadedDefinitionsCache = {};    // Tracks component loads that have already completed\r\n\r\n        ko.components = {\r\n            get: function(componentName, callback) {\r\n                var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\r\n                if (cachedDefinition) {\r\n                    // It's already loaded and cached. Reuse the same definition object.\r\n                    // Note that for API consistency, even cache hits complete asynchronously by default.\r\n                    // You can bypass this by putting synchronous:true on your component config.\r\n                    if (cachedDefinition.isSynchronousComponent) {\r\n                        ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\r\n                            callback(cachedDefinition.definition);\r\n                        });\r\n                    } else {\r\n                        ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\r\n                    }\r\n                } else {\r\n                    // Join the loading process that is already underway, or start a new one.\r\n                    loadComponentAndNotify(componentName, callback);\r\n                }\r\n            },\r\n\r\n            clearCachedDefinition: function(componentName) {\r\n                delete loadedDefinitionsCache[componentName];\r\n            },\r\n\r\n            _getFirstResultFromLoaders: getFirstResultFromLoaders\r\n        };\r\n\r\n        function getObjectOwnProperty(obj, propName) {\r\n            return Object.prototype.hasOwnProperty.call(obj, propName) ? obj[propName] : undefined;\r\n        }\r\n\r\n        function loadComponentAndNotify(componentName, callback) {\r\n            var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\r\n                completedAsync;\r\n            if (!subscribable) {\r\n                // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\r\n                subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\r\n                subscribable.subscribe(callback);\r\n\r\n                beginLoadingComponent(componentName, function(definition, config) {\r\n                    var isSynchronousComponent = !!(config && config['synchronous']);\r\n                    loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\r\n                    delete loadingSubscribablesCache[componentName];\r\n\r\n                    // For API consistency, all loads complete asynchronously. However we want to avoid\r\n                    // adding an extra task schedule if it's unnecessary (i.e., the completion is already\r\n                    // async).\r\n                    //\r\n                    // You can bypass the 'always asynchronous' feature by putting the synchronous:true\r\n                    // flag on your component configuration when you register it.\r\n                    if (completedAsync || isSynchronousComponent) {\r\n                        // Note that notifySubscribers ignores any dependencies read within the callback.\r\n                        // See comment in loaderRegistryBehaviors.js for reasoning\r\n                        subscribable['notifySubscribers'](definition);\r\n                    } else {\r\n                        ko.tasks.schedule(function() {\r\n                            subscribable['notifySubscribers'](definition);\r\n                        });\r\n                    }\r\n                });\r\n                completedAsync = true;\r\n            } else {\r\n                subscribable.subscribe(callback);\r\n            }\r\n        }\r\n\r\n        function beginLoadingComponent(componentName, callback) {\r\n            getFirstResultFromLoaders('getConfig', [componentName], function(config) {\r\n                if (config) {\r\n                    // We have a config, so now load its definition\r\n                    getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\r\n                        callback(definition, config);\r\n                    });\r\n                } else {\r\n                    // The component has no config - it's unknown to all the loaders.\r\n                    // Note that this is not an error (e.g., a module loading error) - that would abort the\r\n                    // process and this callback would not run. For this callback to run, all loaders must\r\n                    // have confirmed they don't know about this component.\r\n                    callback(null, null);\r\n                }\r\n            });\r\n        }\r\n\r\n        function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\r\n            // On the first call in the stack, start with the full set of loaders\r\n            if (!candidateLoaders) {\r\n                candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\r\n            }\r\n\r\n            // Try the next candidate\r\n            var currentCandidateLoader = candidateLoaders.shift();\r\n            if (currentCandidateLoader) {\r\n                var methodInstance = currentCandidateLoader[methodName];\r\n                if (methodInstance) {\r\n                    var wasAborted = false,\r\n                        synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\r\n                            if (wasAborted) {\r\n                                callback(null);\r\n                            } else if (result !== null) {\r\n                                // This candidate returned a value. Use it.\r\n                                callback(result);\r\n                            } else {\r\n                                // Try the next candidate\r\n                                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n                            }\r\n                        }));\r\n\r\n                    // Currently, loaders may not return anything synchronously. This leaves open the possibility\r\n                    // that we'll extend the API to support synchronous return values in the future. It won't be\r\n                    // a breaking change, because currently no loader is allowed to return anything except undefined.\r\n                    if (synchronousReturnValue !== undefined) {\r\n                        wasAborted = true;\r\n\r\n                        // Method to suppress exceptions will remain undocumented. This is only to keep\r\n                        // KO's specs running tidily, since we can observe the loading got aborted without\r\n                        // having exceptions cluttering up the console too.\r\n                        if (!currentCandidateLoader['suppressLoaderExceptions']) {\r\n                            throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\r\n                        }\r\n                    }\r\n                } else {\r\n                    // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\r\n                    getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\r\n                }\r\n            } else {\r\n                // No candidates returned a value\r\n                callback(null);\r\n            }\r\n        }\r\n\r\n        // Reference the loaders via string name so it's possible for developers\r\n        // to replace the whole array by assigning to ko.components.loaders\r\n        ko.components['loaders'] = [];\r\n\r\n        ko.exportSymbol('components', ko.components);\r\n        ko.exportSymbol('components.get', ko.components.get);\r\n        ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\r\n    })();\r\n    (function(undefined) {\r\n\r\n        // The default loader is responsible for two things:\r\n        // 1. Maintaining the default in-memory registry of component configuration objects\r\n        //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\r\n        // 2. Answering requests for components by fetching configuration objects\r\n        //    from that default in-memory registry and resolving them into standard\r\n        //    component definition objects (of the form { createViewModel: ..., template: ... })\r\n        // Custom loaders may override either of these facilities, i.e.,\r\n        // 1. To supply configuration objects from some other source (e.g., conventions)\r\n        // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\r\n\r\n        var defaultConfigRegistry = {};\r\n\r\n        ko.components.register = function(componentName, config) {\r\n            if (!config) {\r\n                throw new Error('Invalid configuration for ' + componentName);\r\n            }\r\n\r\n            if (ko.components.isRegistered(componentName)) {\r\n                throw new Error('Component ' + componentName + ' is already registered');\r\n            }\r\n\r\n            defaultConfigRegistry[componentName] = config;\r\n        };\r\n\r\n        ko.components.isRegistered = function(componentName) {\r\n            return Object.prototype.hasOwnProperty.call(defaultConfigRegistry, componentName);\r\n        };\r\n\r\n        ko.components.unregister = function(componentName) {\r\n            delete defaultConfigRegistry[componentName];\r\n            ko.components.clearCachedDefinition(componentName);\r\n        };\r\n\r\n        ko.components.defaultLoader = {\r\n            'getConfig': function(componentName, callback) {\r\n                var result = ko.components.isRegistered(componentName)\r\n                    ? defaultConfigRegistry[componentName]\r\n                    : null;\r\n                callback(result);\r\n            },\r\n\r\n            'loadComponent': function(componentName, config, callback) {\r\n                var errorCallback = makeErrorCallback(componentName);\r\n                possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\r\n                    resolveConfig(componentName, errorCallback, loadedConfig, callback);\r\n                });\r\n            },\r\n\r\n            'loadTemplate': function(componentName, templateConfig, callback) {\r\n                resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\r\n            },\r\n\r\n            'loadViewModel': function(componentName, viewModelConfig, callback) {\r\n                resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\r\n            }\r\n        };\r\n\r\n        var createViewModelKey = 'createViewModel';\r\n\r\n        // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\r\n        // into the standard component definition format:\r\n        //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\r\n        // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\r\n        // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\r\n        // so this is implemented manually below.\r\n        function resolveConfig(componentName, errorCallback, config, callback) {\r\n            var result = {},\r\n                makeCallBackWhenZero = 2,\r\n                tryIssueCallback = function() {\r\n                    if (--makeCallBackWhenZero === 0) {\r\n                        callback(result);\r\n                    }\r\n                },\r\n                templateConfig = config['template'],\r\n                viewModelConfig = config['viewModel'];\r\n\r\n            if (templateConfig) {\r\n                possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\r\n                    ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\r\n                        result['template'] = resolvedTemplate;\r\n                        tryIssueCallback();\r\n                    });\r\n                });\r\n            } else {\r\n                tryIssueCallback();\r\n            }\r\n\r\n            if (viewModelConfig) {\r\n                possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\r\n                    ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\r\n                        result[createViewModelKey] = resolvedViewModel;\r\n                        tryIssueCallback();\r\n                    });\r\n                });\r\n            } else {\r\n                tryIssueCallback();\r\n            }\r\n        }\r\n\r\n        function resolveTemplate(errorCallback, templateConfig, callback) {\r\n            if (typeof templateConfig === 'string') {\r\n                // Markup - parse it\r\n                callback(ko.utils.parseHtmlFragment(templateConfig));\r\n            } else if (templateConfig instanceof Array) {\r\n                // Assume already an array of DOM nodes - pass through unchanged\r\n                callback(templateConfig);\r\n            } else if (isDocumentFragment(templateConfig)) {\r\n                // Document fragment - use its child nodes\r\n                callback(ko.utils.makeArray(templateConfig.childNodes));\r\n            } else if (templateConfig['element']) {\r\n                var element = templateConfig['element'];\r\n                if (isDomElement(element)) {\r\n                    // Element instance - copy its child nodes\r\n                    callback(cloneNodesFromTemplateSourceElement(element));\r\n                } else if (typeof element === 'string') {\r\n                    // Element ID - find it, then copy its child nodes\r\n                    var elemInstance = document.getElementById(element);\r\n                    if (elemInstance) {\r\n                        callback(cloneNodesFromTemplateSourceElement(elemInstance));\r\n                    } else {\r\n                        errorCallback('Cannot find element with ID ' + element);\r\n                    }\r\n                } else {\r\n                    errorCallback('Unknown element type: ' + element);\r\n                }\r\n            } else {\r\n                errorCallback('Unknown template value: ' + templateConfig);\r\n            }\r\n        }\r\n\r\n        function resolveViewModel(errorCallback, viewModelConfig, callback) {\r\n            if (typeof viewModelConfig === 'function') {\r\n                // Constructor - convert to standard factory function format\r\n                // By design, this does *not* supply componentInfo to the constructor, as the intent is that\r\n                // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\r\n                // be used in factory functions, not viewmodel constructors.\r\n                callback(function (params /*, componentInfo */) {\r\n                    return new viewModelConfig(params);\r\n                });\r\n            } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\r\n                // Already a factory function - use it as-is\r\n                callback(viewModelConfig[createViewModelKey]);\r\n            } else if ('instance' in viewModelConfig) {\r\n                // Fixed object instance - promote to createViewModel format for API consistency\r\n                var fixedInstance = viewModelConfig['instance'];\r\n                callback(function (params, componentInfo) {\r\n                    return fixedInstance;\r\n                });\r\n            } else if ('viewModel' in viewModelConfig) {\r\n                // Resolved AMD module whose value is of the form { viewModel: ... }\r\n                resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\r\n            } else {\r\n                errorCallback('Unknown viewModel value: ' + viewModelConfig);\r\n            }\r\n        }\r\n\r\n        function cloneNodesFromTemplateSourceElement(elemInstance) {\r\n            switch (ko.utils.tagNameLower(elemInstance)) {\r\n                case 'script':\r\n                    return ko.utils.parseHtmlFragment(elemInstance.text);\r\n                case 'textarea':\r\n                    return ko.utils.parseHtmlFragment(elemInstance.value);\r\n                case 'template':\r\n                    // For browsers with proper <template> element support (i.e., where the .content property\r\n                    // gives a document fragment), use that document fragment.\r\n                    if (isDocumentFragment(elemInstance.content)) {\r\n                        return ko.utils.cloneNodes(elemInstance.content.childNodes);\r\n                    }\r\n            }\r\n\r\n            // Regular elements such as <div>, and <template> elements on old browsers that don't really\r\n            // understand <template> and just treat it as a regular container\r\n            return ko.utils.cloneNodes(elemInstance.childNodes);\r\n        }\r\n\r\n        function isDomElement(obj) {\r\n            if (window['HTMLElement']) {\r\n                return obj instanceof HTMLElement;\r\n            } else {\r\n                return obj && obj.tagName && obj.nodeType === 1;\r\n            }\r\n        }\r\n\r\n        function isDocumentFragment(obj) {\r\n            if (window['DocumentFragment']) {\r\n                return obj instanceof DocumentFragment;\r\n            } else {\r\n                return obj && obj.nodeType === 11;\r\n            }\r\n        }\r\n\r\n        function possiblyGetConfigFromAmd(errorCallback, config, callback) {\r\n            if (typeof config['require'] === 'string') {\r\n                // The config is the value of an AMD module\r\n                if (amdRequire || window['require']) {\r\n                    (amdRequire || window['require'])([config['require']], callback);\r\n                } else {\r\n                    errorCallback('Uses require, but no AMD loader is present');\r\n                }\r\n            } else {\r\n                callback(config);\r\n            }\r\n        }\r\n\r\n        function makeErrorCallback(componentName) {\r\n            return function (message) {\r\n                throw new Error('Component \\'' + componentName + '\\': ' + message);\r\n            };\r\n        }\r\n\r\n        ko.exportSymbol('components.register', ko.components.register);\r\n        ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\r\n        ko.exportSymbol('components.unregister', ko.components.unregister);\r\n\r\n        // Expose the default loader so that developers can directly ask it for configuration\r\n        // or to resolve configuration\r\n        ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\r\n\r\n        // By default, the default loader is the only registered component loader\r\n        ko.components['loaders'].push(ko.components.defaultLoader);\r\n\r\n        // Privately expose the underlying config registry for use in old-IE shim\r\n        ko.components._allRegisteredComponents = defaultConfigRegistry;\r\n    })();\r\n    (function (undefined) {\r\n        // Overridable API for determining which component name applies to a given node. By overriding this,\r\n        // you can for example map specific tagNames to components that are not preregistered.\r\n        ko.components['getComponentNameForNode'] = function(node) {\r\n            var tagNameLower = ko.utils.tagNameLower(node);\r\n            if (ko.components.isRegistered(tagNameLower)) {\r\n                // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\r\n                if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\r\n                    return tagNameLower;\r\n                }\r\n            }\r\n        };\r\n\r\n        ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\r\n            // Determine if it's really a custom element matching a component\r\n            if (node.nodeType === 1) {\r\n                var componentName = ko.components['getComponentNameForNode'](node);\r\n                if (componentName) {\r\n                    // It does represent a component, so add a component binding for it\r\n                    allBindings = allBindings || {};\r\n\r\n                    if (allBindings['component']) {\r\n                        // Avoid silently overwriting some other 'component' binding that may already be on the element\r\n                        throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\r\n                    }\r\n\r\n                    var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\r\n\r\n                    allBindings['component'] = valueAccessors\r\n                        ? function() { return componentBindingValue; }\r\n                        : componentBindingValue;\r\n                }\r\n            }\r\n\r\n            return allBindings;\r\n        }\r\n\r\n        var nativeBindingProviderInstance = new ko.bindingProvider();\r\n\r\n        function getComponentParamsFromCustomElement(elem, bindingContext) {\r\n            var paramsAttribute = elem.getAttribute('params');\r\n\r\n            if (paramsAttribute) {\r\n                var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\r\n                    rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\r\n                        return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\r\n                    }),\r\n                    result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\r\n                        var paramValue = paramValueComputed.peek();\r\n                        // Does the evaluation of the parameter value unwrap any observables?\r\n                        if (!paramValueComputed.isActive()) {\r\n                            // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\r\n                            // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\r\n                            return paramValue;\r\n                        } else {\r\n                            // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\r\n                            // level of observability, and any inner (resulting model value) level of observability.\r\n                            // This means the component doesn't have to worry about multiple unwrapping. If the value is a\r\n                            // writable observable, the computed will also be writable and pass the value on to the observable.\r\n                            return ko.computed({\r\n                                'read': function() {\r\n                                    return ko.utils.unwrapObservable(paramValueComputed());\r\n                                },\r\n                                'write': ko.isWriteableObservable(paramValue) && function(value) {\r\n                                    paramValueComputed()(value);\r\n                                },\r\n                                disposeWhenNodeIsRemoved: elem\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\r\n                // This is in case the developer wants to react to outer (binding) observability separately from inner\r\n                // (model value) observability, or in case the model value observable has subobservables.\r\n                if (!Object.prototype.hasOwnProperty.call(result, '$raw')) {\r\n                    result['$raw'] = rawParamComputedValues;\r\n                }\r\n\r\n                return result;\r\n            } else {\r\n                // For consistency, absence of a \"params\" attribute is treated the same as the presence of\r\n                // any empty one. Otherwise component viewmodels need special code to check whether or not\r\n                // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\r\n                return { '$raw': {} };\r\n            }\r\n        }\r\n\r\n        // --------------------------------------------------------------------------------\r\n        // Compatibility code for older (pre-HTML5) IE browsers\r\n\r\n        if (ko.utils.ieVersion < 9) {\r\n            // Whenever you preregister a component, enable it as a custom element in the current document\r\n            ko.components['register'] = (function(originalFunction) {\r\n                return function(componentName) {\r\n                    document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\r\n                    return originalFunction.apply(this, arguments);\r\n                }\r\n            })(ko.components['register']);\r\n\r\n            // Whenever you create a document fragment, enable all preregistered component names as custom elements\r\n            // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\r\n            document.createDocumentFragment = (function(originalFunction) {\r\n                return function() {\r\n                    var newDocFrag = originalFunction(),\r\n                        allComponents = ko.components._allRegisteredComponents;\r\n                    for (var componentName in allComponents) {\r\n                        if (Object.prototype.hasOwnProperty.call(allComponents, componentName)) {\r\n                            newDocFrag.createElement(componentName);\r\n                        }\r\n                    }\r\n                    return newDocFrag;\r\n                };\r\n            })(document.createDocumentFragment);\r\n        }\r\n    })();(function(undefined) {\r\n        var componentLoadingOperationUniqueId = 0;\r\n\r\n        ko.bindingHandlers['component'] = {\r\n            'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\r\n                var currentViewModel,\r\n                    currentLoadingOperationId,\r\n                    afterRenderSub,\r\n                    disposeAssociatedComponentViewModel = function () {\r\n                        var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\r\n                        if (typeof currentViewModelDispose === 'function') {\r\n                            currentViewModelDispose.call(currentViewModel);\r\n                        }\r\n                        if (afterRenderSub) {\r\n                            afterRenderSub.dispose();\r\n                        }\r\n                        afterRenderSub = null;\r\n                        currentViewModel = null;\r\n                        // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\r\n                        currentLoadingOperationId = null;\r\n                    },\r\n                    originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\r\n\r\n                ko.virtualElements.emptyNode(element);\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\r\n\r\n                ko.computed(function () {\r\n                    var value = ko.utils.unwrapObservable(valueAccessor()),\r\n                        componentName, componentParams;\r\n\r\n                    if (typeof value === 'string') {\r\n                        componentName = value;\r\n                    } else {\r\n                        componentName = ko.utils.unwrapObservable(value['name']);\r\n                        componentParams = ko.utils.unwrapObservable(value['params']);\r\n                    }\r\n\r\n                    if (!componentName) {\r\n                        throw new Error('No component name specified');\r\n                    }\r\n\r\n                    var asyncContext = ko.bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\r\n\r\n                    var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\r\n                    ko.components.get(componentName, function(componentDefinition) {\r\n                        // If this is not the current load operation for this element, ignore it.\r\n                        if (currentLoadingOperationId !== loadingOperationId) {\r\n                            return;\r\n                        }\r\n\r\n                        // Clean up previous state\r\n                        disposeAssociatedComponentViewModel();\r\n\r\n                        // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\r\n                        if (!componentDefinition) {\r\n                            throw new Error('Unknown component \\'' + componentName + '\\'');\r\n                        }\r\n                        cloneTemplateIntoElement(componentName, componentDefinition, element);\r\n\r\n                        var componentInfo = {\r\n                            'element': element,\r\n                            'templateNodes': originalChildNodes\r\n                        };\r\n\r\n                        var componentViewModel = createViewModel(componentDefinition, componentParams, componentInfo),\r\n                            childBindingContext = asyncContext['createChildContext'](componentViewModel, {\r\n                                'extend': function(ctx) {\r\n                                    ctx['$component'] = componentViewModel;\r\n                                    ctx['$componentTemplateNodes'] = originalChildNodes;\r\n                                }\r\n                            });\r\n\r\n                        if (componentViewModel && componentViewModel['koDescendantsComplete']) {\r\n                            afterRenderSub = ko.bindingEvent.subscribe(element, ko.bindingEvent.descendantsComplete, componentViewModel['koDescendantsComplete'], componentViewModel);\r\n                        }\r\n\r\n                        currentViewModel = componentViewModel;\r\n                        ko.applyBindingsToDescendants(childBindingContext, element);\r\n                    });\r\n                }, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n                return { 'controlsDescendantBindings': true };\r\n            }\r\n        };\r\n\r\n        ko.virtualElements.allowedBindings['component'] = true;\r\n\r\n        function cloneTemplateIntoElement(componentName, componentDefinition, element) {\r\n            var template = componentDefinition['template'];\r\n            if (!template) {\r\n                throw new Error('Component \\'' + componentName + '\\' has no template');\r\n            }\r\n\r\n            var clonedNodesArray = ko.utils.cloneNodes(template);\r\n            ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\r\n        }\r\n\r\n        function createViewModel(componentDefinition, componentParams, componentInfo) {\r\n            var componentViewModelFactory = componentDefinition['createViewModel'];\r\n            return componentViewModelFactory\r\n                ? componentViewModelFactory.call(componentDefinition, componentParams, componentInfo)\r\n                : componentParams; // Template-only component\r\n        }\r\n\r\n    })();\r\n    var attrHtmlToJavaScriptMap = { 'class': 'className', 'for': 'htmlFor' };\r\n    ko.bindingHandlers['attr'] = {\r\n        'update': function(element, valueAccessor, allBindings) {\r\n            var value = ko.utils.unwrapObservable(valueAccessor()) || {};\r\n            ko.utils.objectForEach(value, function(attrName, attrValue) {\r\n                attrValue = ko.utils.unwrapObservable(attrValue);\r\n\r\n                // Find the namespace of this attribute, if any.\r\n                var prefixLen = attrName.indexOf(':');\r\n                var namespace = \"lookupNamespaceURI\" in element && prefixLen > 0 && element.lookupNamespaceURI(attrName.substr(0, prefixLen));\r\n\r\n                // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\r\n                // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\r\n                // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\r\n                var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\r\n                if (toRemove) {\r\n                    namespace ? element.removeAttributeNS(namespace, attrName) : element.removeAttribute(attrName);\r\n                } else {\r\n                    attrValue = attrValue.toString();\r\n                }\r\n\r\n                // In IE <= 7 and IE8 Quirks Mode, you have to use the JavaScript property name instead of the\r\n                // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\r\n                // but instead of figuring out the mode, we'll just set the attribute through the JavaScript\r\n                // property for IE <= 8.\r\n                if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavaScriptMap) {\r\n                    attrName = attrHtmlToJavaScriptMap[attrName];\r\n                    if (toRemove)\r\n                        element.removeAttribute(attrName);\r\n                    else\r\n                        element[attrName] = attrValue;\r\n                } else if (!toRemove) {\r\n                    namespace ? element.setAttributeNS(namespace, attrName, attrValue) : element.setAttribute(attrName, attrValue);\r\n                }\r\n\r\n                // Treat \"name\" specially - although you can think of it as an attribute, it also needs\r\n                // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\r\n                // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\r\n                // entirely, and there's no strong reason to allow for such casing in HTML.\r\n                if (attrName === \"name\") {\r\n                    ko.utils.setElementName(element, toRemove ? \"\" : attrValue);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    (function() {\r\n\r\n    ko.bindingHandlers['checked'] = {\r\n        'after': ['value', 'attr'],\r\n        'init': function (element, valueAccessor, allBindings) {\r\n            var checkedValue = ko.pureComputed(function() {\r\n                // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\r\n                if (allBindings['has']('checkedValue')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n                } else if (useElementValue) {\r\n                    if (allBindings['has']('value')) {\r\n                        return ko.utils.unwrapObservable(allBindings.get('value'));\r\n                    } else {\r\n                        return element.value;\r\n                    }\r\n                }\r\n            });\r\n\r\n            function updateModel() {\r\n                // This updates the model value from the view value.\r\n                // It runs in response to DOM events (click) and changes in checkedValue.\r\n                var isChecked = element.checked,\r\n                    elemValue = checkedValue();\r\n\r\n                // When we're first setting up this computed, don't change any model state.\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                // We can ignore unchecked radio buttons, because some other radio\r\n                // button will be checked, and that one can take care of updating state.\r\n                // Also ignore value changes to an already unchecked checkbox.\r\n                if (!isChecked && (isRadio || ko.computedContext.getDependenciesCount())) {\r\n                    return;\r\n                }\r\n\r\n                var modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n                if (valueIsArray) {\r\n                    var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue,\r\n                        saveOldValue = oldElemValue;\r\n                    oldElemValue = elemValue;\r\n\r\n                    if (saveOldValue !== elemValue) {\r\n                        // When we're responding to the checkedValue changing, and the element is\r\n                        // currently checked, replace the old elem value with the new elem value\r\n                        // in the model array.\r\n                        if (isChecked) {\r\n                            ko.utils.addOrRemoveItem(writableValue, elemValue, true);\r\n                            ko.utils.addOrRemoveItem(writableValue, saveOldValue, false);\r\n                        }\r\n                    } else {\r\n                        // When we're responding to the user having checked/unchecked a checkbox,\r\n                        // add/remove the element value to the model array.\r\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\r\n                    }\r\n\r\n                    if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\r\n                        modelValue(writableValue);\r\n                    }\r\n                } else {\r\n                    if (isCheckbox) {\r\n                        if (elemValue === undefined) {\r\n                            elemValue = isChecked;\r\n                        } else if (!isChecked) {\r\n                            elemValue = undefined;\r\n                        }\r\n                    }\r\n                    ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n                }\r\n            };\r\n\r\n            function updateView() {\r\n                // This updates the view value from the model value.\r\n                // It runs in response to changes in the bound (checked) value.\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor()),\r\n                    elemValue = checkedValue();\r\n\r\n                if (valueIsArray) {\r\n                    // When a checkbox is bound to an array, being checked represents its value being present in that array\r\n                    element.checked = ko.utils.arrayIndexOf(modelValue, elemValue) >= 0;\r\n                    oldElemValue = elemValue;\r\n                } else if (isCheckbox && elemValue === undefined) {\r\n                    // When a checkbox is bound to any other value (not an array) and \"checkedValue\" is not defined,\r\n                    // being checked represents the value being trueish\r\n                    element.checked = !!modelValue;\r\n                } else {\r\n                    // Otherwise, being checked means that the checkbox or radio button's value corresponds to the model value\r\n                    element.checked = (checkedValue() === modelValue);\r\n                }\r\n            };\r\n\r\n            var isCheckbox = element.type == \"checkbox\",\r\n                isRadio = element.type == \"radio\";\r\n\r\n            // Only bind to check boxes and radio buttons\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            var rawValue = valueAccessor(),\r\n                valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\r\n                rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\r\n                useElementValue = isRadio || valueIsArray,\r\n                oldElemValue = valueIsArray ? checkedValue() : undefined;\r\n\r\n            // IE 6 won't allow radio buttons to be selected unless they have a name\r\n            if (isRadio && !element.name)\r\n                ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\r\n\r\n            // Set up two computeds to update the binding:\r\n\r\n            // The first responds to changes in the checkedValue value and to element clicks\r\n            ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\r\n            ko.utils.registerEventHandler(element, \"click\", updateModel);\r\n\r\n            // The second responds to changes in the model value (the one associated with the checked binding)\r\n            ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n            rawValue = undefined;\r\n        }\r\n    };\r\n    ko.expressionRewriting.twoWayBindings['checked'] = true;\r\n\r\n    ko.bindingHandlers['checkedValue'] = {\r\n        'update': function (element, valueAccessor) {\r\n            element.value = ko.utils.unwrapObservable(valueAccessor());\r\n        }\r\n    };\r\n\r\n    })();var classesWrittenByBindingKey = '__ko__cssValue';\r\n    ko.bindingHandlers['class'] = {\r\n        'update': function (element, valueAccessor) {\r\n            var value = ko.utils.stringTrim(ko.utils.unwrapObservable(valueAccessor()));\r\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\r\n            element[classesWrittenByBindingKey] = value;\r\n            ko.utils.toggleDomNodeCssClass(element, value, true);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers['css'] = {\r\n        'update': function (element, valueAccessor) {\r\n            var value = ko.utils.unwrapObservable(valueAccessor());\r\n            if (value !== null && typeof value == \"object\") {\r\n                ko.utils.objectForEach(value, function(className, shouldHaveClass) {\r\n                    shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\r\n                    ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\r\n                });\r\n            } else {\r\n                ko.bindingHandlers['class']['update'](element, valueAccessor);\r\n            }\r\n        }\r\n    };\r\n    ko.bindingHandlers['enable'] = {\r\n        'update': function (element, valueAccessor) {\r\n            var value = ko.utils.unwrapObservable(valueAccessor());\r\n            if (value && element.disabled)\r\n                element.removeAttribute(\"disabled\");\r\n            else if ((!value) && (!element.disabled))\r\n                element.disabled = true;\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers['disable'] = {\r\n        'update': function (element, valueAccessor) {\r\n            ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\r\n        }\r\n    };\r\n    // For certain common events (currently just 'click'), allow a simplified data-binding syntax\r\n    // e.g. click:handler instead of the usual full-length event:{click:handler}\r\n    function makeEventHandlerShortcut(eventName) {\r\n        ko.bindingHandlers[eventName] = {\r\n            'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                var newValueAccessor = function () {\r\n                    var result = {};\r\n                    result[eventName] = valueAccessor();\r\n                    return result;\r\n                };\r\n                return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\r\n            }\r\n        }\r\n    }\r\n\r\n    ko.bindingHandlers['event'] = {\r\n        'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var eventsToHandle = valueAccessor() || {};\r\n            ko.utils.objectForEach(eventsToHandle, function(eventName) {\r\n                if (typeof eventName == \"string\") {\r\n                    ko.utils.registerEventHandler(element, eventName, function (event) {\r\n                        var handlerReturnValue;\r\n                        var handlerFunction = valueAccessor()[eventName];\r\n                        if (!handlerFunction)\r\n                            return;\r\n\r\n                        try {\r\n                            // Take all the event args, and prefix with the viewmodel\r\n                            var argsForHandler = ko.utils.makeArray(arguments);\r\n                            viewModel = bindingContext['$data'];\r\n                            argsForHandler.unshift(viewModel);\r\n                            handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\r\n                        } finally {\r\n                            if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                                if (event.preventDefault)\r\n                                    event.preventDefault();\r\n                                else\r\n                                    event.returnValue = false;\r\n                            }\r\n                        }\r\n\r\n                        var bubble = allBindings.get(eventName + 'Bubble') !== false;\r\n                        if (!bubble) {\r\n                            event.cancelBubble = true;\r\n                            if (event.stopPropagation)\r\n                                event.stopPropagation();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n    // \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\r\n    // \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\r\n    ko.bindingHandlers['foreach'] = {\r\n        makeTemplateValueAccessor: function(valueAccessor) {\r\n            return function() {\r\n                var modelValue = valueAccessor(),\r\n                    unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\r\n\r\n                // If unwrappedValue is the array, pass in the wrapped value on its own\r\n                // The value will be unwrapped and tracked within the template binding\r\n                // (See https://github.com/SteveSanderson/knockout/issues/523)\r\n                if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\r\n                    return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\r\n\r\n                // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\r\n                ko.utils.unwrapObservable(modelValue);\r\n                return {\r\n                    'foreach': unwrappedValue['data'],\r\n                    'as': unwrappedValue['as'],\r\n                    'noChildContext': unwrappedValue['noChildContext'],\r\n                    'includeDestroyed': unwrappedValue['includeDestroyed'],\r\n                    'afterAdd': unwrappedValue['afterAdd'],\r\n                    'beforeRemove': unwrappedValue['beforeRemove'],\r\n                    'afterRender': unwrappedValue['afterRender'],\r\n                    'beforeMove': unwrappedValue['beforeMove'],\r\n                    'afterMove': unwrappedValue['afterMove'],\r\n                    'templateEngine': ko.nativeTemplateEngine.instance\r\n                };\r\n            };\r\n        },\r\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\r\n        },\r\n        'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\r\n        }\r\n    };\r\n    ko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\r\n    ko.virtualElements.allowedBindings['foreach'] = true;\r\n    var hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\r\n    var hasfocusLastValue = '__ko_hasfocusLastValue';\r\n    ko.bindingHandlers['hasfocus'] = {\r\n        'init': function(element, valueAccessor, allBindings) {\r\n            var handleElementFocusChange = function(isFocused) {\r\n                // Where possible, ignore which event was raised and determine focus state using activeElement,\r\n                // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\r\n                // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\r\n                // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\r\n                // from calling 'blur()' on the element when it loses focus.\r\n                // Discussion at https://github.com/SteveSanderson/knockout/pull/352\r\n                element[hasfocusUpdatingProperty] = true;\r\n                var ownerDoc = element.ownerDocument;\r\n                if (\"activeElement\" in ownerDoc) {\r\n                    var active;\r\n                    try {\r\n                        active = ownerDoc.activeElement;\r\n                    } catch(e) {\r\n                        // IE9 throws if you access activeElement during page load (see issue #703)\r\n                        active = ownerDoc.body;\r\n                    }\r\n                    isFocused = (active === element);\r\n                }\r\n                var modelValue = valueAccessor();\r\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\r\n\r\n                //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\r\n                element[hasfocusLastValue] = isFocused;\r\n                element[hasfocusUpdatingProperty] = false;\r\n            };\r\n            var handleElementFocusIn = handleElementFocusChange.bind(null, true);\r\n            var handleElementFocusOut = handleElementFocusChange.bind(null, false);\r\n\r\n            ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\r\n            ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\r\n            ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\r\n            ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\r\n\r\n            // Assume element is not focused (prevents \"blur\" being called initially)\r\n            element[hasfocusLastValue] = false;\r\n        },\r\n        'update': function(element, valueAccessor) {\r\n            var value = !!ko.utils.unwrapObservable(valueAccessor());\r\n\r\n            if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\r\n                value ? element.focus() : element.blur();\r\n\r\n                // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\r\n                // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\r\n                // element was focused already.\r\n                if (!value && element[hasfocusLastValue]) {\r\n                    element.ownerDocument.body.focus();\r\n                }\r\n\r\n                // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\r\n                ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\r\n            }\r\n        }\r\n    };\r\n    ko.expressionRewriting.twoWayBindings['hasfocus'] = true;\r\n\r\n    ko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\r\n    ko.expressionRewriting.twoWayBindings['hasFocus'] = 'hasfocus';\r\n    ko.bindingHandlers['html'] = {\r\n        'init': function() {\r\n            // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\r\n            return { 'controlsDescendantBindings': true };\r\n        },\r\n        'update': function (element, valueAccessor) {\r\n            // setHtml will unwrap the value if needed\r\n            ko.utils.setHtml(element, valueAccessor());\r\n        }\r\n    };\r\n    (function () {\r\n\r\n    // Makes a binding like with or if\r\n    function makeWithIfBinding(bindingKey, isWith, isNot) {\r\n        ko.bindingHandlers[bindingKey] = {\r\n            'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                var savedNodes, wrapCondition = true, withOptions, ifCondition, completeOnRender, needAsyncContext;\r\n\r\n                if (isWith) {\r\n                    var as = allBindings.get('as'), noChildContext = allBindings.get('noChildContext');\r\n                    wrapCondition = as && noChildContext;\r\n                    withOptions = { 'as': as, 'noChildContext': noChildContext };\r\n                }\r\n\r\n                if (wrapCondition) {\r\n                    ifCondition = ko.computed(function() {\r\n                        return !isNot !== !ko.utils.unwrapObservable(valueAccessor());\r\n                    }, null, { disposeWhenNodeIsRemoved: element });\r\n                }\r\n\r\n                completeOnRender = allBindings.get(\"completeOn\") == \"render\";\r\n                needAsyncContext = completeOnRender || allBindings['has'](ko.bindingEvent.descendantsComplete);\r\n\r\n                ko.computed(function() {\r\n                    var value = wrapCondition ? ifCondition() : ko.utils.unwrapObservable(valueAccessor()),\r\n                        shouldDisplay = !!value,\r\n                        isFirstRender = !savedNodes;\r\n\r\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\r\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\r\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\r\n                    }\r\n\r\n                    if (needAsyncContext) {\r\n                        bindingContext = ko.bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\r\n                    }\r\n\r\n                    if (shouldDisplay) {\r\n                        if (!isFirstRender) {\r\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\r\n                        }\r\n\r\n                        var childContext;\r\n                        if (isWith) {\r\n                            childContext = bindingContext['createChildContext'](typeof value == \"function\" ? value : valueAccessor, withOptions);\r\n                        } else if (ifCondition.isActive()) {\r\n                            childContext = bindingContext['extend'](function() { ifCondition(); return null; });\r\n                        } else {\r\n                            childContext = bindingContext;\r\n                        }\r\n\r\n                        ko.applyBindingsToDescendants(childContext, element);\r\n                    } else {\r\n                        ko.virtualElements.emptyNode(element);\r\n\r\n                        if (!completeOnRender) {\r\n                            ko.bindingEvent.notify(element, ko.bindingEvent.childrenComplete);\r\n                        }\r\n                    }\r\n                }, null, { disposeWhenNodeIsRemoved: element });\r\n\r\n                return { 'controlsDescendantBindings': true };\r\n            }\r\n        };\r\n        ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\r\n        ko.virtualElements.allowedBindings[bindingKey] = true;\r\n    }\r\n\r\n    // Construct the actual binding handlers\r\n    makeWithIfBinding('if');\r\n    makeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\r\n    makeWithIfBinding('with', true /* isWith */);\r\n\r\n    })();ko.bindingHandlers['let'] = {\r\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            // Make a modified binding context, with extra properties, and apply it to descendant elements\r\n            var innerContext = bindingContext['extend'](valueAccessor);\r\n            ko.applyBindingsToDescendants(innerContext, element);\r\n\r\n            return { 'controlsDescendantBindings': true };\r\n        }\r\n    };\r\n    ko.virtualElements.allowedBindings['let'] = true;\r\n    var captionPlaceholder = {};\r\n    ko.bindingHandlers['options'] = {\r\n        'init': function(element) {\r\n            if (ko.utils.tagNameLower(element) !== \"select\")\r\n                throw new Error(\"options binding applies only to SELECT elements\");\r\n\r\n            // Remove all existing <option>s.\r\n            while (element.length > 0) {\r\n                element.remove(0);\r\n            }\r\n\r\n            // Ensures that the binding processor doesn't try to bind the options\r\n            return { 'controlsDescendantBindings': true };\r\n        },\r\n        'update': function (element, valueAccessor, allBindings) {\r\n            function selectedOptions() {\r\n                return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\r\n            }\r\n\r\n            var selectWasPreviouslyEmpty = element.length == 0,\r\n                multiple = element.multiple,\r\n                previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\r\n                unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n                valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\r\n                includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n                arrayToDomNodeChildrenOptions = {},\r\n                captionValue,\r\n                filteredArray,\r\n                previousSelectedValues = [];\r\n\r\n            if (!valueAllowUnset) {\r\n                if (multiple) {\r\n                    previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\r\n                } else if (element.selectedIndex >= 0) {\r\n                    previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\r\n                }\r\n            }\r\n\r\n            if (unwrappedArray) {\r\n                if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                    unwrappedArray = [unwrappedArray];\r\n\r\n                // Filter out any entries marked as destroyed\r\n                filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                    return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n                });\r\n\r\n                // If caption is included, add it to the array\r\n                if (allBindings['has']('optionsCaption')) {\r\n                    captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                    // If caption value is null or undefined, don't show a caption\r\n                    if (captionValue !== null && captionValue !== undefined) {\r\n                        filteredArray.unshift(captionPlaceholder);\r\n                    }\r\n                }\r\n            } else {\r\n                // If a falsy value is provided (e.g. null), we'll simply empty the select element\r\n            }\r\n\r\n            function applyToObject(object, predicate, defaultValue) {\r\n                var predicateType = typeof predicate;\r\n                if (predicateType == \"function\")    // Given a function; run it against the data value\r\n                    return predicate(object);\r\n                else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\r\n                    return object[predicate];\r\n                else                                // Given no optionsText arg; use the data value itself\r\n                    return defaultValue;\r\n            }\r\n\r\n            // The following functions can run at two different times:\r\n            // The first is when the whole array is being updated directly from this binding handler.\r\n            // The second is when an observable value for a specific array entry is updated.\r\n            // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\r\n            var itemUpdate = false;\r\n            function optionForArrayItem(arrayEntry, index, oldOptions) {\r\n                if (oldOptions.length) {\r\n                    previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\r\n                    itemUpdate = true;\r\n                }\r\n                var option = element.ownerDocument.createElement(\"option\");\r\n                if (arrayEntry === captionPlaceholder) {\r\n                    ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                    ko.selectExtensions.writeValue(option, undefined);\r\n                } else {\r\n                    // Apply a value to the option element\r\n                    var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\r\n                    ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\r\n\r\n                    // Apply some text to the option element\r\n                    var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\r\n                    ko.utils.setTextContent(option, optionText);\r\n                }\r\n                return [option];\r\n            }\r\n\r\n            // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\r\n            // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\r\n            arrayToDomNodeChildrenOptions['beforeRemove'] =\r\n                function (option) {\r\n                    element.removeChild(option);\r\n                };\r\n\r\n            function setSelectionCallback(arrayEntry, newOptions) {\r\n                if (itemUpdate && valueAllowUnset) {\r\n                    // The model value is authoritative, so make sure its value is the one selected\r\n                    // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\r\n                    ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\r\n                } else if (previousSelectedValues.length) {\r\n                    // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                    // That's why we first added them without selection. Now it's time to set the selection.\r\n                    var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\r\n                    ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\r\n\r\n                    // If this option was changed from being selected during a single-item update, notify the change\r\n                    if (itemUpdate && !isSelected) {\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            var callback = setSelectionCallback;\r\n            if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\r\n                callback = function(arrayEntry, newOptions) {\r\n                    setSelectionCallback(arrayEntry, newOptions);\r\n                    ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\r\n                }\r\n            }\r\n\r\n            ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\r\n\r\n            ko.dependencyDetection.ignore(function () {\r\n                if (valueAllowUnset) {\r\n                    // The model value is authoritative, so make sure its value is the one selected\r\n                    ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\r\n                } else {\r\n                    // Determine if the selection has changed as a result of updating the options list\r\n                    var selectionChanged;\r\n                    if (multiple) {\r\n                        // For a multiple-select box, compare the new selection count to the previous one\r\n                        // But if nothing was selected before, the selection can't have changed\r\n                        selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\r\n                    } else {\r\n                        // For a single-select box, compare the current value to the previous value\r\n                        // But if nothing was selected before or nothing is selected now, just look for a change in selection\r\n                        selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\r\n                            ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\r\n                            : (previousSelectedValues.length || element.selectedIndex >= 0);\r\n                    }\r\n\r\n                    // Ensure consistency between model value and selected option.\r\n                    // If the dropdown was changed so that selection is no longer the same,\r\n                    // notify the value or selectedOptions binding.\r\n                    if (selectionChanged) {\r\n                        ko.utils.triggerEvent(element, \"change\");\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Workaround for IE bug\r\n            ko.utils.ensureSelectElementIsRenderedCorrectly(element);\r\n\r\n            if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\r\n                element.scrollTop = previousScrollTop;\r\n        }\r\n    };\r\n    ko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\r\n    ko.bindingHandlers['selectedOptions'] = {\r\n        'after': ['options', 'foreach'],\r\n        'init': function (element, valueAccessor, allBindings) {\r\n            ko.utils.registerEventHandler(element, \"change\", function () {\r\n                var value = valueAccessor(), valueToWrite = [];\r\n                ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                    if (node.selected)\r\n                        valueToWrite.push(ko.selectExtensions.readValue(node));\r\n                });\r\n                ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\r\n            });\r\n        },\r\n        'update': function (element, valueAccessor) {\r\n            if (ko.utils.tagNameLower(element) != \"select\")\r\n                throw new Error(\"values binding applies only to SELECT elements\");\r\n\r\n            var newValue = ko.utils.unwrapObservable(valueAccessor()),\r\n                previousScrollTop = element.scrollTop;\r\n\r\n            if (newValue && typeof newValue.length == \"number\") {\r\n                ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\r\n                    var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\r\n                    if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\r\n                        ko.utils.setOptionNodeSelectionState(node, isSelected);\r\n                    }\r\n                });\r\n            }\r\n\r\n            element.scrollTop = previousScrollTop;\r\n        }\r\n    };\r\n    ko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\r\n    ko.bindingHandlers['style'] = {\r\n        'update': function (element, valueAccessor) {\r\n            var value = ko.utils.unwrapObservable(valueAccessor() || {});\r\n            ko.utils.objectForEach(value, function(styleName, styleValue) {\r\n                styleValue = ko.utils.unwrapObservable(styleValue);\r\n\r\n                if (styleValue === null || styleValue === undefined || styleValue === false) {\r\n                    // Empty string removes the value, whereas null/undefined have no effect\r\n                    styleValue = \"\";\r\n                }\r\n\r\n                if (jQueryInstance) {\r\n                    jQueryInstance(element)['css'](styleName, styleValue);\r\n                } else if (/^--/.test(styleName)) {\r\n                    // Is styleName a custom CSS property?\r\n                    element.style.setProperty(styleName, styleValue);\r\n                } else {\r\n                    styleName = styleName.replace(/-(\\w)/g, function (all, letter) {\r\n                        return letter.toUpperCase();\r\n                    });\r\n\r\n                    var previousStyle = element.style[styleName];\r\n                    element.style[styleName] = styleValue;\r\n\r\n                    if (styleValue !== previousStyle && element.style[styleName] == previousStyle && !isNaN(styleValue)) {\r\n                        element.style[styleName] = styleValue + \"px\";\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ko.bindingHandlers['submit'] = {\r\n        'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            if (typeof valueAccessor() != \"function\")\r\n                throw new Error(\"The value for a submit binding must be a function\");\r\n            ko.utils.registerEventHandler(element, \"submit\", function (event) {\r\n                var handlerReturnValue;\r\n                var value = valueAccessor();\r\n                try { handlerReturnValue = value.call(bindingContext['$data'], element); }\r\n                finally {\r\n                    if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\r\n                        if (event.preventDefault)\r\n                            event.preventDefault();\r\n                        else\r\n                            event.returnValue = false;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ko.bindingHandlers['text'] = {\r\n        'init': function() {\r\n            // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\r\n            // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\r\n            return { 'controlsDescendantBindings': true };\r\n        },\r\n        'update': function (element, valueAccessor) {\r\n            ko.utils.setTextContent(element, valueAccessor());\r\n        }\r\n    };\r\n    ko.virtualElements.allowedBindings['text'] = true;\r\n    (function () {\r\n\r\n    if (window && window.navigator) {\r\n        var parseVersion = function (matches) {\r\n            if (matches) {\r\n                return parseFloat(matches[1]);\r\n            }\r\n        };\r\n\r\n        // Detect various browser versions because some old versions don't fully support the 'input' event\r\n        var userAgent = window.navigator.userAgent,\r\n            operaVersion, chromeVersion, safariVersion, firefoxVersion, ieVersion, edgeVersion;\r\n\r\n        (operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()))\r\n            || (edgeVersion = parseVersion(userAgent.match(/Edge\\/([^ ]+)$/)))\r\n            || (chromeVersion = parseVersion(userAgent.match(/Chrome\\/([^ ]+)/)))\r\n            || (safariVersion = parseVersion(userAgent.match(/Version\\/([^ ]+) Safari/)))\r\n            || (firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]+)/)))\r\n            || (ieVersion = ko.utils.ieVersion || parseVersion(userAgent.match(/MSIE ([^ ]+)/)))      // Detects up to IE 10\r\n            || (ieVersion = parseVersion(userAgent.match(/rv:([^ )]+)/)));      // Detects IE 11\r\n    }\r\n\r\n    // IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\r\n    // But it does fire the 'selectionchange' event on many of those, presumably because the\r\n    // cursor is moving and that counts as the selection changing. The 'selectionchange' event is\r\n    // fired at the document level only and doesn't directly indicate which element changed. We\r\n    // set up just one event handler for the document and use 'activeElement' to determine which\r\n    // element was changed.\r\n    if (ieVersion >= 8 && ieVersion < 10) {\r\n        var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\r\n            selectionChangeHandlerName = ko.utils.domData.nextKey();\r\n        var selectionChangeHandler = function(event) {\r\n            var target = this.activeElement,\r\n                handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\r\n            if (handler) {\r\n                handler(event);\r\n            }\r\n        };\r\n        var registerForSelectionChangeEvent = function (element, handler) {\r\n            var ownerDoc = element.ownerDocument;\r\n            if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\r\n                ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\r\n                ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\r\n            }\r\n            ko.utils.domData.set(element, selectionChangeHandlerName, handler);\r\n        };\r\n    }\r\n\r\n    ko.bindingHandlers['textInput'] = {\r\n        'init': function (element, valueAccessor, allBindings) {\r\n\r\n            var previousElementValue = element.value,\r\n                timeoutHandle,\r\n                elementValueBeforeEvent;\r\n\r\n            var updateModel = function (event) {\r\n                clearTimeout(timeoutHandle);\r\n                elementValueBeforeEvent = timeoutHandle = undefined;\r\n\r\n                var elementValue = element.value;\r\n                if (previousElementValue !== elementValue) {\r\n                    // Provide a way for tests to know exactly which event was processed\r\n                    if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\r\n                    previousElementValue = elementValue;\r\n                    ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\r\n                }\r\n            };\r\n\r\n            var deferUpdateModel = function (event) {\r\n                if (!timeoutHandle) {\r\n                    // The elementValueBeforeEvent variable is set *only* during the brief gap between an\r\n                    // event firing and the updateModel function running. This allows us to ignore model\r\n                    // updates that are from the previous state of the element, usually due to techniques\r\n                    // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\r\n                    elementValueBeforeEvent = element.value;\r\n                    var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\r\n                    timeoutHandle = ko.utils.setTimeout(handler, 4);\r\n                }\r\n            };\r\n\r\n            // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\r\n            // so we'll make sure all updates are asynchronous\r\n            var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel,\r\n                ourUpdate = false;\r\n\r\n            var updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                if (modelValue === null || modelValue === undefined) {\r\n                    modelValue = '';\r\n                }\r\n\r\n                if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\r\n                    ko.utils.setTimeout(updateView, 4);\r\n                    return;\r\n                }\r\n\r\n                // Update the element only if the element and model are different. On some browsers, updating the value\r\n                // will move the cursor to the end of the input, which would be bad while the user is typing.\r\n                if (element.value !== modelValue) {\r\n                    ourUpdate = true;  // Make sure we ignore events (propertychange) that result from updating the value\r\n                    element.value = modelValue;\r\n                    ourUpdate = false;\r\n                    previousElementValue = element.value; // In case the browser changes the value (see #2281)\r\n                }\r\n            };\r\n\r\n            var onEvent = function (event, handler) {\r\n                ko.utils.registerEventHandler(element, event, handler);\r\n            };\r\n\r\n            if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\r\n                // Provide a way for tests to specify exactly which events are bound\r\n                ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\r\n                    if (eventName.slice(0,5) == 'after') {\r\n                        onEvent(eventName.slice(5), deferUpdateModel);\r\n                    } else {\r\n                        onEvent(eventName, updateModel);\r\n                    }\r\n                });\r\n            } else {\r\n                if (ieVersion) {\r\n                    // All versions (including 11) of Internet Explorer have a bug that they don't generate an input or propertychange event when ESC is pressed\r\n                    onEvent('keypress', updateModel);\r\n                }\r\n                if (ieVersion < 11) {\r\n                    // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\r\n                    // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\r\n                    // but that's an acceptable compromise for this binding. IE 9 and 10 support 'input', but since they don't always\r\n                    // fire it when using autocomplete, we'll use 'propertychange' for them also.\r\n                    onEvent('propertychange', function(event) {\r\n                        if (!ourUpdate && event.propertyName === 'value') {\r\n                            ieUpdateModel(event);\r\n                        }\r\n                    });\r\n                }\r\n                if (ieVersion == 8) {\r\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\r\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\r\n                    // events too.\r\n                    onEvent('keyup', updateModel);      // A single keystoke\r\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\r\n                }\r\n                if (registerForSelectionChangeEvent) {\r\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\r\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\r\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\r\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\r\n                    // These are also needed in IE8 because of the bug described above.\r\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\r\n                    onEvent('dragend', deferUpdateModel);\r\n                }\r\n\r\n                if (!ieVersion || ieVersion >= 9) {\r\n                    // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\r\n                    // through the user interface.\r\n                    onEvent('input', ieUpdateModel);\r\n                }\r\n\r\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\r\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\r\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\r\n                    onEvent('keydown', deferUpdateModel);\r\n                    onEvent('paste', deferUpdateModel);\r\n                    onEvent('cut', deferUpdateModel);\r\n                } else if (operaVersion < 11) {\r\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\r\n                    // We can try to catch some of those using 'keydown'.\r\n                    onEvent('keydown', deferUpdateModel);\r\n                } else if (firefoxVersion < 4.0) {\r\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\r\n                    onEvent('DOMAutoComplete', updateModel);\r\n\r\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\r\n                    onEvent('dragdrop', updateModel);       // <3.5\r\n                    onEvent('drop', updateModel);           // 3.5\r\n                } else if (edgeVersion && element.type === \"number\") {\r\n                    // Microsoft Edge doesn't fire 'input' or 'change' events for number inputs when\r\n                    // the value is changed via the up / down arrow keys\r\n                    onEvent('keydown', deferUpdateModel);\r\n                }\r\n            }\r\n\r\n            // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\r\n            onEvent('change', updateModel);\r\n\r\n            // To deal with browsers that don't notify any kind of event for some changes (IE, Safari, etc.)\r\n            onEvent('blur', updateModel);\r\n\r\n            ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\r\n        }\r\n    };\r\n    ko.expressionRewriting.twoWayBindings['textInput'] = true;\r\n\r\n    // textinput is an alias for textInput\r\n    ko.bindingHandlers['textinput'] = {\r\n        // preprocess is the only way to set up a full alias\r\n        'preprocess': function (value, name, addBinding) {\r\n            addBinding('textInput', value);\r\n        }\r\n    };\r\n\r\n    })();ko.bindingHandlers['uniqueName'] = {\r\n        'init': function (element, valueAccessor) {\r\n            if (valueAccessor()) {\r\n                var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\r\n                ko.utils.setElementName(element, name);\r\n            }\r\n        }\r\n    };\r\n    ko.bindingHandlers['uniqueName'].currentIndex = 0;\r\n    ko.bindingHandlers['using'] = {\r\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var innerContext = bindingContext['createChildContext'](valueAccessor);\r\n            ko.applyBindingsToDescendants(innerContext, element);\r\n\r\n            return { 'controlsDescendantBindings': true };\r\n        }\r\n    };\r\n    ko.virtualElements.allowedBindings['using'] = true;\r\n    ko.bindingHandlers['value'] = {\r\n        'after': ['options', 'foreach'],\r\n        'init': function (element, valueAccessor, allBindings) {\r\n            var tagName = ko.utils.tagNameLower(element),\r\n                isInputElement = tagName == \"input\";\r\n\r\n            // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\r\n            if (isInputElement && (element.type == \"checkbox\" || element.type == \"radio\")) {\r\n                ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\r\n                return;\r\n            }\r\n\r\n            // Always catch \"change\" event; possibly other events too if asked\r\n            var eventsToCatch = [\"change\"];\r\n            var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\r\n            var propertyChangedFired = false;\r\n            var elementValueBeforeEvent = null;\r\n\r\n            if (requestedEventsToCatch) {\r\n                if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\r\n                    requestedEventsToCatch = [requestedEventsToCatch];\r\n                ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\r\n                eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\r\n            }\r\n\r\n            var valueUpdateHandler = function() {\r\n                elementValueBeforeEvent = null;\r\n                propertyChangedFired = false;\r\n                var modelValue = valueAccessor();\r\n                var elementValue = ko.selectExtensions.readValue(element);\r\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\r\n            }\r\n\r\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/122\r\n            // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\r\n            var ieAutoCompleteHackNeeded = ko.utils.ieVersion && isInputElement && element.type == \"text\"\r\n                                           && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\r\n            if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\r\n                ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\r\n                ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\r\n                ko.utils.registerEventHandler(element, \"blur\", function() {\r\n                    if (propertyChangedFired) {\r\n                        valueUpdateHandler();\r\n                    }\r\n                });\r\n            }\r\n\r\n            ko.utils.arrayForEach(eventsToCatch, function(eventName) {\r\n                // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\r\n                // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\r\n                // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\r\n                var handler = valueUpdateHandler;\r\n                if (ko.utils.stringStartsWith(eventName, \"after\")) {\r\n                    handler = function() {\r\n                        // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\r\n                        // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\r\n                        // at the earliest asynchronous opportunity. We store this temporary information so that\r\n                        // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\r\n                        // we can overwrite that model value change with the value the user just typed. Otherwise,\r\n                        // techniques like rateLimit can trigger model changes at critical moments that will\r\n                        // override the user's inputs, causing keystrokes to be lost.\r\n                        elementValueBeforeEvent = ko.selectExtensions.readValue(element);\r\n                        ko.utils.setTimeout(valueUpdateHandler, 0);\r\n                    };\r\n                    eventName = eventName.substring(\"after\".length);\r\n                }\r\n                ko.utils.registerEventHandler(element, eventName, handler);\r\n            });\r\n\r\n            var updateFromModel;\r\n\r\n            if (isInputElement && element.type == \"file\") {\r\n                // For file input elements, can only write the empty string\r\n                updateFromModel = function () {\r\n                    var newValue = ko.utils.unwrapObservable(valueAccessor());\r\n                    if (newValue === null || newValue === undefined || newValue === \"\") {\r\n                        element.value = \"\";\r\n                    } else {\r\n                        ko.dependencyDetection.ignore(valueUpdateHandler);  // reset the model to match the element\r\n                    }\r\n                }\r\n            } else {\r\n                updateFromModel = function () {\r\n                    var newValue = ko.utils.unwrapObservable(valueAccessor());\r\n                    var elementValue = ko.selectExtensions.readValue(element);\r\n\r\n                    if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\r\n                        ko.utils.setTimeout(updateFromModel, 0);\r\n                        return;\r\n                    }\r\n\r\n                    var valueHasChanged = newValue !== elementValue;\r\n\r\n                    if (valueHasChanged || elementValue === undefined) {\r\n                        if (tagName === \"select\") {\r\n                            var allowUnset = allBindings.get('valueAllowUnset');\r\n                            ko.selectExtensions.writeValue(element, newValue, allowUnset);\r\n                            if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\r\n                                // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\r\n                                // because you're not allowed to have a model value that disagrees with a visible UI selection.\r\n                                ko.dependencyDetection.ignore(valueUpdateHandler);\r\n                            }\r\n                        } else {\r\n                            ko.selectExtensions.writeValue(element, newValue);\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\r\n        },\r\n        'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\r\n    };\r\n    ko.expressionRewriting.twoWayBindings['value'] = true;\r\n    ko.bindingHandlers['visible'] = {\r\n        'update': function (element, valueAccessor) {\r\n            var value = ko.utils.unwrapObservable(valueAccessor());\r\n            var isCurrentlyVisible = !(element.style.display == \"none\");\r\n            if (value && !isCurrentlyVisible)\r\n                element.style.display = \"\";\r\n            else if ((!value) && isCurrentlyVisible)\r\n                element.style.display = \"none\";\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers['hidden'] = {\r\n        'update': function (element, valueAccessor) {\r\n            ko.bindingHandlers['visible']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\r\n        }\r\n    };\r\n    // 'click' is just a shorthand for the usual full-length event:{click:handler}\r\n    makeEventHandlerShortcut('click');\r\n    // If you want to make a custom template engine,\r\n    //\r\n    // [1] Inherit from this class (like ko.nativeTemplateEngine does)\r\n    // [2] Override 'renderTemplateSource', supplying a function with this signature:\r\n    //\r\n    //        function (templateSource, bindingContext, options) {\r\n    //            // - templateSource.text() is the text of the template you should render\r\n    //            // - bindingContext.$data is the data you should pass into the template\r\n    //            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\r\n    //            //     and bindingContext.$root available in the template too\r\n    //            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\r\n    //            // - templateDocument is the document object of the template\r\n    //            //\r\n    //            // Return value: an array of DOM nodes\r\n    //        }\r\n    //\r\n    // [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\r\n    //\r\n    //        function (script) {\r\n    //            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\r\n    //            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\r\n    //        }\r\n    //\r\n    //     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\r\n    //     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\r\n    //     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\r\n\r\n    ko.templateEngine = function () { };\r\n\r\n    ko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n        throw new Error(\"Override renderTemplateSource\");\r\n    };\r\n\r\n    ko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\r\n        throw new Error(\"Override createJavaScriptEvaluatorBlock\");\r\n    };\r\n\r\n    ko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\r\n        // Named template\r\n        if (typeof template == \"string\") {\r\n            templateDocument = templateDocument || document;\r\n            var elem = templateDocument.getElementById(template);\r\n            if (!elem)\r\n                throw new Error(\"Cannot find template with ID \" + template);\r\n            return new ko.templateSources.domElement(elem);\r\n        } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\r\n            // Anonymous template\r\n            return new ko.templateSources.anonymousTemplate(template);\r\n        } else\r\n            throw new Error(\"Unknown template type: \" + template);\r\n    };\r\n\r\n    ko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\r\n        var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n        return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\r\n    };\r\n\r\n    ko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\r\n        // Skip rewriting if requested\r\n        if (this['allowTemplateRewriting'] === false)\r\n            return true;\r\n        return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\r\n    };\r\n\r\n    ko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\r\n        var templateSource = this['makeTemplateSource'](template, templateDocument);\r\n        var rewritten = rewriterCallback(templateSource['text']());\r\n        templateSource['text'](rewritten);\r\n        templateSource['data'](\"isRewritten\", true);\r\n    };\r\n\r\n    ko.exportSymbol('templateEngine', ko.templateEngine);\r\n\r\n    ko.templateRewriting = (function () {\r\n        var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\r\n        var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\r\n\r\n        function validateDataBindValuesForRewriting(keyValueArray) {\r\n            var allValidators = ko.expressionRewriting.bindingRewriteValidators;\r\n            for (var i = 0; i < keyValueArray.length; i++) {\r\n                var key = keyValueArray[i]['key'];\r\n                if (Object.prototype.hasOwnProperty.call(allValidators, key)) {\r\n                    var validator = allValidators[key];\r\n\r\n                    if (typeof validator === \"function\") {\r\n                        var possibleErrorMessage = validator(keyValueArray[i]['value']);\r\n                        if (possibleErrorMessage)\r\n                            throw new Error(possibleErrorMessage);\r\n                    } else if (!validator) {\r\n                        throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\r\n            var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\r\n            validateDataBindValuesForRewriting(dataBindKeyValueArray);\r\n            var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\r\n\r\n            // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\r\n            // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\r\n            // extra indirection.\r\n            var applyBindingsToNextSiblingScript =\r\n                \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\r\n            return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\r\n        }\r\n\r\n        return {\r\n            ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\r\n                if (!templateEngine['isTemplateRewritten'](template, templateDocument))\r\n                    templateEngine['rewriteTemplate'](template, function (htmlString) {\r\n                        return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\r\n                    }, templateDocument);\r\n            },\r\n\r\n            memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\r\n                return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\r\n                    return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\r\n                }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\r\n                    return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\r\n                });\r\n            },\r\n\r\n            applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\r\n                return ko.memoization.memoize(function (domNode, bindingContext) {\r\n                    var nodeToBind = domNode.nextSibling;\r\n                    if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\r\n                        ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    })();\r\n\r\n\r\n    // Exported only because it has to be referenced by string lookup from within rewritten template\r\n    ko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\r\n    (function() {\r\n        // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\r\n        // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\r\n        //\r\n        // Two are provided by default:\r\n        //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\r\n        //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\r\n        //                                           without reading/writing the actual element text content, since it will be overwritten\r\n        //                                           with the rendered template output.\r\n        // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\r\n        // Template sources need to have the following functions:\r\n        //   text() \t\t\t- returns the template text from your storage location\r\n        //   text(value)\t\t- writes the supplied template text to your storage location\r\n        //   data(key)\t\t\t- reads values stored using data(key, value) - see below\r\n        //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\r\n        //\r\n        // Optionally, template sources can also have the following functions:\r\n        //   nodes()            - returns a DOM element containing the nodes of this template, where available\r\n        //   nodes(value)       - writes the given DOM element to your storage location\r\n        // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\r\n        // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\r\n        //\r\n        // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\r\n        // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\r\n\r\n        ko.templateSources = {};\r\n\r\n        // ---- ko.templateSources.domElement -----\r\n\r\n        // template types\r\n        var templateScript = 1,\r\n            templateTextArea = 2,\r\n            templateTemplate = 3,\r\n            templateElement = 4;\r\n\r\n        ko.templateSources.domElement = function(element) {\r\n            this.domElement = element;\r\n\r\n            if (element) {\r\n                var tagNameLower = ko.utils.tagNameLower(element);\r\n                this.templateType =\r\n                    tagNameLower === \"script\" ? templateScript :\r\n                    tagNameLower === \"textarea\" ? templateTextArea :\r\n                        // For browsers with proper <template> element support, where the .content property gives a document fragment\r\n                    tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\r\n                    templateElement;\r\n            }\r\n        }\r\n\r\n        ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\r\n            var elemContentsProperty = this.templateType === templateScript ? \"text\"\r\n                                     : this.templateType === templateTextArea ? \"value\"\r\n                                     : \"innerHTML\";\r\n\r\n            if (arguments.length == 0) {\r\n                return this.domElement[elemContentsProperty];\r\n            } else {\r\n                var valueToWrite = arguments[0];\r\n                if (elemContentsProperty === \"innerHTML\")\r\n                    ko.utils.setHtml(this.domElement, valueToWrite);\r\n                else\r\n                    this.domElement[elemContentsProperty] = valueToWrite;\r\n            }\r\n        };\r\n\r\n        var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\r\n        ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\r\n            if (arguments.length === 1) {\r\n                return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\r\n            } else {\r\n                ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\r\n            }\r\n        };\r\n\r\n        var templatesDomDataKey = ko.utils.domData.nextKey();\r\n        function getTemplateDomData(element) {\r\n            return ko.utils.domData.get(element, templatesDomDataKey) || {};\r\n        }\r\n        function setTemplateDomData(element, data) {\r\n            ko.utils.domData.set(element, templatesDomDataKey, data);\r\n        }\r\n\r\n        ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\r\n            var element = this.domElement;\r\n            if (arguments.length == 0) {\r\n                var templateData = getTemplateDomData(element),\r\n                    nodes = templateData.containerData || (\r\n                        this.templateType === templateTemplate ? element.content :\r\n                        this.templateType === templateElement ? element :\r\n                        undefined);\r\n                if (!nodes || templateData.alwaysCheckText) {\r\n                    // If the template is associated with an element that stores the template as text,\r\n                    // parse and cache the nodes whenever there's new text content available. This allows\r\n                    // the user to update the template content by updating the text of template node.\r\n                    var text = this['text']();\r\n                    if (text) {\r\n                        nodes = ko.utils.parseHtmlForTemplateNodes(text, element.ownerDocument);\r\n                        this['text'](\"\");   // clear the text from the node\r\n                        setTemplateDomData(element, {containerData: nodes, alwaysCheckText: true});\r\n                    }\r\n                }\r\n                return nodes;\r\n            } else {\r\n                var valueToWrite = arguments[0];\r\n                setTemplateDomData(element, {containerData: valueToWrite});\r\n            }\r\n        };\r\n\r\n        // ---- ko.templateSources.anonymousTemplate -----\r\n        // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\r\n        // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\r\n        // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\r\n\r\n        ko.templateSources.anonymousTemplate = function(element) {\r\n            this.domElement = element;\r\n        }\r\n        ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\r\n        ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\r\n        ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\r\n            if (arguments.length == 0) {\r\n                var templateData = getTemplateDomData(this.domElement);\r\n                if (templateData.textData === undefined && templateData.containerData)\r\n                    templateData.textData = templateData.containerData.innerHTML;\r\n                return templateData.textData;\r\n            } else {\r\n                var valueToWrite = arguments[0];\r\n                setTemplateDomData(this.domElement, {textData: valueToWrite});\r\n            }\r\n        };\r\n\r\n        ko.exportSymbol('templateSources', ko.templateSources);\r\n        ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\r\n        ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\r\n    })();\r\n    (function () {\r\n        var _templateEngine;\r\n        ko.setTemplateEngine = function (templateEngine) {\r\n            if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\r\n                throw new Error(\"templateEngine must inherit from ko.templateEngine\");\r\n            _templateEngine = templateEngine;\r\n        }\r\n\r\n        function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\r\n            var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\r\n            while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\r\n                nextInQueue = ko.virtualElements.nextSibling(node);\r\n                action(node, nextInQueue);\r\n            }\r\n        }\r\n\r\n        function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\r\n            // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\r\n            // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\r\n            // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\r\n            // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\r\n            // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\r\n\r\n            if (continuousNodeArray.length) {\r\n                var firstNode = continuousNodeArray[0],\r\n                    lastNode = continuousNodeArray[continuousNodeArray.length - 1],\r\n                    parentNode = firstNode.parentNode,\r\n                    provider = ko.bindingProvider['instance'],\r\n                    preprocessNode = provider['preprocessNode'];\r\n\r\n                if (preprocessNode) {\r\n                    invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\r\n                        var nodePreviousSibling = node.previousSibling;\r\n                        var newNodes = preprocessNode.call(provider, node);\r\n                        if (newNodes) {\r\n                            if (node === firstNode)\r\n                                firstNode = newNodes[0] || nextNodeInRange;\r\n                            if (node === lastNode)\r\n                                lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\r\n                        }\r\n                    });\r\n\r\n                    // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\r\n                    // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\r\n                    // first node needs to be in the array).\r\n                    continuousNodeArray.length = 0;\r\n                    if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\r\n                        return;\r\n                    }\r\n                    if (firstNode === lastNode) {\r\n                        continuousNodeArray.push(firstNode);\r\n                    } else {\r\n                        continuousNodeArray.push(firstNode, lastNode);\r\n                        ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n                    }\r\n                }\r\n\r\n                // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\r\n                // whereas a regular applyBindings won't introduce new memoized nodes\r\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                    if (node.nodeType === 1 || node.nodeType === 8)\r\n                        ko.applyBindings(bindingContext, node);\r\n                });\r\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\r\n                    if (node.nodeType === 1 || node.nodeType === 8)\r\n                        ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\r\n                });\r\n\r\n                // Make sure any changes done by applyBindings or unmemoize are reflected in the array\r\n                ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\r\n            }\r\n        }\r\n\r\n        function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\r\n            return nodeOrNodeArray.nodeType ? nodeOrNodeArray\r\n                                            : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\r\n                                            : null;\r\n        }\r\n\r\n        function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\r\n            options = options || {};\r\n            var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n            var templateDocument = (firstTargetNode || template || {}).ownerDocument;\r\n            var templateEngineToUse = (options['templateEngine'] || _templateEngine);\r\n            ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\r\n            var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\r\n\r\n            // Loosely check result is an array of DOM nodes\r\n            if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\r\n                throw new Error(\"Template engine must return an array of DOM nodes\");\r\n\r\n            var haveAddedNodesToParent = false;\r\n            switch (renderMode) {\r\n                case \"replaceChildren\":\r\n                    ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\r\n                    haveAddedNodesToParent = true;\r\n                    break;\r\n                case \"replaceNode\":\r\n                    ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\r\n                    haveAddedNodesToParent = true;\r\n                    break;\r\n                case \"ignoreTargetNode\": break;\r\n                default:\r\n                    throw new Error(\"Unknown renderMode: \" + renderMode);\r\n            }\r\n\r\n            if (haveAddedNodesToParent) {\r\n                activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\r\n                if (options['afterRender']) {\r\n                    ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext[options['as'] || '$data']]);\r\n                }\r\n                if (renderMode == \"replaceChildren\") {\r\n                    ko.bindingEvent.notify(targetNodeOrNodeArray, ko.bindingEvent.childrenComplete);\r\n                }\r\n            }\r\n\r\n            return renderedNodesArray;\r\n        }\r\n\r\n        function resolveTemplateName(template, data, context) {\r\n            // The template can be specified as:\r\n            if (ko.isObservable(template)) {\r\n                // 1. An observable, with string value\r\n                return template();\r\n            } else if (typeof template === 'function') {\r\n                // 2. A function of (data, context) returning a string\r\n                return template(data, context);\r\n            } else {\r\n                // 3. A string\r\n                return template;\r\n            }\r\n        }\r\n\r\n        ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\r\n            options = options || {};\r\n            if ((options['templateEngine'] || _templateEngine) == undefined)\r\n                throw new Error(\"Set a template engine before calling renderTemplate\");\r\n            renderMode = renderMode || \"replaceChildren\";\r\n\r\n            if (targetNodeOrNodeArray) {\r\n                var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n\r\n                var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\r\n                var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\r\n\r\n                return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\r\n                    function () {\r\n                        // Ensure we've got a proper binding context to work with\r\n                        var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\r\n                            ? dataOrBindingContext\r\n                            : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\r\n\r\n                        var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\r\n                            renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\r\n\r\n                        if (renderMode == \"replaceNode\") {\r\n                            targetNodeOrNodeArray = renderedNodesArray;\r\n                            firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\r\n                        }\r\n                    },\r\n                    null,\r\n                    { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\r\n                );\r\n            } else {\r\n                // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\r\n                return ko.memoization.memoize(function (domNode) {\r\n                    ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\r\n            // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\r\n            // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\r\n            var arrayItemContext, asName = options['as'];\r\n\r\n            // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\r\n            var executeTemplateForArrayItem = function (arrayValue, index) {\r\n                // Support selecting template as a function of the data being rendered\r\n                arrayItemContext = parentBindingContext['createChildContext'](arrayValue, {\r\n                    'as': asName,\r\n                    'noChildContext': options['noChildContext'],\r\n                    'extend': function(context) {\r\n                        context['$index'] = index;\r\n                        if (asName) {\r\n                            context[asName + \"Index\"] = index;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\r\n                return executeTemplate(targetNode, \"ignoreTargetNode\", templateName, arrayItemContext, options);\r\n            };\r\n\r\n            // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\r\n            var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\r\n                activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\r\n                if (options['afterRender'])\r\n                    options['afterRender'](addedNodesArray, arrayValue);\r\n\r\n                // release the \"cache\" variable, so that it can be collected by\r\n                // the GC when its value isn't used from within the bindings anymore.\r\n                arrayItemContext = null;\r\n            };\r\n\r\n            var setDomNodeChildrenFromArrayMapping = function (newArray, changeList) {\r\n                // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\r\n                // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\r\n                ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, newArray, executeTemplateForArrayItem, options, activateBindingsCallback, changeList]);\r\n                ko.bindingEvent.notify(targetNode, ko.bindingEvent.childrenComplete);\r\n            };\r\n\r\n            var shouldHideDestroyed = (options['includeDestroyed'] === false) || (ko.options['foreachHidesDestroyed'] && !options['includeDestroyed']);\r\n\r\n            if (!shouldHideDestroyed && !options['beforeRemove'] && ko.isObservableArray(arrayOrObservableArray)) {\r\n                setDomNodeChildrenFromArrayMapping(arrayOrObservableArray.peek());\r\n\r\n                var subscription = arrayOrObservableArray.subscribe(function (changeList) {\r\n                    setDomNodeChildrenFromArrayMapping(arrayOrObservableArray(), changeList);\r\n                }, null, \"arrayChange\");\r\n                subscription.disposeWhenNodeIsRemoved(targetNode);\r\n\r\n                return subscription;\r\n            } else {\r\n                return ko.dependentObservable(function () {\r\n                    var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\r\n                    if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\r\n                        unwrappedArray = [unwrappedArray];\r\n\r\n                    if (shouldHideDestroyed) {\r\n                        // Filter out any entries marked as destroyed\r\n                        unwrappedArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\r\n                            return item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\r\n                        });\r\n                    }\r\n                    setDomNodeChildrenFromArrayMapping(unwrappedArray);\r\n\r\n                }, null, { disposeWhenNodeIsRemoved: targetNode });\r\n            }\r\n        };\r\n\r\n        var templateComputedDomDataKey = ko.utils.domData.nextKey();\r\n        function disposeOldComputedAndStoreNewOne(element, newComputed) {\r\n            var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\r\n            if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\r\n                oldComputed.dispose();\r\n            ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && (!newComputed.isActive || newComputed.isActive())) ? newComputed : undefined);\r\n        }\r\n\r\n        var cleanContainerDomDataKey = ko.utils.domData.nextKey();\r\n        ko.bindingHandlers['template'] = {\r\n            'init': function(element, valueAccessor) {\r\n                // Support anonymous templates\r\n                var bindingValue = ko.utils.unwrapObservable(valueAccessor());\r\n                if (typeof bindingValue == \"string\" || bindingValue['name']) {\r\n                    // It's a named template - clear the element\r\n                    ko.virtualElements.emptyNode(element);\r\n                } else if ('nodes' in bindingValue) {\r\n                    // We've been given an array of DOM nodes. Save them as the template source.\r\n                    // There is no known use case for the node array being an observable array (if the output\r\n                    // varies, put that behavior *into* your template - that's what templates are for), and\r\n                    // the implementation would be a mess, so assert that it's not observable.\r\n                    var nodes = bindingValue['nodes'] || [];\r\n                    if (ko.isObservable(nodes)) {\r\n                        throw new Error('The \"nodes\" option must be a plain, non-observable array.');\r\n                    }\r\n\r\n                    // If the nodes are already attached to a KO-generated container, we reuse that container without moving the\r\n                    // elements to a new one (we check only the first node, as the nodes are always moved together)\r\n                    var container = nodes[0] && nodes[0].parentNode;\r\n                    if (!container || !ko.utils.domData.get(container, cleanContainerDomDataKey)) {\r\n                        container = ko.utils.moveCleanedNodesToContainerElement(nodes);\r\n                        ko.utils.domData.set(container, cleanContainerDomDataKey, true);\r\n                    }\r\n\r\n                    new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n                } else {\r\n                    // It's an anonymous template - store the element contents, then clear the element\r\n                    var templateNodes = ko.virtualElements.childNodes(element);\r\n                    if (templateNodes.length > 0) {\r\n                        var container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\r\n                        new ko.templateSources.anonymousTemplate(element)['nodes'](container);\r\n                    } else {\r\n                        throw new Error(\"Anonymous template defined, but no template content was provided\");\r\n                    }\r\n                }\r\n                return { 'controlsDescendantBindings': true };\r\n            },\r\n            'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n                var value = valueAccessor(),\r\n                    options = ko.utils.unwrapObservable(value),\r\n                    shouldDisplay = true,\r\n                    templateComputed = null,\r\n                    templateName;\r\n\r\n                if (typeof options == \"string\") {\r\n                    templateName = value;\r\n                    options = {};\r\n                } else {\r\n                    templateName = options['name'];\r\n\r\n                    // Support \"if\"/\"ifnot\" conditions\r\n                    if ('if' in options)\r\n                        shouldDisplay = ko.utils.unwrapObservable(options['if']);\r\n                    if (shouldDisplay && 'ifnot' in options)\r\n                        shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\r\n                }\r\n\r\n                if ('foreach' in options) {\r\n                    // Render once for each data point (treating data set as empty if shouldDisplay==false)\r\n                    var dataArray = (shouldDisplay && options['foreach']) || [];\r\n                    templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\r\n                } else if (!shouldDisplay) {\r\n                    ko.virtualElements.emptyNode(element);\r\n                } else {\r\n                    // Render once for this single data point (or use the viewModel if no data was provided)\r\n                    var innerBindingContext = bindingContext;\r\n                    if ('data' in options) {\r\n                        innerBindingContext = bindingContext['createChildContext'](options['data'], {\r\n                            'as': options['as'],\r\n                            'noChildContext': options['noChildContext'],\r\n                            'exportDependencies': true\r\n                        });\r\n                    }\r\n                    templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\r\n                }\r\n\r\n                // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\r\n                disposeOldComputedAndStoreNewOne(element, templateComputed);\r\n            }\r\n        };\r\n\r\n        // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\r\n        ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\r\n            var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\r\n\r\n            if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\r\n                return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\r\n\r\n            if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\r\n                return null; // Named templates can be rewritten, so return \"no error\"\r\n            return \"This template engine does not support anonymous templates nested within its templates\";\r\n        };\r\n\r\n        ko.virtualElements.allowedBindings['template'] = true;\r\n    })();\r\n\r\n    ko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\r\n    ko.exportSymbol('renderTemplate', ko.renderTemplate);\r\n    // Go through the items that have been added and deleted and try to find matches between them.\r\n    ko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\r\n        if (left.length && right.length) {\r\n            var failedCompares, l, r, leftItem, rightItem;\r\n            for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\r\n                for (r = 0; rightItem = right[r]; ++r) {\r\n                    if (leftItem['value'] === rightItem['value']) {\r\n                        leftItem['moved'] = rightItem['index'];\r\n                        rightItem['moved'] = leftItem['index'];\r\n                        right.splice(r, 1);         // This item is marked as moved; so remove it from right list\r\n                        failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\r\n                        break;\r\n                    }\r\n                }\r\n                failedCompares += r;\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.utils.compareArrays = (function () {\r\n        var statusNotInOld = 'added', statusNotInNew = 'deleted';\r\n\r\n        // Simple calculation based on Levenshtein distance.\r\n        function compareArrays(oldArray, newArray, options) {\r\n            // For backward compatibility, if the third arg is actually a bool, interpret\r\n            // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\r\n            options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\r\n            oldArray = oldArray || [];\r\n            newArray = newArray || [];\r\n\r\n            if (oldArray.length < newArray.length)\r\n                return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\r\n            else\r\n                return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\r\n        }\r\n\r\n        function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\r\n            var myMin = Math.min,\r\n                myMax = Math.max,\r\n                editDistanceMatrix = [],\r\n                smlIndex, smlIndexMax = smlArray.length,\r\n                bigIndex, bigIndexMax = bigArray.length,\r\n                compareRange = (bigIndexMax - smlIndexMax) || 1,\r\n                maxDistance = smlIndexMax + bigIndexMax + 1,\r\n                thisRow, lastRow,\r\n                bigIndexMaxForRow, bigIndexMinForRow;\r\n\r\n            for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\r\n                lastRow = thisRow;\r\n                editDistanceMatrix.push(thisRow = []);\r\n                bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\r\n                bigIndexMinForRow = myMax(0, smlIndex - 1);\r\n                for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\r\n                    if (!bigIndex)\r\n                        thisRow[bigIndex] = smlIndex + 1;\r\n                    else if (!smlIndex)  // Top row - transform empty array into new array via additions\r\n                        thisRow[bigIndex] = bigIndex + 1;\r\n                    else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\r\n                        thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\r\n                    else {\r\n                        var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\r\n                        var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\r\n                        thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            var editScript = [], meMinusOne, notInSml = [], notInBig = [];\r\n            for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\r\n                meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\r\n                if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\r\n                    notInSml.push(editScript[editScript.length] = {     // added\r\n                        'status': statusNotInSml,\r\n                        'value': bigArray[--bigIndex],\r\n                        'index': bigIndex });\r\n                } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\r\n                    notInBig.push(editScript[editScript.length] = {     // deleted\r\n                        'status': statusNotInBig,\r\n                        'value': smlArray[--smlIndex],\r\n                        'index': smlIndex });\r\n                } else {\r\n                    --bigIndex;\r\n                    --smlIndex;\r\n                    if (!options['sparse']) {\r\n                        editScript.push({\r\n                            'status': \"retained\",\r\n                            'value': bigArray[bigIndex] });\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\r\n            // smlIndexMax keeps the time complexity of this algorithm linear.\r\n            ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\r\n\r\n            return editScript.reverse();\r\n        }\r\n\r\n        return compareArrays;\r\n    })();\r\n\r\n    ko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\r\n    (function () {\r\n        // Objective:\r\n        // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\r\n        //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\r\n        // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\r\n        //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\r\n        //   previously mapped - retain those nodes, and just insert/delete other ones\r\n\r\n        // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\r\n        // You can use this, for example, to activate bindings on those nodes.\r\n\r\n        function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\r\n            // Map this array value inside a dependentObservable so we re-map when any dependency changes\r\n            var mappedNodes = [];\r\n            var dependentObservable = ko.dependentObservable(function() {\r\n                var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\r\n\r\n                // On subsequent evaluations, just replace the previously-inserted DOM nodes\r\n                if (mappedNodes.length > 0) {\r\n                    ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\r\n                    if (callbackAfterAddingNodes)\r\n                        ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\r\n                }\r\n\r\n                // Replace the contents of the mappedNodes array, thereby updating the record\r\n                // of which nodes would be deleted if valueToMap was itself later removed\r\n                mappedNodes.length = 0;\r\n                ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\r\n            }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\r\n            return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\r\n        }\r\n\r\n        var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\r\n            deletedItemDummyValue = ko.utils.domData.nextKey();\r\n\r\n        ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes, editScript) {\r\n            array = array || [];\r\n            if (typeof array.length == \"undefined\") // Coerce single value into array\r\n                array = [array];\r\n\r\n            options = options || {};\r\n            var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey);\r\n            var isFirstExecution = !lastMappingResult;\r\n\r\n            // Build the new mapping result\r\n            var newMappingResult = [];\r\n            var lastMappingResultIndex = 0;\r\n            var newMappingResultIndex = 0;\r\n\r\n            var nodesToDelete = [];\r\n            var itemsToMoveFirstIndexes = [];\r\n            var itemsForBeforeRemoveCallbacks = [];\r\n            var itemsForMoveCallbacks = [];\r\n            var itemsForAfterAddCallbacks = [];\r\n            var mapData;\r\n            var countWaitingForRemove = 0;\r\n\r\n            function itemAdded(value) {\r\n                mapData = { arrayEntry: value, indexObservable: ko.observable(newMappingResultIndex++) };\r\n                newMappingResult.push(mapData);\r\n                if (!isFirstExecution) {\r\n                    itemsForAfterAddCallbacks.push(mapData);\r\n                }\r\n            }\r\n\r\n            function itemMovedOrRetained(oldPosition) {\r\n                mapData = lastMappingResult[oldPosition];\r\n                if (newMappingResultIndex !== oldPosition)\r\n                    itemsForMoveCallbacks.push(mapData);\r\n                // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\r\n                mapData.indexObservable(newMappingResultIndex++);\r\n                ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\r\n                newMappingResult.push(mapData);\r\n            }\r\n\r\n            function callCallback(callback, items) {\r\n                if (callback) {\r\n                    for (var i = 0, n = items.length; i < n; i++) {\r\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\r\n                            callback(node, i, items[i].arrayEntry);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (isFirstExecution) {\r\n                ko.utils.arrayForEach(array, itemAdded);\r\n            } else {\r\n                if (!editScript || (lastMappingResult && lastMappingResult['_countWaitingForRemove'])) {\r\n                    // Compare the provided array against the previous one\r\n                    var lastArray = isFirstExecution ? [] : ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; }),\r\n                        compareOptions = {\r\n                            'dontLimitMoves': options['dontLimitMoves'],\r\n                            'sparse': true\r\n                        };\r\n                    editScript = ko.utils.compareArrays(lastArray, array, compareOptions);\r\n                }\r\n\r\n                for (var i = 0, editScriptItem, movedIndex, itemIndex; editScriptItem = editScript[i]; i++) {\r\n                    movedIndex = editScriptItem['moved'];\r\n                    itemIndex = editScriptItem['index'];\r\n                    switch (editScriptItem['status']) {\r\n                        case \"deleted\":\r\n                            while (lastMappingResultIndex < itemIndex) {\r\n                                itemMovedOrRetained(lastMappingResultIndex++);\r\n                            }\r\n                            if (movedIndex === undefined) {\r\n                                mapData = lastMappingResult[lastMappingResultIndex];\r\n\r\n                                // Stop tracking changes to the mapping for these nodes\r\n                                if (mapData.dependentObservable) {\r\n                                    mapData.dependentObservable.dispose();\r\n                                    mapData.dependentObservable = undefined;\r\n                                }\r\n\r\n                                // Queue these nodes for later removal\r\n                                if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\r\n                                    if (options['beforeRemove']) {\r\n                                        newMappingResult.push(mapData);\r\n                                        countWaitingForRemove++;\r\n                                        if (mapData.arrayEntry === deletedItemDummyValue) {\r\n                                            mapData = null;\r\n                                        } else {\r\n                                            itemsForBeforeRemoveCallbacks.push(mapData);\r\n                                        }\r\n                                    }\r\n                                    if (mapData) {\r\n                                        nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\r\n                                    }\r\n                                }\r\n                            }\r\n                            lastMappingResultIndex++;\r\n                            break;\r\n\r\n                        case \"added\":\r\n                            while (newMappingResultIndex < itemIndex) {\r\n                                itemMovedOrRetained(lastMappingResultIndex++);\r\n                            }\r\n                            if (movedIndex !== undefined) {\r\n                                itemsToMoveFirstIndexes.push(newMappingResultIndex);\r\n                                itemMovedOrRetained(movedIndex);\r\n                            } else {\r\n                                itemAdded(editScriptItem['value']);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                while (newMappingResultIndex < array.length) {\r\n                    itemMovedOrRetained(lastMappingResultIndex++);\r\n                }\r\n\r\n                // Record that the current view may still contain deleted items\r\n                // because it means we won't be able to use a provided editScript.\r\n                newMappingResult['_countWaitingForRemove'] = countWaitingForRemove;\r\n            }\r\n\r\n            // Store a copy of the array items we just considered so we can difference it next time\r\n            ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\r\n\r\n            // Call beforeMove first before any changes have been made to the DOM\r\n            callCallback(options['beforeMove'], itemsForMoveCallbacks);\r\n\r\n            // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\r\n            ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\r\n\r\n            var i, j, nextNodeInDom, lastNode, nodeToInsert, mappedNodes, activeElement;\r\n\r\n            // Since most browsers remove the focus from an element when it's moved to another location,\r\n            // save the focused element and try to restore it later.\r\n            try {\r\n                activeElement = domNode.ownerDocument.activeElement;\r\n            } catch(e) {\r\n                // IE9 throws if you access activeElement during page load (see issue #703)\r\n            }\r\n\r\n            // Try to reduce overall moved nodes by first moving the ones that were marked as moved by the edit script\r\n            if (itemsToMoveFirstIndexes.length) {\r\n                while ((i = itemsToMoveFirstIndexes.shift()) != undefined) {\r\n                    mapData = newMappingResult[i];\r\n                    for (lastNode = undefined; i; ) {\r\n                        if ((mappedNodes = newMappingResult[--i].mappedNodes) && mappedNodes.length) {\r\n                            lastNode = mappedNodes[mappedNodes.length-1];\r\n                            break;\r\n                        }\r\n                    }\r\n                    for (j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\r\n                        ko.virtualElements.insertAfter(domNode, nodeToInsert, lastNode);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\r\n            for (i = 0, nextNodeInDom = ko.virtualElements.firstChild(domNode); mapData = newMappingResult[i]; i++) {\r\n                // Get nodes for newly added items\r\n                if (!mapData.mappedNodes)\r\n                    ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\r\n\r\n                // Put nodes in the right place if they aren't there already\r\n                for (j = 0; nodeToInsert = mapData.mappedNodes[j]; nextNodeInDom = nodeToInsert.nextSibling, lastNode = nodeToInsert, j++) {\r\n                    if (nodeToInsert !== nextNodeInDom)\r\n                        ko.virtualElements.insertAfter(domNode, nodeToInsert, lastNode);\r\n                }\r\n\r\n                // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\r\n                if (!mapData.initialized && callbackAfterAddingNodes) {\r\n                    callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\r\n                    mapData.initialized = true;\r\n                }\r\n            }\r\n\r\n            // Restore the focused element if it had lost focus\r\n            if (activeElement && domNode.ownerDocument.activeElement != activeElement) {\r\n                activeElement.focus();\r\n            }\r\n\r\n            // If there's a beforeRemove callback, call it after reordering.\r\n            // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\r\n            // some sort of animation, which is why we first reorder the nodes that will be removed. If the\r\n            // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\r\n            // Perhaps we'll make that change in the future if this scenario becomes more common.\r\n            callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\r\n\r\n            // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\r\n            // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\r\n            // with an actual item in the array and appear as \"retained\" or \"moved\".\r\n            for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\r\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\r\n            }\r\n\r\n            // Finally call afterMove and afterAdd callbacks\r\n            callCallback(options['afterMove'], itemsForMoveCallbacks);\r\n            callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\r\n        }\r\n    })();\r\n\r\n    ko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\r\n    ko.nativeTemplateEngine = function () {\r\n        this['allowTemplateRewriting'] = false;\r\n    }\r\n\r\n    ko.nativeTemplateEngine.prototype = new ko.templateEngine();\r\n    ko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\r\n    ko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\r\n        var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\r\n            templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\r\n            templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\r\n\r\n        if (templateNodes) {\r\n            return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\r\n        } else {\r\n            var templateText = templateSource['text']();\r\n            return ko.utils.parseHtmlFragment(templateText, templateDocument);\r\n        }\r\n    };\r\n\r\n    ko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\r\n    ko.setTemplateEngine(ko.nativeTemplateEngine.instance);\r\n\r\n    ko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\r\n    (function() {\r\n        ko.jqueryTmplTemplateEngine = function () {\r\n            // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\r\n            // doesn't expose a version number, so we have to infer it.\r\n            // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\r\n            // which KO internally refers to as version \"2\", so older versions are no longer detected.\r\n            var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\r\n                if (!jQueryInstance || !(jQueryInstance['tmpl']))\r\n                    return 0;\r\n                // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\r\n                try {\r\n                    if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\r\n                        // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\r\n                        return 2; // Final version of jquery.tmpl\r\n                    }\r\n                } catch(ex) { /* Apparently not the version we were looking for */ }\r\n\r\n                return 1; // Any older version that we don't support\r\n            })();\r\n\r\n            function ensureHasReferencedJQueryTemplates() {\r\n                if (jQueryTmplVersion < 2)\r\n                    throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\r\n            }\r\n\r\n            function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\r\n                return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\r\n            }\r\n\r\n            this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\r\n                templateDocument = templateDocument || document;\r\n                options = options || {};\r\n                ensureHasReferencedJQueryTemplates();\r\n\r\n                // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\r\n                var precompiled = templateSource['data']('precompiled');\r\n                if (!precompiled) {\r\n                    var templateText = templateSource['text']() || \"\";\r\n                    // Wrap in \"with($whatever.koBindingContext) { ... }\"\r\n                    templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\r\n\r\n                    precompiled = jQueryInstance['template'](null, templateText);\r\n                    templateSource['data']('precompiled', precompiled);\r\n                }\r\n\r\n                var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\r\n                var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\r\n\r\n                var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\r\n                resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\r\n\r\n                jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\r\n                return resultNodes;\r\n            };\r\n\r\n            this['createJavaScriptEvaluatorBlock'] = function(script) {\r\n                return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\r\n            };\r\n\r\n            this['addTemplate'] = function(templateName, templateMarkup) {\r\n                document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\r\n            };\r\n\r\n            if (jQueryTmplVersion > 0) {\r\n                jQueryInstance['tmpl']['tag']['ko_code'] = {\r\n                    open: \"__.push($1 || '');\"\r\n                };\r\n                jQueryInstance['tmpl']['tag']['ko_with'] = {\r\n                    open: \"with($1) {\",\r\n                    close: \"} \"\r\n                };\r\n            }\r\n        };\r\n\r\n        ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\r\n        ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\r\n\r\n        // Use this one by default *only if jquery.tmpl is referenced*\r\n        var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\r\n        if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\r\n            ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\r\n\r\n        ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\r\n\r\n\r\n    })();\r\n\r\n    return ko;\r\n});"]}